(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{"./src/elements/image/__docs__/image.docs.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var i=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),s=t("./node_modules/docz/dist/index.esm.js"),b=t("./src/__docs__/components/index.ts"),r=t("./src/base/helpers/variables.ts"),m=t("./src/elements/index.ts"),c=t("./src/elements/image/image.tsx"),p=t("./src/elements/image/image-container.tsx"),d={},l="wrapper";function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)(l,Object.assign({},d,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"image"},"Image"),Object(o.b)("p",null,"A container for ",Object(o.b)("strong",{parentName:"p"},"responsive images"),"."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"<Image.Container>")," is a precisely ",Object(o.b)("strong",{parentName:"p"},"sized container")," so your layout isn't broken because images are loading or missing."),Object(o.b)(s.c,{__position:0,__code:'<Image.Container size={128}>\n  <Image src="https://bulma.io/images/placeholders/128x128.png" />\n</Image.Container>',__scope:{props:this?this.props:t,Playground:s.c,ForwardRefAsExoticComponentDoc:b.b,mapEnumerable:b.g,DEFAULTS:r.a,Table:m.r,Image:c.a,ImageContainer:p.b,IMAGE_CONTAINER_DEFAULTS:p.a},mdxType:"Playground"},Object(o.b)(c.a.Container,{size:128},Object(o.b)(c.a,{src:"https://bulma.io/images/placeholders/128x128.png",mdxType:"Image"}))),Object(o.b)("h3",{id:"fixed-square-images-ie-dimmensional"},"Fixed square images (i.e. dimmensional)"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"size")," prop on ",Object(o.b)("inlineCode",{parentName:"p"},"<Image.Container>")," to contain it's underlying image to a fixed square size, useful for ",Object(o.b)("strong",{parentName:"p"},"avatars"),"."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"The ",Object(o.b)("inlineCode",{parentName:"em"},"<Image.Container>")," sizes that are ",Object(o.b)("strong",{parentName:"em"},"numbers")," are dimmensions")),Object(o.b)(s.c,{__position:1,__code:"<Table bordered>\n  <thead>\n    <tr>\n      <th>\n        <code>Image.Container</code> size\n      </th>\n      <th>Result</th>\n      <th>Dimmensions</th>\n    </tr>\n  </thead>\n  <tbody>\n    {IMAGE_CONTAINER_DEFAULTS.dimmensions.map((size, i) => (\n      <tr key={i}>\n        <td>\n          <code>{size}</code>\n        </td>\n        <td>\n          <Image.Container size={size}>\n            <Image\n              src={`https://bulma.io/images/placeholders/${size}x${size}.png`}\n            />\n          </Image.Container>\n        </td>\n        <td>{size}px sq.</td>\n      </tr>\n    ))}\n  </tbody>\n</Table>",__scope:{props:this?this.props:t,Playground:s.c,ForwardRefAsExoticComponentDoc:b.b,mapEnumerable:b.g,DEFAULTS:r.a,Table:m.r,Image:c.a,ImageContainer:p.b,IMAGE_CONTAINER_DEFAULTS:p.a},mdxType:"Playground"},Object(o.b)(m.r,{bordered:!0,mdxType:"Table"},Object(o.b)("thead",null,Object(o.b)("tr",null,Object(o.b)("th",null,Object(o.b)("code",null,"Image.Container")," size"),Object(o.b)("th",null,"Result"),Object(o.b)("th",null,"Dimmensions"))),Object(o.b)("tbody",null,p.a.dimmensions.map(function(e,n){return Object(o.b)("tr",{key:n},Object(o.b)("td",null,Object(o.b)("code",null,e)),Object(o.b)("td",null,Object(o.b)(c.a.Container,{size:e},Object(o.b)(c.a,{src:"https://bulma.io/images/placeholders/".concat(e,"x").concat(e,".png"),mdxType:"Image"}))),Object(o.b)("td",null,e,"px sq."))})))),Object(o.b)("h3",{id:"rounded-images"},"Rounded images"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"rounded")," prop on an ",Object(o.b)("inlineCode",{parentName:"p"},"<Image>")," to round it."),Object(o.b)(s.c,{__position:2,__code:'<Image.Container size={128}>\n  <Image rounded src="https://bulma.io/images/placeholders/128x128.png" />\n</Image.Container>',__scope:{props:this?this.props:t,Playground:s.c,ForwardRefAsExoticComponentDoc:b.b,mapEnumerable:b.g,DEFAULTS:r.a,Table:m.r,Image:c.a,ImageContainer:p.b,IMAGE_CONTAINER_DEFAULTS:p.a},mdxType:"Playground"},Object(o.b)(c.a.Container,{size:128},Object(o.b)(c.a,{rounded:!0,src:"https://bulma.io/images/placeholders/128x128.png",mdxType:"Image"}))),Object(o.b)("h3",{id:"retina-images"},"Retina images"),Object(o.b)("p",null,"Because the ",Object(o.b)("inlineCode",{parentName:"p"},"<Image.Container>")," fixes the size of the underlying image, you can use a higher resolution image and contain it down to a smaller size."),Object(o.b)("p",null,"For example, if you put an image with dimmensions ",Object(o.b)("inlineCode",{parentName:"p"},"256x256")," in an ",Object(o.b)("inlineCode",{parentName:"p"},"<Image.Container>")," with size ",Object(o.b)("inlineCode",{parentName:"p"},"128")," it'll be resized to ",Object(o.b)("inlineCode",{parentName:"p"},"128x128"),"."),Object(o.b)(s.c,{__position:3,__code:'<Image.Container size={128}>\n  <Image src="https://bulma.io/images/placeholders/256x256.png" />\n</Image.Container>',__scope:{props:this?this.props:t,Playground:s.c,ForwardRefAsExoticComponentDoc:b.b,mapEnumerable:b.g,DEFAULTS:r.a,Table:m.r,Image:c.a,ImageContainer:p.b,IMAGE_CONTAINER_DEFAULTS:p.a},mdxType:"Playground"},Object(o.b)(c.a.Container,{size:128},Object(o.b)(c.a,{src:"https://bulma.io/images/placeholders/256x256.png",mdxType:"Image"}))),Object(o.b)("h3",{id:"responsive-images-ie-ratios"},"Responsive images (i.e. ratios)"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"size")," prop on ",Object(o.b)("inlineCode",{parentName:"p"},"<Image.Container>")," to contain the underlying image to a known size ratio, useful when you dont' know the exact dimmensions."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"The ",Object(o.b)("inlineCode",{parentName:"em"},"<Image.Container>")," sizes that are ",Object(o.b)("strong",{parentName:"em"},"strings")," are ratios (responsive sizes)")),Object(o.b)("p",null,"Regardless of whether the child is an ",Object(o.b)("inlineCode",{parentName:"p"},"img")," or any other type of component, it will gain the ",Object(o.b)("inlineCode",{parentName:"p"},"has-ratio")," class automatically.\nTherefore, ",Object(o.b)("inlineCode",{parentName:"p"},"<Image.Container>")," and ",Object(o.b)("inlineCode",{parentName:"p"},"<Image>")," can be used to size any type of underlying component using the ",Object(o.b)("inlineCode",{parentName:"p"},"as")," prop."),Object(o.b)(s.c,{__position:4,__code:"() => {\n  const sizeMap = [\n    { size: 'square', name: '480x480', description: 'square (1 by 1)' },\n    { size: '1by1', name: '480x480', description: '1 by 1' },\n    { size: '5by4', name: '600x480', description: '5 by 4' },\n    { size: '4by3', name: '640x480', description: '4 by 3' },\n    { size: '3by2', name: '480x320', description: '3 by 2' },\n    { size: '5by3', name: '800x480', description: '5 by 3' },\n    { size: '16by9', name: '640x360', description: '16 by 9' },\n    { size: '2by1', name: '640x320', description: '2 by 1' },\n    { size: '3by1', name: '720x240', description: '3 by 1' },\n    { size: '4by5', name: '480x600', description: '4 by 5' },\n    { size: '3by4', name: '480x640', description: '3 by 4' },\n    { size: '2by3', name: '320x480', description: '2 by 3' },\n    { size: '3by5', name: '480x800', description: '3 by 5' },\n    { size: '9by16', name: '360x640', description: '9 by 16' },\n    { size: '1by2', name: '320x640', description: '1 by 2' },\n    { size: '1by3', name: '240x720', description: '1 by 3' },\n  ]\n  return (\n    <Table bordered>\n      <thead>\n        <tr>\n          <th>\n            <code>Image.Container</code> size\n          </th>\n          <th>Result</th>\n          <th>Dimmensions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {sizeMap.map(({ size, name, description }) => (\n          <tr key={size}>\n            <td>\n              <code>{size}</code>\n            </td>\n            <td>\n              <Image.Container size={size}>\n                <Image\n                  src={`https://bulma.io/images/placeholders/${name}.png`}\n                />\n              </Image.Container>\n            </td>\n            <td>{description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}",__scope:{props:this?this.props:t,Playground:s.c,ForwardRefAsExoticComponentDoc:b.b,mapEnumerable:b.g,DEFAULTS:r.a,Table:m.r,Image:c.a,ImageContainer:p.b,IMAGE_CONTAINER_DEFAULTS:p.a},mdxType:"Playground"},function(){return Object(o.b)(m.r,{bordered:!0,mdxType:"Table"},Object(o.b)("thead",null,Object(o.b)("tr",null,Object(o.b)("th",null,Object(o.b)("code",null,"Image.Container")," size"),Object(o.b)("th",null,"Result"),Object(o.b)("th",null,"Dimmensions"))),Object(o.b)("tbody",null,[{size:"square",name:"480x480",description:"square (1 by 1)"},{size:"1by1",name:"480x480",description:"1 by 1"},{size:"5by4",name:"600x480",description:"5 by 4"},{size:"4by3",name:"640x480",description:"4 by 3"},{size:"3by2",name:"480x320",description:"3 by 2"},{size:"5by3",name:"800x480",description:"5 by 3"},{size:"16by9",name:"640x360",description:"16 by 9"},{size:"2by1",name:"640x320",description:"2 by 1"},{size:"3by1",name:"720x240",description:"3 by 1"},{size:"4by5",name:"480x600",description:"4 by 5"},{size:"3by4",name:"480x640",description:"3 by 4"},{size:"2by3",name:"320x480",description:"2 by 3"},{size:"3by5",name:"480x800",description:"3 by 5"},{size:"9by16",name:"360x640",description:"9 by 16"},{size:"1by2",name:"320x640",description:"1 by 2"},{size:"1by3",name:"240x720",description:"1 by 3"}].map(function(e){var n=e.size,t=e.name,i=e.description;return Object(o.b)("tr",{key:n},Object(o.b)("td",null,Object(o.b)("code",null,n)),Object(o.b)("td",null,Object(o.b)(c.a.Container,{size:n},Object(o.b)(c.a,{src:"https://bulma.io/images/placeholders/".concat(t,".png"),mdxType:"Image"}))),Object(o.b)("td",null,i))})))}),Object(o.b)("h2",{id:"api"},"API"),Object(o.b)(b.b,{component:c.a,docPath:"/elements/image",props:{rounded:{description:"rounds the image",typeName:"boolean"}},mdxType:"ForwardRefAsExoticComponentDoc"}),Object(o.b)(b.b,{component:c.a.Container,customize:!0,docPath:"/elements/image",props:{size:{description:"sets the dimmension of the contained image",typeName:"string | number (literal)",typeTip:Object(b.g)([].concat(Object(i.a)(p.a.dimmensions),Object(i.a)(p.a.ratios)))}},mdxType:"ForwardRefAsExoticComponentDoc"}))}u&&u===Object(u)&&Object.isExtensible(u)&&Object.defineProperty(u,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/elements/image/__docs__/image.docs.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=src-elements-image-docs-image-docs.fc493be904ddd6f2633b.js.map