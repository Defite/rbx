{"version":3,"sources":["/Users/dfee/code/rbx/src/__docs__/components/component-doc/as-doc.tsx","/Users/dfee/code/rbx/src/__docs__/components/feature/feature-group.tsx","/Users/dfee/code/rbx/src/__docs__/components/feature/feature.tsx","/Users/dfee/code/rbx/src/__docs__/components/feature/as-doc.tsx","/Users/dfee/code/rbx/src/__docs__/components/feature/customize-feature.tsx","/Users/dfee/code/rbx/src/__docs__/components/feature/doc-feature.tsx","/Users/dfee/code/rbx/src/__docs__/components/feature/component-features.tsx","/Users/dfee/code/rbx/src/__docs__/components/simple-props-table/utils.ts","/Users/dfee/code/rbx/src/__docs__/components/simple-props-table/default-value-cell.tsx","/Users/dfee/code/rbx/src/__docs__/components/simple-props-table/description-cell.tsx","/Users/dfee/code/rbx/src/__docs__/components/simple-props-table/name-cell.tsx","/Users/dfee/code/rbx/src/__docs__/components/simple-props-table/required-cell.tsx","/Users/dfee/code/rbx/src/__docs__/components/simple-props-table/type-cell.tsx","/Users/dfee/code/rbx/src/__docs__/components/simple-props-table/simple-props-table-row.tsx","/Users/dfee/code/rbx/src/__docs__/components/simple-props-table/simple-props-table.tsx","/Users/dfee/code/rbx/src/__docs__/components/component-doc/component-doc.tsx","/Users/dfee/code/rbx/src/__docs__/components/component-doc/ref-doc.tsx","/Users/dfee/code/rbx/src/__docs__/components/component-doc/forward-ref-as-exotic-component-doc.tsx","/Users/dfee/code/rbx/src/__docs__/components/frame.tsx","/Users/dfee/code/rbx/src/__docs__/components/option-block.tsx","/Users/dfee/code/rbx/src/__docs__/components/utils.ts","/Users/dfee/code/rbx/src/__docs__/components/index.ts"],"names":["asDoc","description","react_default","a","createElement","typeName","FeatureGroup","_ref","children","src_elements","kind","Feature","Object","assign","primaryName","primaryColor","secondaryName","secondaryColor","url","tagGroupProps","undefined","test","as","Link","to","href","target","Group","gapless","color","AsDoc","asType","feature_Feature","CustomizeFeature","customize","name","DocFeature","docPath","isBulmaPath","isRemoteUrl","concat","ComponentFeatures","as_doc_AsDoc","customize_feature_CustomizeFeature","doc_feature_DocFeature","lexSortObj","obj","keys","sort","b","map","key","value","DefaultValueCell","defaultValue","Cell","textColor","stringDefaultValue","replace","DescriptionCell","NameCell","RequiredCell","required","props","TypeCell","typeTip","base","tooltip","tooltipMultiline","SimplePropsTableRow","hasDescription","propDoc","Row","name_cell_NameCell","type_cell_TypeCell","required_cell_RequiredCell","default_value_cell_DefaultValueCell","description_cell_DescriptionCell","SimplePropsTable","some","thDescription","Heading","style","width","bordered","narrow","hoverable","fullwidth","Head","Body","_ref2","simple_props_table_row_SimplePropsTableRow","ComponentDoc","componentFeaturesProps","Fragment","size","component_features_ComponentFeatures","simple_props_table_SimplePropsTable","refDoc","ForwardRefAsExoticComponentDoc","component","defaultProps","asTypeString","displayName","JSON","stringify","extendedProps","objectSpread","ref","_i","_Object$keys","length","propName","component_doc_ComponentDoc","Frame","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","defineProperty","assertThisInitialized","React","createRef","current","contentDocument","_links","from","document","getElementsByTagName","link","rel","head","appendChild","cloneNode","_i2","_styles","body","iframeRoot","cloneStyles","forceUpdate","doUpdateHeight","forceHeight","height","scrollHeight","updateHeight","updateHeightDelay","updateHeightEnabled","updateHeightTimeout","setTimeout","inherits","createClass","addEventListener","handleLoad","removeEventListener","clearTimeout","sandbox","srcDoc","ReactDOM","createPortal","Component","hrStyle","backgroundColor","borderColor","borderStyle","borderWidth","OptionBlock","normalizedValue","esm_typeof","normalizedProp","marginRight","_this2","_this$props","index","hrNode","renderProp","mapEnumerable","v","join","__webpack_require__","d","__webpack_exports__","as_doc_asDoc","forward_ref_as_exotic_component_doc_ForwardRefAsExoticComponentDoc","ref_doc_refDoc","frame_Frame","option_block_OptionBlock","utils_mapEnumerable"],"mappings":"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","file":"static/js/src-base-docs-badge-docs~src-base-docs-generic-docs~src-base-docs-tooltip-docs~src-components-breadc~f4f31ad4.704fdde9.js","sourcesContent":["import React from \"react\";\n\nimport { PropDoc } from \"../simple-props-table/types\";\n\nexport const asDoc: PropDoc = {\n  description: (\n    <span>\n      the React Component or JSX Element (e.g. <code>\"div\"</code> or{\" \"}\n      <code>span</code>) to render as\n    </span>\n  ),\n  typeName: \"ReactType\",\n};\n","import React from \"react\";\n\nimport { Field } from \"src/elements\";\n\nexport type FeatureGroupProps = {\n  children: React.ReactNode;\n};\n\nexport const FeatureGroup: React.FC<FeatureGroupProps> = ({ children }) => (\n  <Field kind=\"group\" children={children} />\n);\n","import { Link } from \"docz\";\nimport React from \"react\";\n\nimport { Variables } from \"src/base/helpers/variables\";\nimport { Control, Tag } from \"src/elements\";\n\nimport { FeatureGroup } from \"./feature-group\";\n\nexport type FeatureProps = {\n  primaryName: string;\n  primaryColor: Variables[\"colors\"];\n  secondaryName: string;\n  secondaryColor: Variables[\"colors\"];\n  url?: string;\n};\n\nexport const Feature = Object.assign(\n  ({\n    primaryName,\n    primaryColor,\n    secondaryName,\n    secondaryColor,\n    url,\n  }: FeatureProps) => {\n    const tagGroupProps =\n      url === undefined\n        ? {}\n        : /^\\/[a-z]/.test(url) // Local path, e.g. '/somewhere'\n        ? { as: Link, to: url }\n        : {\n            as: \"a\" as keyof JSX.IntrinsicElements,\n            href: url,\n            target: \"_blank\",\n          };\n\n    return (\n      <Control>\n        <Tag.Group gapless {...tagGroupProps}>\n          <Tag color={primaryColor}>{primaryName}</Tag>\n          <Tag color={secondaryColor}>{secondaryName}</Tag>\n        </Tag.Group>\n      </Control>\n    );\n  },\n  { Group: FeatureGroup },\n);\n","import React from \"react\";\n\nimport { Feature } from \"./feature\";\n\nexport type AsDocProps = {\n  asType: string;\n};\n\nexport const AsDoc: React.FC<AsDocProps> = ({ asType }) => (\n  <Feature\n    primaryName=\"as\"\n    primaryColor=\"light\"\n    secondaryName={asType}\n    secondaryColor=\"warning\"\n    url=\"/architecture/inversion-of-control\"\n  />\n);\n","import React from \"react\";\n\nimport { Feature } from \"./feature\";\n\nexport type CustomizeFeatureProps = {\n  customize?: boolean;\n};\n\nexport const CustomizeFeature: React.FC<CustomizeFeatureProps> = ({\n  customize,\n}) => {\n  const name = customize === true ? \"yes\" : \"no\";\n  const color = customize === true ? \"success\" : \"danger\";\n\n  return (\n    <Feature\n      primaryName=\"customize\"\n      primaryColor=\"light\"\n      secondaryName={name}\n      secondaryColor={color}\n      url=\"/architecture/customize\"\n    />\n  );\n};\n","import React from \"react\";\n\nimport { Feature } from \"./feature\";\nimport { Variables } from \"../../../base/helpers/variables\";\n\nexport type DocFeatureProps = {\n  docPath?: string;\n};\n\nexport const DocFeature: React.FC<DocFeatureProps> = ({ docPath }) => {\n  const isBulmaPath = docPath !== undefined ? !/^http.+/.test(docPath) : false;\n  const isRemoteUrl = docPath !== undefined && !isBulmaPath;\n\n  let url: string | undefined;\n  let secondaryName: string = \"n/a\";\n  let secondaryColor: Variables[\"colors\"] = \"dark\";\n\n  if (isBulmaPath) {\n    url = `https://bulma.io/documentation${docPath}`;\n    secondaryName = \"Bulma\";\n    secondaryColor = \"primary\";\n  } else if (isRemoteUrl) {\n    url = docPath;\n    secondaryName = \"Third Party\";\n    secondaryColor = \"info\";\n  }\n\n  return (\n    <Feature\n      primaryName=\"docs\"\n      primaryColor=\"light\"\n      secondaryName={secondaryName}\n      secondaryColor={secondaryColor}\n      url={url}\n    />\n  );\n};\n","import React from \"react\";\n\nimport { AsDoc, AsDocProps } from \"./as-doc\";\nimport { CustomizeFeature, CustomizeFeatureProps } from \"./customize-feature\";\nimport { DocFeature, DocFeatureProps } from \"./doc-feature\";\nimport { Feature } from \"./feature\";\n\nexport type ComponentFeaturesProps = AsDocProps &\n  DocFeatureProps &\n  CustomizeFeatureProps;\n\nexport const ComponentFeatures: React.FC<ComponentFeaturesProps> = ({\n  asType,\n  docPath,\n  customize,\n}) => (\n  <Feature.Group>\n    <AsDoc asType={asType} />\n    <CustomizeFeature customize={customize} />\n    <DocFeature docPath={docPath} />\n  </Feature.Group>\n);\n","export const lexSortObj = <T extends object>(obj: { [K: string]: T }) =>\n  Object.keys(obj)\n    .sort((a, b) => (a < b ? -1 : a === b ? 0 : 1))\n    .map(key => ({ key, value: obj[key] }));\n","import React from \"react\";\n\nimport { Table } from \"src/elements\";\n\nimport { PropDoc } from \"./types\";\n\nexport type DefaultValueCellProps = {\n  defaultValue: PropDoc[\"defaultValue\"];\n};\n\nexport const DefaultValueCell = ({ defaultValue }: DefaultValueCellProps) => {\n  if (defaultValue === undefined) {\n    return (\n      <Table.Cell textColor=\"grey-light\">\n        <em>-</em>\n      </Table.Cell>\n    );\n  }\n  const stringDefaultValue =\n    defaultValue === \"''\" ? \"[Empty String]\" : defaultValue.replace(/\\'/g, \"\");\n\n  return (\n    <Table.Cell>\n      <code>{stringDefaultValue}</code>\n    </Table.Cell>\n  );\n};\n","import React from \"react\";\n\nimport { Table } from \"src/elements\";\n\nimport { PropDoc } from \"./types\";\n\nexport type DescriptionCellProps = {\n  description: PropDoc[\"description\"];\n};\n\nexport const DescriptionCell = ({ description }: DescriptionCellProps) => {\n  if (description === undefined) {\n    return <Table.Cell />;\n  }\n\n  return <Table.Cell>{description}</Table.Cell>;\n};\n","import React from \"react\";\n\nimport { Table } from \"src/elements\";\n\nexport type NameCellProps = { name: string };\n\nexport const NameCell = ({ name }: NameCellProps) => (\n  <Table.Cell>\n    <code>{name}</code>\n  </Table.Cell>\n);\n","import React from \"react\";\n\nimport { HelpersProps } from \"src/base/helpers\";\nimport { Table } from \"src/elements\";\n\nimport { PropDoc } from \"./types\";\n\nexport type RequiredCellProps = {\n  required: PropDoc[\"required\"];\n};\n\nexport const RequiredCell = ({ required }: RequiredCellProps) => {\n  const props: {\n    children: React.ReactNode;\n    textColor: HelpersProps[\"textColor\"];\n  } = {\n    children: required === true ? \"true\" : \"false\",\n    textColor: required === true ? \"danger\" : \"grey-light\",\n  };\n\n  return <Table.Cell {...props} />;\n};\n","import React from \"react\";\n\nimport { Generic } from \"src/base\";\nimport { Table } from \"src/elements\";\n\nimport { PropDoc } from \"./types\";\n\nexport type TypeCellProps = {\n  typeName: PropDoc[\"typeName\"];\n  typeTip: PropDoc[\"typeTip\"];\n};\n\nexport const TypeCell = ({ typeName, typeTip }: TypeCellProps) => (\n  <Table.Cell>\n    <Generic as=\"code\" tooltip={typeTip} tooltipMultiline>\n      {typeName}\n    </Generic>\n  </Table.Cell>\n);\n","import React from \"react\";\n\nimport { Table } from \"src/elements\";\n\nimport { DefaultValueCell } from \"./default-value-cell\";\nimport { DescriptionCell } from \"./description-cell\";\nimport { NameCell } from \"./name-cell\";\nimport { PropDoc } from \"./types\";\nimport { RequiredCell } from \"./required-cell\";\nimport { TypeCell } from \"./type-cell\";\n\nexport type SimplePropsTableRowProps = {\n  hasDescription?: boolean;\n  name: string;\n  propDoc: PropDoc;\n};\n\nexport const SimplePropsTableRow = ({\n  hasDescription,\n  name,\n  propDoc,\n}: SimplePropsTableRowProps) => (\n  <Table.Row key={name}>\n    <NameCell name={name} />\n    <TypeCell typeName={propDoc.typeName} typeTip={propDoc.typeTip} />\n    <RequiredCell required={propDoc.required} />\n    <DefaultValueCell defaultValue={propDoc.defaultValue} />\n    {hasDescription && <DescriptionCell description={propDoc.description} />}\n  </Table.Row>\n);\n","// tslint:disable:no-submodule-imports\nimport React from \"react\";\n\nimport { Table } from \"src/elements\";\n\nimport { PropDoc } from \"./types\";\nimport { lexSortObj } from \"./utils\";\nimport { SimplePropsTableRow } from \"./simple-props-table-row\";\n\nexport type SimplePropsTableProps = {\n  props?: Record<string, PropDoc>;\n};\n\nexport const SimplePropsTable = ({ props }: SimplePropsTableProps) => {\n  if (props === undefined) {\n    return null;\n  }\n\n  const hasDescription = Object.keys(props).some(\n    (name: string) => props[name].description !== undefined,\n  );\n\n  const thDescription = hasDescription ? (\n    <Table.Heading style={{ width: \"40%\" }}>Description</Table.Heading>\n  ) : (\n    undefined\n  );\n\n  return (\n    <Table bordered narrow hoverable fullwidth>\n      <Table.Head>\n        <Table.Row>\n          <Table.Heading>Property</Table.Heading>\n          <Table.Heading>Type</Table.Heading>\n          <Table.Heading>Required</Table.Heading>\n          <Table.Heading>Default</Table.Heading>\n          {thDescription}\n        </Table.Row>\n      </Table.Head>\n      <Table.Body>\n        {lexSortObj(props).map(({ key: name, value: propDoc }) => (\n          <SimplePropsTableRow\n            key={name}\n            hasDescription={hasDescription}\n            name={name}\n            propDoc={propDoc}\n          />\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n","// tslint:disable:no-submodule-imports\nimport React from \"react\";\n\nimport { Title } from \"src/elements\";\n\nimport {\n  ComponentFeatures,\n  ComponentFeaturesProps,\n} from \"../feature/component-features\";\nimport {\n  SimplePropsTable,\n  SimplePropsTableProps,\n} from \"../simple-props-table/simple-props-table\";\n\nexport type ComponentDocProps = {\n  asType: string;\n  customize?: ComponentFeaturesProps[\"customize\"];\n  docPath?: ComponentFeaturesProps[\"docPath\"];\n  name: string;\n  props: SimplePropsTableProps[\"props\"];\n};\n\nexport const ComponentDoc = ({\n  asType,\n  customize,\n  docPath,\n  name,\n  props,\n}: ComponentDocProps) => {\n  const componentFeaturesProps = { asType, customize, docPath };\n\n  return (\n    <React.Fragment>\n      <Title as=\"h4\" size={4}>\n        {name}\n      </Title>\n      <ComponentFeatures {...componentFeaturesProps} />\n      <SimplePropsTable props={props} />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\n\nimport { PropDoc } from \"../simple-props-table/types\";\n\nexport const refDoc: PropDoc = {\n  description: (\n    <span>\n      a handle to the underlying <code>React Component</code> or{\" \"}\n      <code>JSX Element</code>\n    </span>\n  ),\n  typeName: \"Ref\",\n};\n","// tslint:disable:no-submodule-imports\nimport React from \"react\";\n\nimport { ForwardRefAsExoticComponent } from \"src/base/exotic\";\n\nimport { ComponentFeaturesProps } from \"../feature/component-features\";\nimport { SimplePropsTableProps } from \"../simple-props-table/simple-props-table\";\nimport { ComponentDoc, ComponentDocProps } from \"./component-doc\";\nimport { asDoc } from \"./as-doc\";\nimport { refDoc } from \"./ref-doc\";\n\nexport type ForwardRefAsExoticComponentDocProps = {\n  // tslint:disable-next-line:no-any\n  component: ForwardRefAsExoticComponent<any, any>;\n  customize: ComponentDocProps[\"customize\"];\n  docPath?: ComponentFeaturesProps[\"docPath\"];\n  props: SimplePropsTableProps[\"props\"];\n};\n\nexport const ForwardRefAsExoticComponentDoc = ({\n  component,\n  customize,\n  docPath,\n  props,\n}: ForwardRefAsExoticComponentDocProps) => {\n  const asType = component.defaultProps.as as React.ReactType;\n  const asTypeString =\n    typeof asType === \"string\"\n      ? asType\n      : asType.displayName !== undefined\n      ? asType.displayName\n      : JSON.stringify(asType);\n\n  const extendedProps: SimplePropsTableProps[\"props\"] = {\n    as: asDoc,\n    ref: refDoc,\n    ...props,\n  };\n\n  for (const propName of Object.keys(extendedProps)) {\n    const defaultValue = component.defaultProps[propName];\n    if (defaultValue !== undefined) {\n      extendedProps[propName].defaultValue = JSON.stringify(defaultValue);\n    }\n  }\n\n  return (\n    <ComponentDoc\n      asType={asTypeString}\n      customize={customize}\n      docPath={docPath}\n      name={component.displayName}\n      props={extendedProps}\n    />\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport type FrameRenderProps = {\n  document?: Document;\n};\n\nexport type RenderFunction = (props: FrameRenderProps) => React.ReactNode;\n\nexport type FrameProps = {\n  children: RenderFunction | React.ReactNode;\n  forceHeight?: boolean;\n  style?: React.CSSProperties;\n  updateHeightDelay?: number;\n};\n\nexport class Frame extends React.Component<FrameProps> {\n  public static defaultProps = {\n    forceHeight: false,\n    updateHeightDelay: 200,\n  };\n\n  private readonly ref = React.createRef<HTMLIFrameElement>();\n  private updateHeightEnabled = false;\n  private updateHeightTimeout: NodeJS.Timeout | undefined;\n  private iframeRoot: HTMLElement | undefined;\n\n  public componentDidMount() {\n    if (this.ref.current !== null) {\n      this.ref.current.addEventListener(\"load\", this.handleLoad);\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.ref.current !== null) {\n      this.ref.current.removeEventListener(\"load\", this.handleLoad);\n      if (this.updateHeightEnabled) {\n        this.updateHeightEnabled = false;\n      }\n      if (this.updateHeightTimeout !== undefined) {\n        clearTimeout(this.updateHeightTimeout);\n      }\n    }\n  }\n\n  public render() {\n    const { children } = this.props;\n\n    // tslint:disable:react-a11y-iframes\n    return (\n      <iframe\n        ref={this.ref}\n        sandbox=\"allow-same-origin\"\n        srcDoc={\"<!DOCTYPE html>\"}\n        style={{\n          height: \"0px\",\n          width: \"100%\",\n          ...this.props.style,\n        }}\n      >\n        {this.iframeRoot !== undefined &&\n        this.ref.current !== null &&\n        this.ref.current.contentDocument !== null\n          ? typeof children === \"function\"\n            ? ReactDOM.createPortal(\n                (children as RenderFunction)({\n                  document: this.ref.current.contentDocument,\n                }),\n                this.iframeRoot,\n              )\n            : ReactDOM.createPortal(children, this.iframeRoot)\n          : undefined}\n      </iframe>\n    );\n    // tslint:enable:react-a11y-iframes\n  }\n\n  private readonly cloneStyles = () => {\n    if (\n      this.ref.current !== null &&\n      this.ref.current.contentDocument !== null\n    ) {\n      const links = Array.from(document.getElementsByTagName(\"link\"));\n      for (const link of links) {\n        if (link.rel === \"stylesheet\") {\n          this.ref.current.contentDocument.head.appendChild(\n            link.cloneNode(true),\n          );\n        }\n      }\n\n      const styles = Array.from(document.head.getElementsByTagName(\"style\"));\n      for (const style of styles) {\n        this.ref.current.contentDocument.head.appendChild(\n          style.cloneNode(true),\n        );\n      }\n    }\n  };\n\n  private readonly handleLoad = () => {\n    if (\n      this.ref.current !== null &&\n      this.ref.current.contentDocument !== null &&\n      this.ref.current.contentDocument.body !== null\n    ) {\n      this.iframeRoot = this.ref.current.contentDocument.body;\n      this.cloneStyles();\n      this.forceUpdate();\n      this.doUpdateHeight();\n    }\n  };\n\n  private readonly doUpdateHeight = () => {\n    if (\n      this.props.forceHeight !== true &&\n      this.ref.current !== null &&\n      this.ref.current.contentDocument !== null &&\n      this.ref.current.contentDocument.body !== null\n    ) {\n      this.ref.current.style.height = `${\n        this.ref.current.contentDocument.body.scrollHeight\n      }px`;\n    }\n    this.updateHeight();\n  };\n\n  private readonly updateHeight = () => {\n    const { updateHeightDelay } = this.props;\n    if (updateHeightDelay !== 0 && updateHeightDelay !== undefined) {\n      this.updateHeightEnabled = true;\n      this.updateHeightTimeout = setTimeout(\n        this.doUpdateHeight,\n        updateHeightDelay,\n      );\n    } else {\n      this.updateHeightEnabled = false;\n    }\n  };\n}\n","import React from \"react\";\n\nimport { Block, Title } from \"src/elements\";\n\nconst hrStyle: React.CSSProperties = {\n  backgroundColor: \"transparent\",\n  borderColor: \"#ddd\",\n  borderStyle: \"dashed\",\n  borderWidth: \"1px 0 0 0\",\n};\n\nexport type OptionBlockProps = {\n  index?: number;\n  children: React.ReactNode;\n  props: Record<string, string | number | boolean>;\n};\n\nexport class OptionBlock extends React.Component<OptionBlockProps> {\n  public render() {\n    const { children, index, props } = this.props;\n\n    const hrNode =\n      index !== undefined && index !== 0 ? <hr style={hrStyle} /> : undefined;\n\n    return (\n      <Block>\n        {hrNode}\n        <Title as=\"h6\" size={6}>\n          {Object.keys(props).map(key => this.renderProp(key, props[key]))}\n        </Title>\n        {children}\n      </Block>\n    );\n  }\n\n  private readonly renderProp = (\n    name: string,\n    value: string | number | boolean,\n  ) => {\n    let normalizedValue: string | undefined;\n\n    switch (typeof value) {\n      case \"boolean\":\n        normalizedValue = value === true ? undefined : \"{false}\";\n        break;\n      case \"number\":\n        normalizedValue = `{${value}}`;\n        break;\n      case \"undefined\":\n        normalizedValue = \"{undefined}\";\n        break;\n      default:\n        normalizedValue = JSON.stringify(value);\n    }\n    const normalizedProp = `${name}${\n      normalizedValue !== undefined ? `=${normalizedValue}` : \"\"\n    }`;\n\n    return (\n      <code key={name} style={{ marginRight: \"10px\" }}>\n        {normalizedProp}\n      </code>\n    );\n  }\n}\n","export const mapEnumerable = (value: (string | number)[]) =>\n  value.map(v => (typeof v === \"string\" ? `\"${v}\"` : `${v}`)).join(\" │ \");\n","export * from \"./component-doc\";\nexport * from \"./feature\";\nexport { Frame } from \"./frame\";\nexport { OptionBlock } from \"./option-block\";\nexport * from \"./simple-props-table\";\nexport { mapEnumerable } from \"./utils\";\n"],"sourceRoot":""}