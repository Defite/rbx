{"version":3,"sources":["/Users/dfee/code/rbx/src/components/navbar/navbar-container.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-context.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-dropdown.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-segment.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-brand.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-burger.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-divider.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-item-context.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-item-container.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-item.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-link.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar-menu.tsx","/Users/dfee/code/rbx/src/components/navbar/navbar.tsx","/Users/dfee/code/rbx/src/utils.ts"],"names":["NAVBAR_DEFAULTS","fixedAlignments","NavbarContainer","_React$PureComponent","props","_this","Object","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","state","active","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","fixed","html","document","querySelector","classList","remove","concat","_classNames","_this2","manageHtmlAttributes","_this$props","className","color","innerRef","transparent","managed","rest","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","_navbar_context__WEBPACK_IMPORTED_MODULE_12__","Provider","setActive","_base__WEBPACK_IMPORTED_MODULE_10__","assign","classNames","is-transparent","ref","role","canUseDOM","undefined","add","get","set","setState","React","PureComponent","__webpack_require__","d","__webpack_exports__","NavbarContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils__WEBPACK_IMPORTED_MODULE_1__","initialValue","noop","createContext","NAVBAR_DROPDOWN_DEFAULTS","alignments","NavbarDropdown","forwardRefAs","_ref","align","boxed","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_4___default","_base__WEBPACK_IMPORTED_MODULE_5__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","as","displayName","propTypes","PropTypes","oneOfType","string","number","bool","NAVBAR_SEGMENT_DEFAULTS","NavbarSegment","isRequired","NavbarBrand","objectWithoutProperties","react_default","base","onClickHandler","onClick","ctx","event","NavbarBurger","navbar_context","Consumer","is-active","func","NavbarDivider","NavbarItemContext","NavbarItemContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","defineProperty","assertThisInitialized","createRef","current","target","Element","contains","inherits","createClass","dropdown","addEventListener","handleDocumentClick","removeEventListener","initialClassName","expanded","hoverable","tab","up","has-dropdown","has-dropdown-up","is-expanded","is-hoverable","is-tab","combineRefs","asOverride","handleOnClick","NavbarItem","navbar_item_container_NavbarItemContainer","Container","NavbarLink","arrowless","is-arrowless","NavbarMenu","_ref2","Navbar","navbar_container","Brand","Burger","Context","Divider","Dropdown","Item","Link","Menu","Segment","object","window","_len","arguments","length","refs","Array","_key","instance","_i","_refs","item","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/src-components-card-docs-card-docs~src-components-dropdown-docs-dropdown-docs~src-components-media-d~f7e2b74c.e4076db6.js","sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Variables } from \"../../base/helpers/variables\";\nimport { Prefer } from \"../../types\";\nimport { canUseDOM } from \"../../utils\";\nimport { NavbarContext } from \"./navbar-context\";\n\nexport const NAVBAR_DEFAULTS = {\n  fixedAlignments: [\"top\", \"bottom\"] as const,\n};\n\nexport interface NavbarVariablesOverrides {}\n\nexport interface NavbarVariablesDefaults {\n  fixedAlignments: (typeof NAVBAR_DEFAULTS[\"fixedAlignments\"])[number];\n}\n\nexport type NavbarVariables = Prefer<\n  NavbarVariablesOverrides,\n  NavbarVariablesDefaults\n>;\n\nexport type NavbarContainerModifierProps = {\n  /** * Determines whether the menu is displayed on mobile */\n  active?: boolean;\n  as?: React.ReactType; // tslint:disable-line:no-reserved-keywords\n  color?: Variables[\"colors\"];\n  document?: Document;\n  fixed?: NavbarVariables[\"fixedAlignments\"];\n  innerRef?: React.Ref<HTMLElement | SVGElement | React.ComponentType>;\n  managed?: boolean;\n  transparent?: boolean;\n};\n\nexport type NavbarContainerProps = HelpersProps & NavbarContainerModifierProps;\n\nexport interface NavbarContainerState {\n  active: boolean;\n}\n\nexport class NavbarContainer extends React.PureComponent<\n  NavbarContainerProps,\n  NavbarContainerState\n> {\n  public static defaultProps = {\n    transparent: false,\n  };\n  public static displayName = \"Navbar.Container\";\n\n  public readonly state: NavbarContainerState;\n\n  constructor(props: NavbarContainerProps) {\n    super(props);\n    this.state = { active: props.active === true };\n  }\n\n  public componentWillUnmount() {\n    const { fixed } = this.props;\n    const html = this.document.querySelector(\"html\");\n    /* istanbul ignore else: typeguard */\n    if (html !== null) {\n      html.classList.remove(`has-navbar-fixed-${fixed}`);\n    }\n  }\n\n  public render() {\n    this.manageHtmlAttributes();\n\n    const {\n      active, // only used for initialState (in constructor)\n      className,\n      color,\n      fixed,\n      innerRef,\n      managed,\n      transparent,\n      ...rest\n    } = this.props;\n\n    return (\n      <NavbarContext.Provider\n        value={{\n          active: this.active,\n          setActive: (value: boolean) => {\n            this.active = value;\n          },\n        }}\n      >\n        <Generic\n          className={classNames(\n            \"navbar\",\n            {\n              \"is-transparent\": transparent,\n              [`is-fixed-${fixed}`]: fixed,\n              [`is-${color}`]: color,\n            },\n            className,\n          )}\n          ref={innerRef}\n          role=\"navigation\"\n          {...rest}\n        />\n      </NavbarContext.Provider>\n    );\n  }\n\n  private get active() {\n    return this.props.managed === true\n      ? this.props.active === true\n      : this.state.active;\n  }\n\n  private set active(value: boolean) {\n    if (this.props.managed !== true) {\n      this.setState({ active: value });\n    }\n  }\n\n  private get document() {\n    return this.props.document !== undefined ? this.props.document : document;\n  }\n\n  private manageHtmlAttributes() {\n    if (canUseDOM()) {\n      const html = this.document.querySelector(\"html\");\n      /* istanbul ignore else: typeguard */\n      if (html !== null) {\n        html.classList.remove(\"has-navbar-fixed-top\");\n        html.classList.remove(\"has-navbar-fixed-bottom\");\n        if (this.props.fixed !== undefined) {\n          html.classList.add(`has-navbar-fixed-${this.props.fixed}`);\n        }\n      }\n    }\n  }\n}\n","import React from \"react\";\n\nimport { noop } from \"../../utils\";\n\nexport interface NavbarContextValue {\n  active: boolean;\n  setActive(value: boolean): void;\n}\n\nexport const initialValue: NavbarContextValue = {\n  active: false,\n  setActive: noop,\n};\n\nexport const NavbarContext = React.createContext<NavbarContextValue>(\n  initialValue,\n);\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const NAVBAR_DROPDOWN_DEFAULTS = {\n  alignments: [\"right\"] as const,\n};\n\nexport interface NavbarDropdownVariablesOverrides {}\n\nexport interface NavbarDropdownVariablesDefaults {\n  alignments: (typeof NAVBAR_DROPDOWN_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type NavbarDropdownVariables = Prefer<\n  NavbarDropdownVariablesOverrides,\n  NavbarDropdownVariablesDefaults\n>;\n\nexport type NavbarDropdownModifierProps = {\n  align?: NavbarDropdownVariables[\"alignments\"];\n  boxed?: boolean;\n};\n\nexport type NavbarDropdownProps = HelpersProps & NavbarDropdownModifierProps;\n\nexport const NavbarDropdown = forwardRefAs<NavbarDropdownProps>(\n  ({ align, boxed, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        \"navbar-dropdown\",\n        {\n          [`is-${align}`]: align,\n          \"is-boxed\": boxed,\n        },\n        className,\n      )}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"span\" },\n);\n\nNavbarDropdown.displayName = \"Navbar.Dropdown\";\nNavbarDropdown.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  boxed: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const NAVBAR_SEGMENT_DEFAULTS = {\n  alignments: [\"start\", \"end\"] as const,\n};\n\nexport interface NavbarSegmentVariablesOverrides {}\n\nexport interface NavbarSegmentVariablesDefaults {\n  alignments: (typeof NAVBAR_SEGMENT_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type NavbarSegmentVariables = Prefer<\n  NavbarSegmentVariablesOverrides,\n  NavbarSegmentVariablesDefaults\n>;\n\nexport type NavbarSegmentModifierProps = {\n  align: NavbarSegmentVariables[\"alignments\"];\n};\n\nexport type NavbarSegmentProps = HelpersProps & NavbarSegmentModifierProps;\n\nexport const NavbarSegment = forwardRefAs<NavbarSegmentProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        {\n          [`navbar-${align}`]: align,\n        },\n        className,\n      )}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nNavbarSegment.displayName = \"Navbar.Segment\";\nNavbarSegment.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type NavbarBrandProps = HelpersProps;\n\nexport const NavbarBrand = forwardRefAs<NavbarBrandProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"navbar-brand\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nNavbarBrand.displayName = \"Navbar.Brand\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { NavbarContext, NavbarContextValue } from \"./navbar-context\";\n\nexport type NavbarBurgerModifierProps = {\n  onClick?: React.MouseEventHandler;\n};\n\nexport type NavbarBurgerProps = HelpersProps & NavbarBurgerModifierProps;\n\nconst onClickHandler = (\n  onClick: NavbarBurgerProps[\"onClick\"] | undefined,\n  ctx: NavbarContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  ctx.setActive(!ctx.active);\n};\n\nexport const NavbarBurger = forwardRefAs<NavbarBurgerProps>(\n  ({ className, onClick, ...rest }, ref) => (\n    <NavbarContext.Consumer>\n      {ctx => (\n        <Generic\n          className={classNames(\n            \"navbar-burger\",\n            { \"is-active\": ctx.active },\n            className,\n          )}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          role=\"button\"\n          {...rest}\n        >\n          <span />\n          <span />\n          <span />\n        </Generic>\n      )}\n    </NavbarContext.Consumer>\n  ),\n  { as: \"div\" },\n);\n\nNavbarBurger.displayName = \"Navbar.Burger\";\nNavbarBurger.propTypes = {\n  onClick: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type NavbarDividerProps = HelpersProps;\n\nexport const NavbarDivider = forwardRefAs<NavbarDividerProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"navbar-divider\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nNavbarDivider.displayName = \"Navbar.Divider\";\n","import React from \"react\";\n\nimport { noop } from \"../../utils\";\n\nexport interface NavbarItemContextValue {\n  active: boolean;\n  setActive(value: boolean): void;\n}\n\nexport const initialValue: NavbarItemContextValue = {\n  active: false,\n  setActive: noop,\n};\n\nexport const NavbarItemContext = React.createContext<NavbarItemContextValue>(\n  initialValue,\n);\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { combineRefs } from \"../../utils\";\nimport {\n  NavbarItemContext,\n  NavbarItemContextValue,\n} from \"./navbar-item-context\";\n\nexport type NavbarItemContainerModifierProps = {\n  active?: boolean;\n  as?: React.ReactType; // tslint:disable-line:no-reserved-keywords\n  dropdown?: boolean;\n  expanded?: boolean;\n  hoverable?: boolean;\n  innerRef?: React.Ref<HTMLElement | SVGElement | React.ComponentType>;\n  managed?: boolean;\n  onClick?: React.MouseEventHandler;\n  tab?: boolean;\n  up?: boolean;\n};\n\nexport type NavbarItemContainerProps = HelpersProps &\n  NavbarItemContainerModifierProps;\n\nexport interface NavbarItemContainerState {\n  active: boolean;\n}\n\nexport class NavbarItemContainer extends React.PureComponent<\n  NavbarItemContainerProps,\n  NavbarItemContainerState\n> {\n  public static displayName = \"Navbar.Item.Container\";\n  public readonly state: NavbarItemContainerState;\n  private readonly ref = React.createRef<HTMLElement>();\n\n  constructor(props: NavbarItemContainerProps) {\n    super(props);\n    this.state = { active: props.active === true };\n  }\n\n  public componentDidMount() {\n    if (this.props.dropdown === true) {\n      document.addEventListener(\"click\", this.handleDocumentClick);\n    }\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleDocumentClick);\n  }\n\n  public render() {\n    const {\n      as,\n      active,\n      className: initialClassName,\n      dropdown,\n      expanded,\n      hoverable,\n      innerRef,\n      managed,\n      onClick,\n      tab,\n      up,\n      ...rest\n    } = this.props;\n\n    const className = classNames(\n      \"navbar-item\",\n      {\n        \"has-dropdown\": dropdown,\n        \"has-dropdown-up\": up,\n        \"is-active\": this.active,\n        \"is-expanded\": expanded,\n        \"is-hoverable\": hoverable,\n        \"is-tab\": tab,\n      },\n      initialClassName,\n    );\n\n    const ref = combineRefs(this.ref, innerRef);\n\n    if (dropdown === true) {\n      const asOverride = as === \"a\" ? \"div\" : as;\n\n      return (\n        <NavbarItemContext.Provider\n          value={{\n            active: this.active,\n            setActive: (value: boolean) => (this.active = value),\n          }}\n        >\n          <Generic as={asOverride} className={className} ref={ref} {...rest} />\n        </NavbarItemContext.Provider>\n      );\n    }\n\n    return (\n      <NavbarItemContext.Consumer>\n        {ctx => (\n          <Generic\n            as={as}\n            className={className}\n            onClick={this.handleOnClick(ctx)}\n            ref={ref}\n            {...rest}\n          />\n        )}\n      </NavbarItemContext.Consumer>\n    );\n  }\n\n  private get active() {\n    return this.props.managed === true\n      ? this.props.active === true\n      : this.state.active;\n  }\n\n  private set active(value: boolean) {\n    if (this.props.managed !== true) {\n      this.setState({ active: value });\n    }\n  }\n\n  private readonly handleDocumentClick = (event: MouseEvent) => {\n    if (\n      this.props.managed !== true &&\n      this.active &&\n      this.ref.current !== null\n    ) {\n      if (\n        event.target instanceof Element &&\n        !this.ref.current.contains(event.target)\n      ) {\n        this.active = false;\n      }\n    }\n  };\n\n  private readonly handleOnClick = (ctx: NavbarItemContextValue) => (\n    event: React.MouseEvent,\n  ) => {\n    if (this.props.onClick !== undefined) {\n      this.props.onClick(event);\n    }\n    ctx.setActive(!ctx.active);\n  };\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs } from \"../../base\";\nimport {\n  NavbarItemContainer,\n  NavbarItemContainerProps,\n} from \"./navbar-item-container\";\n\nexport type NavbarItemProps = Omit<NavbarItemContainerProps, \"as\" | \"innerRef\">;\n\nexport const NavbarItem = Object.assign(\n  forwardRefAs<NavbarItemProps>(\n    (props, ref) => <NavbarItemContainer innerRef={ref} {...props} />,\n    { as: \"a\" },\n  ),\n  { Container: NavbarItemContainer },\n);\n\nNavbarItem.displayName = \"Navbar.Item\";\nNavbarItem.propTypes = {\n  active: PropTypes.bool,\n  dropdown: PropTypes.bool,\n  expanded: PropTypes.bool,\n  hoverable: PropTypes.bool,\n  managed: PropTypes.bool,\n  onClick: PropTypes.func,\n  tab: PropTypes.bool,\n  up: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport {\n  NavbarItemContext,\n  NavbarItemContextValue,\n} from \"./navbar-item-context\";\n\nexport type NavbarLinkModifierProps = {\n  arrowless?: boolean;\n  onClick?: React.MouseEventHandler;\n};\n\nexport type NavbarLinkProps = HelpersProps & NavbarLinkModifierProps;\n\nconst handleOnClick = (\n  onClick: NavbarLinkProps[\"onClick\"] | undefined,\n  ctx: NavbarItemContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  ctx.setActive(!ctx.active);\n};\n\nexport const NavbarLink = forwardRefAs<NavbarLinkProps>(\n  ({ arrowless, className, onClick, ...rest }, ref) => (\n    <NavbarItemContext.Consumer>\n      {ctx => (\n        <Generic\n          className={classNames(\n            \"navbar-link\",\n            { \"is-arrowless\": arrowless },\n            className,\n          )}\n          onClick={handleOnClick(onClick, ctx)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </NavbarItemContext.Consumer>\n  ),\n  { as: \"span\" },\n);\n\nNavbarLink.displayName = \"Navbar.Link\";\nNavbarLink.propTypes = {\n  arrowless: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { NavbarContext } from \"./navbar-context\";\n\nexport type NavbarMenuProps = HelpersProps;\n\nexport const NavbarMenu = forwardRefAs<NavbarMenuProps>(\n  ({ className, ...rest }, ref) => (\n    <NavbarContext.Consumer>\n      {({ active }) => (\n        <Generic\n          className={classNames(\n            \"navbar-menu\",\n            { \"is-active\": active },\n            className,\n          )}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </NavbarContext.Consumer>\n  ),\n  { as: \"div\" },\n);\n\nNavbarMenu.displayName = \"Navbar.Menu\";\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs } from \"../../base\";\nimport { NavbarBrand } from \"./navbar-brand\";\nimport { NavbarBurger } from \"./navbar-burger\";\nimport { NavbarContainer, NavbarContainerProps } from \"./navbar-container\";\nimport { NavbarContext } from \"./navbar-context\";\nimport { NavbarDivider } from \"./navbar-divider\";\nimport { NavbarDropdown } from \"./navbar-dropdown\";\nimport { NavbarItem } from \"./navbar-item\";\nimport { NavbarLink } from \"./navbar-link\";\nimport { NavbarMenu } from \"./navbar-menu\";\nimport { NavbarSegment } from \"./navbar-segment\";\n\nexport type NavbarProps = Omit<NavbarContainerProps, \"as\" | \"innerRef\">;\n\nexport const Navbar = Object.assign(\n  forwardRefAs<NavbarProps>(\n    (props, ref) => <NavbarContainer innerRef={ref} {...props} />,\n    { as: \"nav\" },\n  ),\n  {\n    Brand: NavbarBrand,\n    Burger: NavbarBurger,\n    Container: NavbarContainer,\n    Context: NavbarContext,\n    Divider: NavbarDivider,\n    Dropdown: NavbarDropdown,\n    Item: NavbarItem,\n    Link: NavbarLink,\n    Menu: NavbarMenu,\n    Segment: NavbarSegment,\n  },\n);\n\nNavbar.displayName = \"Navbar\";\nNavbar.propTypes = {\n  active: PropTypes.bool,\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  document: PropTypes.object,\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  managed: PropTypes.bool,\n  transparent: PropTypes.bool,\n};\n","import React from \"react\";\n\nexport const canUseDOM = () =>\n  !(\n    typeof window === \"undefined\" || // tslint:disable-line:no-typeof-undefined\n    window.document === undefined ||\n    window.document.createElement === undefined\n  );\n\nexport const combineRefs = <T>(\n  ...refs: (React.Ref<T> | null | undefined)[]\n) => {\n  return (instance: T | null) => {\n    for (const item of refs) {\n      if (item === null || item === undefined) {\n        continue;\n      }\n\n      if (typeof item === \"object\") {\n        (item as React.MutableRefObject<T | null>).current = instance;\n      } else {\n        item(instance);\n      }\n    }\n  };\n};\n\nexport const noop = () => {}; // tslint:disable-line:no-empty\n"],"sourceRoot":""}