{"version":3,"sources":["/Users/dfee/code/rbx/src/components/breadcrumb/breadcrumb-item.tsx","/Users/dfee/code/rbx/src/components/breadcrumb/breadcrumb.tsx","/Users/dfee/code/rbx/src/components/card/card-header-title.tsx","/Users/dfee/code/rbx/src/components/card/card-content.tsx","/Users/dfee/code/rbx/src/components/card/card-footer-item.tsx","/Users/dfee/code/rbx/src/components/card/card-footer.tsx","/Users/dfee/code/rbx/src/components/card/card-header-icon.tsx","/Users/dfee/code/rbx/src/components/card/card-header.tsx","/Users/dfee/code/rbx/src/components/card/card-image.tsx","/Users/dfee/code/rbx/src/components/card/card.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-container.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-context.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-content.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-divider.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-item.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-menu.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-trigger.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown.tsx","/Users/dfee/code/rbx/src/components/index.ts","/Users/dfee/code/rbx/src/components/level/level-item.tsx","/Users/dfee/code/rbx/src/components/level/level.tsx","/Users/dfee/code/rbx/src/components/list/list-item.tsx","/Users/dfee/code/rbx/src/components/list/list.tsx","/Users/dfee/code/rbx/src/components/media/media-item.tsx","/Users/dfee/code/rbx/src/components/media/media.tsx","/Users/dfee/code/rbx/src/components/menu/menu-label.tsx","/Users/dfee/code/rbx/src/components/menu/menu-list-item.tsx","/Users/dfee/code/rbx/src/components/menu/menu-list.tsx","/Users/dfee/code/rbx/src/components/menu/menu.tsx","/Users/dfee/code/rbx/src/components/message/message-body.tsx","/Users/dfee/code/rbx/src/components/message/message-header.tsx","/Users/dfee/code/rbx/src/components/message/message.tsx","/Users/dfee/code/rbx/src/components/modal/modal-context.tsx","/Users/dfee/code/rbx/src/components/modal/modal-background.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card-body.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card-foot.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card-head.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card-title.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card.tsx","/Users/dfee/code/rbx/src/components/modal/modal-close.tsx","/Users/dfee/code/rbx/src/components/modal/modal-portal.tsx","/Users/dfee/code/rbx/src/components/modal/modal-container.tsx","/Users/dfee/code/rbx/src/components/modal/modal-content.tsx","/Users/dfee/code/rbx/src/components/modal/modal.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination-step.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination-ellipsis.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination-link.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination-list.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination.tsx","/Users/dfee/code/rbx/src/components/panel/panel-block.tsx","/Users/dfee/code/rbx/src/components/panel/panel-heading.tsx","/Users/dfee/code/rbx/src/components/panel/panel-icon.tsx","/Users/dfee/code/rbx/src/components/panel/panel-tab-group.tsx","/Users/dfee/code/rbx/src/components/panel/panel-tab.tsx","/Users/dfee/code/rbx/src/components/panel/panel.tsx","/Users/dfee/code/rbx/src/components/tab/tab-group.tsx","/Users/dfee/code/rbx/src/components/tab/tab.tsx","/Users/dfee/code/rbx/src/layout/hero/__docs__/hero.docs.mdx","/Users/dfee/code/rbx/src/layout/hero/hero-body.tsx","/Users/dfee/code/rbx/src/layout/hero/hero-foot.tsx","/Users/dfee/code/rbx/src/layout/hero/hero-head.tsx","/Users/dfee/code/rbx/src/layout/hero/hero.tsx"],"names":["BreadcrumbItem","forwardRefAs","_ref","ref","active","rest","Object","objectWithoutProperties","react_default","a","createElement","className","classNames","is-active","base","assign","as","displayName","propTypes","PropTypes","bool","BREADCRUMB_DEFAULTS","alignments","separators","sizes","Breadcrumb","_classNames","align","children","separator","size","defineProperty","concat","Item","oneOfType","string","number","CARD_HEADER_TITLE_DEFAULTS","CardHeaderTitle","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_4___default","_base__WEBPACK_IMPORTED_MODULE_5__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","CardContent","CardFooterItem","CardFooter","CardHeaderIcon","CardHeader","Icon","Title","CardImage","Card","Content","Footer","Header","Image","DROPDOWN_DEFAULTS","DropdownContainer","_React$PureComponent","props","_this","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","React","createRef","event","managed","current","target","Element","contains","state","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","document","addEventListener","handleClick","removeEventListener","_this2","_this$props","hoverable","innerRef","up","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_9___default","_dropdown_context__WEBPACK_IMPORTED_MODULE_12__","Provider","setActive","_base__WEBPACK_IMPORTED_MODULE_10__","combineRefs","get","set","setState","PureComponent","__webpack_require__","d","__webpack_exports__","DropdownContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils__WEBPACK_IMPORTED_MODULE_1__","initialValue","noop","createContext","DropdownContent","DropdownDivider","onClickHandler","onClick","ctx","undefined","DropdownItem","dropdown_context","Consumer","func","DropdownMenu","DropdownTrigger","Dropdown","dropdown_container","Container","Context","Divider","Menu","Trigger","level","media","message","navbar","tab","LEVEL_ITEM_DEFAULTS","LevelItem","level-item","Level","breakpoint","ListItem","List","MEDIA_ITEM_DEFAULTS","MediaItem","Media","react__WEBPACK_IMPORTED_MODULE_2___default","_base__WEBPACK_IMPORTED_MODULE_3__","MenuLabel","MenuListItem","menu","node","MenuList","Label","MessageBody","MessageHeader","MESSAGE_DEFAULTS","Message","color","Body","close","closeOnBlur","closeOnEsc","ModalContext","ModalBackground","role","ModalCardBody","ModalCardFoot","mapChildren","Children","map","child","i","esm_typeof","type","Delete","cloneElement","Fragment","ModalCardHead","_ref2","ModalCardTitle","ModalCard","Foot","Head","ModalClose","aria-label","ModalPortal","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","assertThisInitialized","onClose","code","inherits","createClass","clipped","handleKeydown","html","querySelector","classList","add","remove","_this$props2","ModalContainer","canUseDOM","el","containerClassName","body","appendChild","removeChild","ReactDOM","createPortal","modal_portal_ModalPortal","ModalContent","Modal","object","modal_container_ModalContainer","Background","Close","Portal","PAGINATION_STEP_DEFAULTS","PaginationStep","isRequired","PaginationEllipsis","PaginationLink","is-current","PaginationList","PAGINATION_DEFAULTS","Pagination","rounded","Ellipsis","Link","Step","PanelBlock","PanelHeading","PanelIcon","PanelTabGroup","PanelTab","Group","Panel","Block","Heading","Tab","TAB_GROUP_DEFAULTS","kinds","TabGroup","fullwidth","kind","react__WEBPACK_IMPORTED_MODULE_3___default","_base__WEBPACK_IMPORTED_MODULE_4__","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","mdxType","id","parentName","src_elements__WEBPACK_IMPORTED_MODULE_9__","docz__WEBPACK_IMPORTED_MODULE_5__","__position","__code","__scope","faGithub","FontAwesomeIcon","Playground","Frame","ForwardRefAsExoticComponentDoc","OptionBlock","mapEnumerable","DEFAULTS","Navbar","Button","Hero","HERO_DEFAULTS","_hero__WEBPACK_IMPORTED_MODULE_10__","subtitle","colors","src_docs_components__WEBPACK_IMPORTED_MODULE_6__","index","gradient","name","splice","_ref3","style","height","src_components__WEBPACK_IMPORTED_MODULE_8__","fixed","Brand","href","src","alt","width","Burger","Segment","inverted","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_4__","icon","textAlign","component","customize","docPath","description","typeName","typeTip","isMDXComponent","HeroBody","HeroFoot","HeroHead","is-bold"],"mappings":"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","file":"static/js/src-layout-hero-docs-hero-docs.76d10e73.js","sourcesContent":["import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport interface BreadcrumbItemModifierProps {\n  active?: boolean;\n}\n\nexport type BreadcrumbItemProps = HelpersProps & BreadcrumbItemModifierProps;\n\nexport const BreadcrumbItem = forwardRefAs<BreadcrumbItemProps>(\n  ({ active, ...rest }, ref) => (\n    <li className={classNames({ \"is-active\": active })}>\n      <Generic ref={ref} {...rest} />\n    </li>\n  ),\n  { as: \"a\" },\n);\n\nBreadcrumbItem.displayName = \"Breadcrumb.Item\";\nBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\nimport { BreadcrumbItem } from \"./breadcrumb-item\";\n\nexport const BREADCRUMB_DEFAULTS = {\n  alignments: [\"centered\", \"right\"] as const,\n  separators: [\"arrow\", \"bullet\", \"dot\", \"succeeds\"] as const,\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n};\n\nexport interface BreadcrumbVariablesOverrides {}\n\nexport interface BreadcrumbVariablesDefaults {\n  alignments: (typeof BREADCRUMB_DEFAULTS[\"alignments\"])[number];\n  separators: (typeof BREADCRUMB_DEFAULTS[\"separators\"])[number];\n  sizes: (typeof BREADCRUMB_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type BreadcrumbVariables = Prefer<\n  BreadcrumbVariablesOverrides,\n  BreadcrumbVariablesDefaults\n>;\n\nexport type BreadcrumbModifierProps = {\n  align?: BreadcrumbVariables[\"alignments\"];\n  separator?: BreadcrumbVariables[\"separators\"];\n  size?: BreadcrumbVariables[\"sizes\"];\n};\n\nexport type BreadcrumbProps = HelpersProps & BreadcrumbModifierProps;\n\nexport const Breadcrumb = Object.assign(\n  forwardRefAs<BreadcrumbProps>(\n    ({ align, children, className, separator, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"breadcrumb\",\n          {\n            [`has-${separator}-separator`]: separator,\n            [`is-${align}`]: align,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      >\n        <ul>{children}</ul>\n      </Generic>\n    ),\n    { as: \"nav\" },\n  ),\n  { Item: BreadcrumbItem },\n);\n\nBreadcrumb.displayName = \"Breadcrumb\";\nBreadcrumb.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  separator: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const CARD_HEADER_TITLE_DEFAULTS = {\n  alignments: [\"centered\"] as const,\n};\n\nexport interface CardHeaderTitleVariablesOverrides {}\n\nexport interface CardHeaderTitleVariablesDefaults {\n  alignments: (typeof CARD_HEADER_TITLE_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type CardHeaderTitleVariables = Prefer<\n  CardHeaderTitleVariablesOverrides,\n  CardHeaderTitleVariablesDefaults\n>;\n\nexport type CardHeaderTitleModifierProps = {\n  align?: CardHeaderTitleVariables[\"alignments\"];\n};\n\nexport type CardHeaderTitleProps = HelpersProps & CardHeaderTitleModifierProps;\n\nexport const CardHeaderTitle = forwardRefAs<CardHeaderTitleProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        \"card-header-title\",\n        { [`is-${align}`]: align },\n        className,\n      )}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardHeaderTitle.displayName = \"Card.Header.Title\";\nCardHeaderTitle.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type CardContentProps = HelpersProps;\n\nexport const CardContent = forwardRefAs<CardContentProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"card-content\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardContent.displayName = \"Card.Content\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type CardFooterItemProps = HelpersProps;\n\nexport const CardFooterItem = forwardRefAs<CardFooterItemProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"card-footer-item\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardFooterItem.displayName = \"Card.Footer.Item\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { CardFooterItem } from \"./card-footer-item\";\n\nexport type CardFooterProps = HelpersProps;\n\nexport const CardFooter = Object.assign(\n  forwardRefAs<CardFooterProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\"card-footer\", className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"div\" },\n  ),\n  { Item: CardFooterItem },\n);\n\nCardFooter.displayName = \"Card.Footer\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type CardHeaderIconProps = HelpersProps;\n\nexport const CardHeaderIcon = forwardRefAs<CardHeaderIconProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"card-header-icon\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardHeaderIcon.displayName = \"Card.Header.Icon\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { CardHeaderIcon } from \"./card-header-icon\";\nimport { CardHeaderTitle } from \"./card-header-title\";\n\nexport type CardHeaderProps = HelpersProps;\n\nexport const CardHeader = Object.assign(\n  forwardRefAs<CardHeaderProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\"card-header\", className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"div\" },\n  ),\n  {\n    Icon: CardHeaderIcon,\n    Title: CardHeaderTitle,\n  },\n);\n\nCardHeader.displayName = \"Card.Header\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type CardImageProps = HelpersProps;\n\nexport const CardImage = forwardRefAs<CardImageProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"card-image\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardImage.displayName = \"Card.Image\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { CardContent } from \"./card-content\";\nimport { CardFooter } from \"./card-footer\";\nimport { CardHeader } from \"./card-header\";\nimport { CardImage } from \"./card-image\";\n\nexport type CardProps = HelpersProps;\n\nexport const Card = Object.assign(\n  forwardRefAs<CardProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"card\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"div\" },\n  ),\n  {\n    Content: CardContent,\n    Footer: CardFooter,\n    Header: CardHeader,\n    Image: CardImage,\n  },\n);\n\nCard.displayName = \"Card\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\nimport { combineRefs } from \"../../utils\";\nimport { DropdownContext } from \"./dropdown-context\";\n\nexport const DROPDOWN_DEFAULTS = {\n  alignments: [\"right\"] as const,\n};\n\nexport interface DropdownVariablesOverrides {}\n\nexport interface DropdownVariablesDefaults {\n  alignments: (typeof DROPDOWN_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type DropdownVariables = Prefer<\n  DropdownVariablesOverrides,\n  DropdownVariablesDefaults\n>;\n\nexport type DropdownContainerModifierProps = {\n  active?: boolean;\n  align?: DropdownVariables[\"alignments\"];\n  as?: React.ReactType; // tslint:disable-line:no-reserved-keywords\n  hoverable?: boolean;\n  innerRef?: React.Ref<HTMLElement | SVGElement | React.ComponentType>;\n  managed?: boolean;\n  up?: boolean;\n};\n\nexport type DropdownContainerProps = HelpersProps &\n  DropdownContainerModifierProps;\n\nconst initialState = {\n  active: false,\n};\n\nexport type DropdownContainerState = typeof initialState;\n\nexport class DropdownContainer extends React.PureComponent<\n  DropdownContainerProps,\n  DropdownContainerState\n> {\n  public static displayName = \"Dropdown.Container\";\n  public readonly state: DropdownContainerState;\n  private readonly ref = React.createRef<HTMLElement>();\n\n  constructor(props: DropdownContainerProps) {\n    super(props);\n    this.state = { active: props.active === true };\n  }\n\n  public componentDidMount() {\n    document.addEventListener(\"click\", this.handleClick);\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClick);\n  }\n\n  public render() {\n    const {\n      active,\n      align,\n      className,\n      hoverable,\n      innerRef,\n      managed,\n      up,\n      ...rest\n    } = this.props;\n\n    return (\n      <DropdownContext.Provider\n        value={{\n          active: this.active,\n          setActive: (value: boolean) => (this.active = value),\n        }}\n      >\n        <Generic\n          className={classNames(\n            \"dropdown\",\n            {\n              [`is-${align}`]: align,\n              \"is-active\": this.active,\n              \"is-hoverable\": hoverable,\n              \"is-up\": up,\n            },\n            className,\n          )}\n          ref={combineRefs(this.ref, innerRef)}\n          {...rest}\n        />\n      </DropdownContext.Provider>\n    );\n  }\n\n  private get active() {\n    return this.props.managed === true\n      ? this.props.active === true\n      : this.state.active;\n  }\n\n  private set active(value: boolean) {\n    if (this.props.managed !== true) {\n      this.setState({ active: value });\n    }\n  }\n\n  private readonly handleClick = (event: MouseEvent) => {\n    if (\n      this.props.managed !== true &&\n      this.active &&\n      this.ref.current !== null\n    ) {\n      if (\n        event.target instanceof Element &&\n        !this.ref.current.contains(event.target)\n      ) {\n        this.active = false;\n      }\n    }\n  };\n}\n","import React from \"react\";\n\nimport { noop } from \"../../utils\";\n\nexport interface DropdownContextValue {\n  active: boolean;\n  setActive(value: boolean): void;\n}\n\nexport const initialValue: DropdownContextValue = {\n  active: false,\n  setActive: noop,\n};\n\nexport const DropdownContext = React.createContext<DropdownContextValue>(\n  initialValue,\n);\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type DropdownContentProps = HelpersProps;\n\nexport const DropdownContent = forwardRefAs<DropdownContentProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"dropdown-content\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nDropdownContent.displayName = \"Dropdown.Content\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type DropdownDividerProps = HelpersProps;\n\nexport const DropdownDivider = forwardRefAs<DropdownDividerProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"dropdown-divider\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"hr\" },\n);\n\nDropdownDivider.displayName = \"Dropdown.Divider\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { DropdownContext, DropdownContextValue } from \"./dropdown-context\";\n\nexport type DropdownItemModifierProps = {\n  active?: boolean;\n  onClick?: React.MouseEventHandler;\n};\n\nexport type DropdownItemProps = HelpersProps & DropdownItemModifierProps;\n\nconst onClickHandler = (\n  onClick: DropdownItemProps[\"onClick\"] | undefined,\n  ctx: DropdownContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  ctx.setActive(false);\n};\n\nexport const DropdownItem = forwardRefAs<DropdownItemProps>(\n  ({ active, className, onClick, ...rest }, ref) => (\n    <DropdownContext.Consumer>\n      {ctx => (\n        <Generic\n          className={classNames(\n            \"dropdown-item\",\n            { \"is-active\": active },\n            className,\n          )}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </DropdownContext.Consumer>\n  ),\n  { as: \"a\" },\n);\n\nDropdownItem.displayName = \"Dropdown.Item\";\nDropdownItem.propTypes = {\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type DropdownMenuProps = HelpersProps;\n\nexport const DropdownMenu = forwardRefAs<DropdownMenuProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"dropdown-menu\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nDropdownMenu.displayName = \"Dropdown.Menu\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { DropdownContext, DropdownContextValue } from \"./dropdown-context\";\n\nexport type DropdownTriggerModifierProps = {\n  onClick?: React.MouseEventHandler;\n};\n\nexport type DropdownTriggerProps = HelpersProps & DropdownTriggerModifierProps;\n\nconst onClickHandler = (\n  onClick: DropdownTriggerProps[\"onClick\"] | undefined,\n  ctx: DropdownContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  ctx.setActive(!ctx.active);\n};\n\nexport const DropdownTrigger = forwardRefAs<DropdownTriggerProps>(\n  ({ className, onClick, ...rest }, ref) => (\n    <DropdownContext.Consumer>\n      {ctx => (\n        <Generic\n          className={classNames(\"dropdown-trigger\", className)}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </DropdownContext.Consumer>\n  ),\n  { as: \"div\" },\n);\n\nDropdownTrigger.displayName = \"Dropdown.Trigger\";\nDropdownTrigger.propTypes = {\n  onClick: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs } from \"../../base\";\nimport {\n  DropdownContainer,\n  DropdownContainerProps,\n} from \"./dropdown-container\";\nimport { DropdownContent } from \"./dropdown-content\";\nimport { DropdownContext } from \"./dropdown-context\";\nimport { DropdownDivider } from \"./dropdown-divider\";\nimport { DropdownItem } from \"./dropdown-item\";\nimport { DropdownMenu } from \"./dropdown-menu\";\nimport { DropdownTrigger } from \"./dropdown-trigger\";\n\nexport type DropdownProps = Omit<DropdownContainerProps, \"as\" | \"innerRef\">;\n\nexport const Dropdown = Object.assign(\n  forwardRefAs<DropdownProps>(\n    (props, ref) => <DropdownContainer innerRef={ref} {...props} />,\n    { as: \"div\" },\n  ),\n  {\n    Container: DropdownContainer,\n    Content: DropdownContent,\n    Context: DropdownContext,\n    Divider: DropdownDivider,\n    Item: DropdownItem,\n    Menu: DropdownMenu,\n    Trigger: DropdownTrigger,\n  },\n);\n\nDropdown.displayName = \"Dropdown\";\nDropdown.propTypes = {\n  active: PropTypes.bool,\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  hoverable: PropTypes.bool,\n  managed: PropTypes.bool,\n  up: PropTypes.bool,\n};\n","export { Breadcrumb } from \"./breadcrumb\";\nexport { Card } from \"./card\";\nexport { Dropdown } from \"./dropdown\";\nexport { Level } from \"./level\";\nexport { List } from \"./list\";\nexport { Media } from \"./media\";\nexport { Menu } from \"./menu\";\nexport { Message } from \"./message\";\nexport { Modal } from \"./modal\";\nexport { Navbar } from \"./navbar\";\nexport { Pagination } from \"./pagination\";\nexport { Panel } from \"./panel\";\nexport { Tab } from \"./tab\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const LEVEL_ITEM_DEFAULTS = {\n  alignments: [\"left\", \"right\"] as const,\n};\n\nexport interface LevelItemVariablesOverrides {}\n\nexport interface LevelItemVariablesDefaults {\n  alignments: (typeof LEVEL_ITEM_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type LevelItemVariables = Prefer<\n  LevelItemVariablesOverrides,\n  LevelItemVariablesDefaults\n>;\n\nexport type LevelItemModifierProps = {\n  align?: LevelItemVariables[\"alignments\"];\n};\n\nexport type LevelItemProps = HelpersProps & LevelItemModifierProps;\n\nexport const LevelItem = forwardRefAs<LevelItemProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        {\n          \"level-item\": align === undefined,\n          [`level-${align}`]: align,\n        },\n        className,\n      )}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nLevelItem.displayName = \"Level.Item\";\nLevelItem.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Variables } from \"../../base/helpers/variables\";\nimport { LevelItem } from \"./level-item\";\n\nexport type LevelModifierProps = {\n  breakpoint?: Variables[\"breakpoints\"];\n};\n\nexport type LevelProps = HelpersProps & LevelModifierProps;\n\nexport const Level = Object.assign(\n  forwardRefAs<LevelProps>(\n    ({ breakpoint, className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"level\",\n          { [`is-${breakpoint}`]: breakpoint },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"nav\" },\n  ),\n  { Item: LevelItem },\n);\n\nLevel.displayName = \"Level\";\nLevel.propTypes = {\n  breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ListItemModifierProps = {\n  active?: boolean;\n};\n\nexport type ListItemProps = HelpersProps & ListItemModifierProps;\n\nexport const ListItem = forwardRefAs<ListItemProps>(\n  ({ active, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"list-item\", { \"is-active\": active }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"a\" },\n);\n\nListItem.displayName = \"List.Item\";\nListItem.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { ListItem } from \"./list-item\";\n\nexport type ListProps = HelpersProps;\n\nexport const List = Object.assign(\n  forwardRefAs<ListProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"list\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"div\" },\n  ),\n  { Item: ListItem },\n);\n\nList.displayName = \"List\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const MEDIA_ITEM_DEFAULTS = {\n  alignments: [\"content\", \"left\", \"right\"] as const,\n};\n\nexport interface MediaItemVariablesOverrides {}\n\nexport interface MediaItemVariablesDefaults {\n  alignments: (typeof MEDIA_ITEM_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type MediaItemVariables = Prefer<\n  MediaItemVariablesOverrides,\n  MediaItemVariablesDefaults\n>;\n\nexport type MediaItemModifierProps = {\n  align?: MediaItemVariables[\"alignments\"];\n};\n\nexport type MediaItemProps = HelpersProps & MediaItemModifierProps;\n\nexport const MediaItem = forwardRefAs<MediaItemProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames({ [`media-${align}`]: align }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  {\n    align: \"content\",\n    as: \"div\",\n  },\n);\n\nMediaItem.displayName = \"Media.Item\";\nMediaItem.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { MediaItem } from \"./media-item\";\n\nexport type MediaProps = HelpersProps;\n\nexport const Media = Object.assign(\n  forwardRefAs<MediaProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"media\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"article\" },\n  ),\n  { Item: MediaItem },\n);\n\nMedia.displayName = \"Media\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MenuLabelProps = HelpersProps;\n\nexport const MenuLabel = forwardRefAs<MenuLabelProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"menu-label\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"p\" },\n);\n\nMenuLabel.displayName = \"Menu.Label\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MenuListItemModifierProps = {\n  active?: boolean;\n  menu?: React.ReactNode;\n};\n\nexport type MenuListItemProps = HelpersProps & MenuListItemModifierProps;\n\nexport const MenuListItem = forwardRefAs<MenuListItemProps>(\n  ({ active, className, menu, ...rest }, ref) => (\n    <li>\n      <Generic\n        className={classNames({ \"is-active\": active }, className)}\n        ref={ref}\n        {...rest}\n      />\n      {menu}\n    </li>\n  ),\n  { as: \"a\" },\n);\n\nMenuListItem.displayName = \"Menu.List.Item\";\nMenuListItem.propTypes = {\n  active: PropTypes.bool,\n  menu: PropTypes.node,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { MenuListItem } from \"./menu-list-item\";\n\nexport type MenuListProps = HelpersProps;\n\nexport const MenuList = Object.assign(\n  forwardRefAs<MenuListProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\"menu-list\", className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"ul\" },\n  ),\n  { Item: MenuListItem },\n);\n\nMenuList.displayName = \"Menu.List\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { MenuLabel } from \"./menu-label\";\nimport { MenuList } from \"./menu-list\";\n\nexport type MenuProps = HelpersProps;\n\nexport const Menu = Object.assign(\n  forwardRefAs<MenuProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"menu\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"aside\" },\n  ),\n  {\n    Label: MenuLabel,\n    List: MenuList,\n  },\n);\n\nMenu.displayName = \"Menu\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MessageBodyProps = HelpersProps;\n\nexport const MessageBody = forwardRefAs<MessageBodyProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"message-body\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nMessageBody.displayName = \"Message.Body\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MessageHeaderProps = HelpersProps;\n\nexport const MessageHeader = forwardRefAs<MessageHeaderProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"message-header\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nMessageHeader.displayName = \"Message.Header\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Variables } from \"../../base/helpers/variables\";\nimport { Prefer } from \"../../types\";\nimport { MessageBody } from \"./message-body\";\nimport { MessageHeader } from \"./message-header\";\n\nexport const MESSAGE_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n};\n\nexport interface MessageVariablesOverrides {}\n\nexport interface MessageVariablesDefaults {\n  sizes: (typeof MESSAGE_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type MessageVariables = Prefer<\n  MessageVariablesOverrides,\n  MessageVariablesDefaults\n>;\n\nexport type MessageModifierProps = {\n  color?: Variables[\"colors\"];\n  size?: MessageVariables[\"sizes\"];\n};\n\nexport type MessageProps = HelpersProps & MessageModifierProps;\n\nexport const Message = Object.assign(\n  forwardRefAs<MessageProps>(\n    ({ className, color, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"message\",\n          {\n            [`is-${color}`]: color,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"article\" },\n  ),\n  {\n    Body: MessageBody,\n    Header: MessageHeader,\n  },\n);\n\nMessage.displayName = \"Message\";\nMessage.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\n\nimport { noop } from \"../../utils\";\n\nexport interface ModalContextValue {\n  closeOnBlur: boolean;\n  closeOnEsc: boolean;\n  close(): void;\n}\n\nexport const initialValue: ModalContextValue = {\n  close: noop,\n  closeOnBlur: false,\n  closeOnEsc: true,\n};\n\nexport const ModalContext = React.createContext<ModalContextValue>(\n  initialValue,\n);\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { ModalContext, ModalContextValue } from \"./modal-context\";\n\nexport type ModalBackgroundModifierProps = {\n  onClick?: React.MouseEventHandler;\n};\n\nexport type ModalBackgroundProps = HelpersProps & ModalBackgroundModifierProps;\n\nconst onClickHandler = (\n  onClick: ModalBackgroundProps[\"onClick\"],\n  ctx: ModalContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  if (ctx.closeOnBlur) {\n    ctx.close();\n  }\n};\n\nexport const ModalBackground = forwardRefAs<ModalBackgroundProps>(\n  ({ className, onClick, ...rest }, ref) => (\n    <ModalContext.Consumer>\n      {ctx => (\n        <Generic\n          className={classNames(\"modal-background\", className)}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          role=\"presentation\"\n          {...rest}\n        />\n      )}\n    </ModalContext.Consumer>\n  ),\n  { as: \"div\" },\n);\n\nModalBackground.displayName = \"Modal.Background\";\nModalBackground.propTypes = {\n  onClick: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ModalCardBodyProps = HelpersProps;\n\nexport const ModalCardBody = forwardRefAs<ModalCardBodyProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"modal-card-body\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"section\" },\n);\n\nModalCardBody.displayName = \"Modal.Card.Body\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ModalCardFootProps = HelpersProps;\n\nexport const ModalCardFoot = forwardRefAs<ModalCardFootProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"modal-card-foot\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"footer\" },\n);\n\nModalCardFoot.displayName = \"Modal.Card.Foot\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Delete } from \"../../elements\";\nimport { ModalContext, ModalContextValue } from \"./modal-context\";\n\nexport type ModalCardHeadProps = HelpersProps;\n\nconst mapChildren = (\n  children: React.ReactNode,\n  close: ModalContextValue[\"close\"],\n) =>\n  React.Children.map(children, (child, i) => {\n    if (typeof child === \"object\" && child !== null && \"type\" in child) {\n      if (child.type === Delete) {\n        const onClick = (child.props as React.HTMLAttributes<Element>).onClick;\n\n        return React.cloneElement(child, {\n          onClick: (event: React.MouseEvent) => {\n            if (onClick !== undefined) {\n              onClick(event);\n            }\n            close();\n          },\n        });\n      } else if (child.type === React.Fragment) {\n        return (\n          <React.Fragment\n            children={mapChildren(\n              (child.props as React.ComponentPropsWithoutRef<\n                typeof React.Fragment\n              >).children,\n              close,\n            )}\n          />\n        );\n      }\n    }\n\n    return child;\n  });\n\nexport const ModalCardHead = forwardRefAs<ModalCardHeadProps>(\n  ({ className, children, ...rest }, ref) => (\n    <ModalContext.Consumer>\n      {({ close }) => (\n        <Generic\n          children={mapChildren(children, close)}\n          className={classNames(\"modal-card-head\", className)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </ModalContext.Consumer>\n  ),\n  { as: \"header\" },\n);\n\nModalCardHead.displayName = \"Modal.Card.Head\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ModalCardTitleProps = HelpersProps;\n\nexport const ModalCardTitle = forwardRefAs<ModalCardTitleProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"modal-card-title\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"p\" },\n);\n\nModalCardTitle.displayName = \"Modal.Card.Title\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { ModalCardBody } from \"./modal-card-body\";\nimport { ModalCardFoot } from \"./modal-card-foot\";\nimport { ModalCardHead } from \"./modal-card-head\";\nimport { ModalCardTitle } from \"./modal-card-title\";\n\nexport type ModalCardProps = HelpersProps;\n\nexport const ModalCard = Object.assign(\n  forwardRefAs<ModalCardProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\"modal-card\", className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"div\" },\n  ),\n  {\n    Body: ModalCardBody,\n    Foot: ModalCardFoot,\n    Head: ModalCardHead,\n    Title: ModalCardTitle,\n  },\n);\n\nModalCard.displayName = \"Modal.Card\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { ModalContext, ModalContextValue } from \"./modal-context\";\n\nexport type ModalCloseModifierProps = {\n  onClick?: React.MouseEventHandler;\n};\n\nexport type ModalCloseProps = HelpersProps & ModalCloseModifierProps;\n\nconst onClickHandler = (\n  onClick: ModalCloseProps[\"onClick\"] | undefined,\n  ctx: ModalContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  ctx.close();\n};\n\nexport const ModalClose = forwardRefAs<ModalCloseProps>(\n  ({ className, onClick, ...rest }, ref) => (\n    <ModalContext.Consumer>\n      {ctx => (\n        <Generic\n          aria-label=\"close\"\n          className={classNames(\"modal-close\", \"is-large\", className)}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </ModalContext.Consumer>\n  ),\n  { as: \"button\" },\n);\n\nModalClose.displayName = \"Modal.Close\";\nModalClose.propTypes = {\n  onClick: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Generic } from \"../../base\";\nimport { initialValue, ModalContext, ModalContextValue } from \"./modal-context\";\n\nexport type ModalPortalModifierProps = {\n  as?: React.ReactType; // tslint:disable-line:no-reserved-keywords\n  className?: string;\n  clipped?: boolean;\n  closeOnBlur?: ModalContextValue[\"closeOnBlur\"];\n  closeOnEsc?: ModalContextValue[\"closeOnEsc\"];\n  document: Document;\n  innerRef?: React.Ref<HTMLElement | SVGElement | React.ComponentType>;\n  onClose?: ModalContextValue[\"close\"];\n};\n\nexport type ModalPortalProps = ModalPortalModifierProps;\n\nexport class ModalPortal extends React.PureComponent<ModalPortalProps> {\n  public static defaultProps = {\n    closeOnBlur: initialValue.closeOnBlur,\n    closeOnEsc: initialValue.closeOnEsc,\n  };\n  public static displayName = \"Modal.Portal\";\n\n  public componentDidMount() {\n    const { clipped, document } = this.props;\n    document.addEventListener(\"keydown\", this.handleKeydown);\n    const html = document.querySelector(\"html\");\n    /* istanbul ignore else: typeguard */\n    if (html !== null) {\n      if (clipped === true) {\n        html.classList.add(\"is-clipped\");\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    const { document } = this.props;\n    document.removeEventListener(\"keydown\", this.handleKeydown);\n    const html = document.querySelector(\"html\");\n    /* istanbul ignore else: typeguard */\n    if (html !== null) {\n      html.classList.remove(\"is-clipped\");\n    }\n  }\n\n  public render() {\n    const {\n      className,\n      closeOnBlur,\n      closeOnEsc,\n      innerRef,\n      onClose,\n      ...rest\n    } = this.props;\n\n    return (\n      <ModalContext.Provider\n        value={{\n          close: this.close,\n          closeOnBlur: closeOnBlur === true,\n          closeOnEsc: closeOnEsc === true,\n        }}\n      >\n        <Generic\n          className={classNames(\"modal\", \"is-active\", className)}\n          ref={innerRef}\n          {...rest}\n        />\n      </ModalContext.Provider>\n    );\n  }\n\n  private readonly close = () => {\n    if (this.props.onClose !== undefined) {\n      this.props.onClose();\n    }\n  };\n\n  private readonly handleKeydown = (event: KeyboardEvent) => {\n    if (this.props.closeOnEsc === true && event.code === \"Escape\") {\n      this.close();\n    }\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { canUseDOM } from \"../../utils\";\nimport { ModalContextValue } from \"./modal-context\";\nimport { ModalPortal } from \"./modal-portal\";\n\nexport type ModalContainerProps = {\n  active?: boolean;\n  as?: React.ReactType; // tslint:disable-line:no-reserved-keywords\n  children?: React.ReactNode;\n  clipped?: boolean;\n  closeOnBlur?: ModalContextValue[\"closeOnBlur\"];\n  closeOnEsc?: ModalContextValue[\"closeOnEsc\"];\n  containerClassName?: string;\n  document?: Document;\n  innerRef?: React.Ref<HTMLElement | SVGElement | React.ComponentType>;\n  onClose?: () => void;\n};\n\nexport class ModalContainer extends React.PureComponent<ModalContainerProps> {\n  public static displayName = \"Modal.Container\";\n  private readonly el: HTMLDivElement | undefined;\n\n  constructor(props: ModalContainerProps) {\n    super(props);\n    if (canUseDOM()) {\n      this.el = this.document.createElement(\"div\");\n      if (props.containerClassName !== undefined) {\n        this.el.className = props.containerClassName;\n      }\n    }\n  }\n\n  public componentDidMount() {\n    /* istanbul ignore else: typescript typeguard */\n    if (this.el !== undefined) {\n      this.document.body.appendChild(this.el);\n    }\n  }\n\n  public componentWillUnmount() {\n    /* istanbul ignore else: typescript typeguard */\n    if (this.el !== undefined) {\n      this.document.body.removeChild(this.el);\n    }\n  }\n\n  public render() {\n    const { active, containerClassName, document, ...rest } = this.props;\n\n    return this.el !== undefined && active === true\n      ? ReactDOM.createPortal(\n          <ModalPortal document={this.document} {...rest} />,\n          this.el,\n        )\n      : false;\n  }\n\n  private get document() {\n    return this.props.document !== undefined ? this.props.document : document;\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ModalContentProps = HelpersProps;\n\nexport const ModalContent = forwardRefAs<ModalContentProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"modal-content\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nModalContent.displayName = \"Modal.Content\";\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs } from \"../../base\";\nimport { ModalBackground } from \"./modal-background\";\nimport { ModalCard } from \"./modal-card\";\nimport { ModalClose } from \"./modal-close\";\nimport { ModalContainer, ModalContainerProps } from \"./modal-container\";\nimport { ModalContent } from \"./modal-content\";\nimport { ModalContext } from \"./modal-context\";\nimport { ModalPortal } from \"./modal-portal\";\n\nexport type ModalProps = Omit<ModalContainerProps, \"as\" | \"innerRef\">;\n\nconst propTypes = {\n  active: PropTypes.bool,\n  closeOnBlur: PropTypes.bool,\n  closeOnEsc: PropTypes.bool,\n  clipped: PropTypes.bool,\n  containerClassName: PropTypes.string,\n  document: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nexport const Modal = Object.assign(\n  forwardRefAs<ModalProps>(\n    (props, ref) => <ModalContainer innerRef={ref} {...props} />,\n    {\n      as: \"div\",\n      clipped: true,\n    },\n  ),\n  {\n    Background: ModalBackground,\n    Card: ModalCard,\n    Close: ModalClose,\n    Container: ModalContainer,\n    Content: ModalContent,\n    Context: ModalContext,\n    Portal: ModalPortal,\n    propTypes,\n  },\n);\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const PAGINATION_STEP_DEFAULTS = {\n  alignments: [\"next\", \"previous\"] as const,\n};\n\nexport interface PaginationStepVariablesOverrides {}\n\nexport interface PaginationStepVariablesDefaults {\n  alignments: (typeof PAGINATION_STEP_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type PaginationStepVariables = Prefer<\n  PaginationStepVariablesOverrides,\n  PaginationStepVariablesDefaults\n>;\n\nexport type PaginationStepModifierProps = {\n  align: PaginationStepVariables[\"alignments\"];\n};\n\nexport type PaginationStepProps = HelpersProps & PaginationStepModifierProps;\n\nexport const PaginationStep = forwardRefAs<PaginationStepProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames({ [`pagination-${align}`]: align }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"a\" },\n);\n\nPaginationStep.displayName = \"Pagination.Step\";\nPaginationStep.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PaginationEllipsisProps = HelpersProps;\n\nexport const PaginationEllipsis = forwardRefAs<PaginationEllipsisProps>(\n  ({ className, ...rest }, ref) => (\n    <li>\n      <Generic\n        className={classNames(\"pagination-ellipsis\", className)}\n        ref={ref}\n        {...rest}\n      />\n    </li>\n  ),\n  {\n    as: \"span\",\n    children: \"…\",\n  },\n);\n\nPaginationEllipsis.displayName = \"Pagination.Ellipsis\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PaginationLinkModifiers = {\n  current?: boolean;\n};\n\nexport type PaginationLinkProps = HelpersProps & PaginationLinkModifiers;\n\nexport const PaginationLink = forwardRefAs<PaginationLinkProps>(\n  ({ className, current, ...rest }, ref) => (\n    <li>\n      <Generic\n        className={classNames(\n          \"pagination-link\",\n          { \"is-current\": current },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    </li>\n  ),\n  { as: \"a\" },\n);\n\nPaginationLink.displayName = \"Pagination.Link\";\nPaginationLink.propTypes = {\n  current: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PaginationListProps = HelpersProps;\n\nexport const PaginationList = forwardRefAs<PaginationListProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"pagination-list\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"ul\" },\n);\n\nPaginationList.displayName = \"Pagination.List\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\nimport { PaginationEllipsis } from \"./pagination-ellipsis\";\nimport { PaginationLink } from \"./pagination-link\";\nimport { PaginationList } from \"./pagination-list\";\nimport { PaginationStep } from \"./pagination-step\";\n\nexport const PAGINATION_DEFAULTS = {\n  alignments: [\"centered\", \"right\"] as const,\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n};\n\nexport interface PaginationVariablesOverrides {}\n\nexport interface PaginationVariablesDefaults {\n  alignments: (typeof PAGINATION_DEFAULTS[\"alignments\"])[number];\n  sizes: (typeof PAGINATION_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type PaginationVariables = Prefer<\n  PaginationVariablesOverrides,\n  PaginationVariablesDefaults\n>;\n\nexport type PaginationModifiers = {\n  align?: PaginationVariables[\"alignments\"];\n  rounded?: boolean;\n  size?: PaginationVariables[\"sizes\"];\n};\n\nexport type PaginationProps = HelpersProps & PaginationModifiers;\n\nexport const Pagination = Object.assign(\n  forwardRefAs<PaginationProps>(\n    ({ align, className, rounded, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"pagination\",\n          {\n            [`is-${align}`]: align,\n            \"is-rounded\": rounded,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"nav\" },\n  ),\n  {\n    Ellipsis: PaginationEllipsis,\n    Link: PaginationLink,\n    List: PaginationList,\n    Step: PaginationStep,\n  },\n);\n\nPagination.displayName = \"Pagination\";\nPagination.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rounded: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelBlockModifierProps = {\n  active?: boolean;\n};\n\nexport type PanelBlockProps = HelpersProps & PanelBlockModifierProps;\n\nexport const PanelBlock = forwardRefAs<PanelBlockProps>(\n  ({ active, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-block\", { \"is-active\": active }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelBlock.displayName = \"Panel.Block\";\nPanelBlock.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelHeadingProps = HelpersProps;\n\nexport const PanelHeading = forwardRefAs<PanelHeadingProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-heading\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelHeading.displayName = \"Panel.Heading\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelIconProps = HelpersProps;\n\nexport const PanelIcon = forwardRefAs<PanelIconProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-icon\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"span\" },\n);\n\nPanelIcon.displayName = \"Panel.Icon\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelTabGroupProps = HelpersProps;\n\nexport const PanelTabGroup = forwardRefAs<PanelTabGroupProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-tabs\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelTabGroup.displayName = \"Panel.Tab.Group\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { PanelTabGroup } from \"./panel-tab-group\";\n\nexport type PanelTabModifierProps = {\n  active?: boolean;\n};\n\nexport type PanelTabProps = HelpersProps & PanelTabModifierProps;\n\nexport const PanelTab = Object.assign(\n  forwardRefAs<PanelTabProps>(\n    ({ active, className, ...rest }, ref) => (\n      <Generic\n        className={classNames({ \"is-active\": active }, className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"a\" },\n  ),\n  { Group: PanelTabGroup },\n);\n\nPanelTab.displayName = \"Panel.Tab\";\nPanelTab.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { PanelBlock } from \"./panel-block\";\nimport { PanelHeading } from \"./panel-heading\";\nimport { PanelIcon } from \"./panel-icon\";\nimport { PanelTab } from \"./panel-tab\";\n\nexport type PanelProps = HelpersProps;\n\nexport const Panel = Object.assign(\n  forwardRefAs<PanelProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"panel\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"nav\" },\n  ),\n  {\n    Block: PanelBlock,\n    Heading: PanelHeading,\n    Icon: PanelIcon,\n    Tab: PanelTab,\n  },\n);\n\nPanel.displayName = \"Panel\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const TAB_GROUP_DEFAULTS = {\n  alignments: [\"centered\", \"right\"] as const,\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n  kinds: [\"boxed\", \"toggle\", \"toggle-rounded\"] as const,\n};\n\nexport interface TabGroupVariablesOverrides {}\n\nexport interface TabGroupVariablesDefaults {\n  alignments: (typeof TAB_GROUP_DEFAULTS[\"alignments\"])[number];\n  sizes: (typeof TAB_GROUP_DEFAULTS[\"sizes\"])[number];\n  kinds: (typeof TAB_GROUP_DEFAULTS[\"kinds\"])[number];\n}\n\nexport type TabGroupVariables = Prefer<\n  TabGroupVariablesOverrides,\n  TabGroupVariablesDefaults\n>;\n\nexport type TabGroupModifierProps = {\n  align?: TabGroupVariables[\"alignments\"];\n  fullwidth?: boolean;\n  /** This is called style on Bulma documentation */\n  kind?: TabGroupVariables[\"kinds\"];\n  size?: TabGroupVariables[\"sizes\"];\n};\n\nexport type TabGroupProps = HelpersProps & TabGroupModifierProps;\n\nexport const TabGroup = forwardRefAs<TabGroupProps>(\n  ({ align, children, className, fullwidth, kind, size, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        \"tabs\",\n        {\n          [`is-${align}`]: align,\n          [`is-${size}`]: size,\n          \"is-fullwidth\": fullwidth,\n          [`is-${kind}`]: kind,\n          \"is-toggle\": kind === \"toggle\" || kind === \"toggle-rounded\",\n          \"is-toggle-rounded\": kind === \"toggle-rounded\",\n        },\n        className,\n      )}\n      children={<ul>{children}</ul>}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nTabGroup.displayName = \"Tab.Group\";\nTabGroup.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullwidth: PropTypes.bool,\n  kind: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { TabGroup } from \"./tab-group\";\n\nexport type TabModifierProps = {\n  active?: boolean;\n};\n\nexport type TabProps = HelpersProps & TabModifierProps;\n\nexport const Tab = Object.assign(\n  forwardRefAs<TabProps>(\n    ({ active, ...rest }, ref) => (\n      <li className={classNames({ \"is-active\": active })}>\n        <Generic ref={ref} {...rest} />\n      </li>\n    ),\n    { as: \"a\" },\n  ),\n  { Group: TabGroup },\n);\n\nTab.displayName = \"Tab\";\nTab.propTypes = {\n  active: PropTypes.bool,\n};\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Playground } from \"docz\";\nimport {\n  Frame,\n  ForwardRefAsExoticComponentDoc,\n  OptionBlock,\n  mapEnumerable,\n} from \"src/__docs__/components\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Navbar, Tab } from \"src/components\";\nimport { Block, Button, Content, Container, Icon, Title } from \"src/elements\";\nimport { Hero, HERO_DEFAULTS } from \"../hero\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"hero\"\n    }}>{`Hero`}</h1>\n    <p>{`An imposing `}<strong parentName=\"p\">{`hero banner`}</strong>{` to showcase something.`}</p>\n    <Content mdxType=\"Content\">\n  <p>\n    The <code>{\"<Hero>\"}</code> component allows you to add a{\" \"}\n    <strong>full width banner</strong> to your webpage, which can optionally\n    cover the full height of the page as well.\n  </p>\n  <p>The basic requirement of this component are:</p>\n  <ul>\n    <li>\n      <code>{\"<Hero>\"}</code> as the main container\n      <ul>\n        <li>\n          <code>{\"<Hero.Body>\"}</code> as a direct child, in which you can put\n          all your content\n        </li>\n      </ul>\n    </li>\n  </ul>\n  <p>\n    For the full height <code>{\"<Hero>\"}</code> to work, you will also need a{\" \"}\n    <code>{\"<Hero.Head>\"}</code> and a <code>{\"<Hero.Foot>\"}</code>.\n  </p>\n    </Content>\n    <Playground __position={1} __code={'<Hero>\\n  <Hero.Body>\\n    <Container>\\n      <Title>Hero title</Title>\\n      <Title as=\\\"h2\\\" subtitle>\\n        Hero Subtitle\\n      </Title>\\n    </Container>\\n  </Hero.Body>\\n</Hero>'} __scope={{\n      props: this ? this.props : props,\n      faGithub,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Navbar,\n      Tab,\n      Block,\n      Button,\n      Content,\n      Container,\n      Icon,\n      Title,\n      Hero,\n      HERO_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Hero mdxType=\"Hero\">\n    <Hero.Body>\n      <Container mdxType=\"Container\">\n        <Title mdxType=\"Title\">Hero title</Title>\n        <Title as=\"h2\" subtitle mdxType=\"Title\">\n          Hero Subtitle\n        </Title>\n      </Container>\n    </Hero.Body>\n  </Hero>\n    </Playground>\n    <h3 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop to specify the color of the `}<inlineCode parentName=\"p\">{`<Hero>`}</inlineCode>{`.`}</p>\n    <Playground __position={2} __code={'() =>\\n  DEFAULTS.colors.map((color, i) => (\\n    <OptionBlock props={{ color }} index={i} key={i}>\\n      <Hero color={color}>\\n        <Hero.Body>\\n          <Container>\\n            <Title>{color} hero\\'s title</Title>\\n            <Title as=\\\"h2\\\" subtitle>\\n              {color} hero\\'s subtitle\\n            </Title>\\n          </Container>\\n        </Hero.Body>\\n      </Hero>\\n    </OptionBlock>\\n  ))'} __scope={{\n      props: this ? this.props : props,\n      faGithub,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Navbar,\n      Tab,\n      Block,\n      Button,\n      Content,\n      Container,\n      Icon,\n      Title,\n      Hero,\n      HERO_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => DEFAULTS.colors.map((color, i) => <OptionBlock props={{\n        color\n      }} index={i} key={i} mdxType=\"OptionBlock\">\n        <Hero color={color} mdxType=\"Hero\">\n          <Hero.Body>\n            <Container mdxType=\"Container\">\n              <Title mdxType=\"Title\">{color} hero's title</Title>\n              <Title as=\"h2\" subtitle mdxType=\"Title\">\n                {color} hero's subtitle\n              </Title>\n            </Container>\n          </Hero.Body>\n        </Hero>\n      </OptionBlock>)}\n    </Playground>\n    <h3 {...{\n      \"id\": \"gradients\"\n    }}>{`Gradients`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`gradient`}</inlineCode>{` prop to generate a subtle gradient.`}</p>\n    <Playground __position={3} __code={'() =>\\n  DEFAULTS.colors.map((color, i) => (\\n    <OptionBlock props={{ color }} index={i} key={i}>\\n      <Hero gradient color={color}>\\n        <Hero.Body>\\n          <Container>\\n            <Title>{color} hero\\'s title with gradient</Title>\\n            <Title as=\\\"h2\\\" subtitle>\\n              {color} hero\\'s subtitle with gradient\\n            </Title>\\n          </Container>\\n        </Hero.Body>\\n      </Hero>\\n    </OptionBlock>\\n  ))'} __scope={{\n      props: this ? this.props : props,\n      faGithub,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Navbar,\n      Tab,\n      Block,\n      Button,\n      Content,\n      Container,\n      Icon,\n      Title,\n      Hero,\n      HERO_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => DEFAULTS.colors.map((color, i) => <OptionBlock props={{\n        color\n      }} index={i} key={i} mdxType=\"OptionBlock\">\n        <Hero gradient color={color} mdxType=\"Hero\">\n          <Hero.Body>\n            <Container mdxType=\"Container\">\n              <Title mdxType=\"Title\">{color} hero's title with gradient</Title>\n              <Title as=\"h2\" subtitle mdxType=\"Title\">\n                {color} hero's subtitle with gradient\n              </Title>\n            </Container>\n          </Hero.Body>\n        </Hero>\n      </OptionBlock>)}\n    </Playground>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop to make more imposing banners.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const sizes = HERO_DEFAULTS.sizes.map(size => ({ name: size, size }))\\n  sizes.splice(1, 0, { name: \\'normal\\', size: undefined })\\n  return sizes.map(({ size, name }, i) => (\\n    <OptionBlock props={{ size }} index={i} key={i}>\\n      <Hero color=\\\"primary\\\" size={size}>\\n        <Hero.Body>\\n          <Container>\\n            <Title>{name} hero\\'s title</Title>\\n            <Title as=\\\"h2\\\" subtitle>\\n              {name} hero\\'s subtitle\\n            </Title>\\n          </Container>\\n        </Hero.Body>\\n      </Hero>\\n    </OptionBlock>\\n  ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      faGithub,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Navbar,\n      Tab,\n      Block,\n      Button,\n      Content,\n      Container,\n      Icon,\n      Title,\n      Hero,\n      HERO_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const sizes = HERO_DEFAULTS.sizes.map(size => ({\n          name: size,\n          size\n        }));\n        sizes.splice(1, 0, {\n          name: \"normal\",\n          size: undefined\n        });\n        return sizes.map(({\n          size,\n          name\n        }, i) => <OptionBlock props={{\n          size\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n    <Hero color=\"primary\" size={size} mdxType=\"Hero\">\n      <Hero.Body>\n        <Container mdxType=\"Container\">\n          <Title mdxType=\"Title\">{name} hero's title</Title>\n          <Title as=\"h2\" subtitle mdxType=\"Title\">\n            {name} hero's subtitle\n          </Title>\n        </Container>\n      </Hero.Body>\n    </Hero>\n  </OptionBlock>);\n      }}\n    </Playground>\n    <p>{`The last `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop value is: `}<inlineCode parentName=\"p\">{`fullheight-with-navbar`}</inlineCode>{`.\nIt's useful when you've got a `}<inlineCode parentName=\"p\">{`<Navbar>`}</inlineCode>{` with the `}<inlineCode parentName=\"p\">{`fixed`}</inlineCode>{` prop set.\nThe `}<inlineCode parentName=\"p\">{`<Hero>`}</inlineCode>{` will occupy the full viewport height minus the `}<inlineCode parentName=\"p\">{`<Navbar>`}</inlineCode>{`'s height.`}</p>\n    <Playground __position={5} __code={'<Frame>\\n  {({ document }) => (\\n    <div style={{ height: \\'500px\\' }}>\\n      <Navbar fixed=\\\"top\\\" color=\\\"warning\\\" document={document}>\\n        <Navbar.Brand>\\n          <Navbar.Item href=\\\"#\\\">\\n            <img\\n              src=\\\"https://bulma.io/images/bulma-logo.png\\\"\\n              alt=\\\"\\\"\\n              role=\\\"presentation\\\"\\n              width=\\\"112\\\"\\n              height=\\\"28\\\"\\n            />\\n          </Navbar.Item>\\n          <Navbar.Burger />\\n        </Navbar.Brand>\\n        <Navbar.Menu>\\n          <Navbar.Segment align=\\\"start\\\">\\n            <Navbar.Item>Home</Navbar.Item>\\n            <Navbar.Item>Documentation</Navbar.Item>\\n          </Navbar.Segment>\\n\\n          <Navbar.Segment align=\\\"end\\\">\\n            <Navbar.Item>\\n              <Button.Group>\\n                <Button color=\\\"dark\\\">Github</Button>\\n                <Button color=\\\"link\\\">Download</Button>\\n              </Button.Group>\\n            </Navbar.Item>\\n          </Navbar.Segment>\\n        </Navbar.Menu>\\n      </Navbar>\\n\\n      <Hero color=\\\"primary\\\" size=\\\"fullheight-with-navbar\\\">\\n        <Hero.Body>\\n          <Container>\\n            <Title>Fullheight hero with navbar</Title>\\n          </Container>\\n        </Hero.Body>\\n      </Hero>\\n    </div>\\n  )}\\n</Frame>'} __scope={{\n      props: this ? this.props : props,\n      faGithub,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Navbar,\n      Tab,\n      Block,\n      Button,\n      Content,\n      Container,\n      Icon,\n      Title,\n      Hero,\n      HERO_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Frame mdxType=\"Frame\">\n    {({\n          document\n        }) => <div style={{\n          height: \"500px\"\n        }}>\n        <Navbar fixed=\"top\" color=\"warning\" document={document} mdxType=\"Navbar\">\n          <Navbar.Brand>\n            <Navbar.Item href=\"#\">\n              <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"\" role=\"presentation\" width=\"112\" height=\"28\" />\n            </Navbar.Item>\n            <Navbar.Burger />\n          </Navbar.Brand>\n      <Navbar.Menu>\n        <Navbar.Segment align=\"start\">\n          <Navbar.Item>Home</Navbar.Item>\n          <Navbar.Item>Documentation</Navbar.Item>\n        </Navbar.Segment>\n\n        <Navbar.Segment align=\"end\">\n          <Navbar.Item>\n            <Button.Group>\n              <Button color=\"dark\" mdxType=\"Button\">Github</Button>\n              <Button color=\"link\" mdxType=\"Button\">Download</Button>\n            </Button.Group>\n          </Navbar.Item>\n        </Navbar.Segment>\n      </Navbar.Menu>\n    </Navbar>\n\n    <Hero color=\"primary\" size=\"fullheight-with-navbar\" mdxType=\"Hero\">\n      <Hero.Body>\n        <Container mdxType=\"Container\">\n          <Title mdxType=\"Title\">Fullheight hero with navbar</Title>\n        </Container>\n      </Hero.Body>\n    </Hero>\n  </div>}\n  </Frame>\n    </Playground>\n    <h3 {...{\n      \"id\": \"full-height-hero-in-three-parts\"\n    }}>{`Full height hero in three parts`}</h3>\n    <p>{`You can make a `}<inlineCode parentName=\"p\">{`<Hero>`}</inlineCode>{` that covers the whole height of the viewport by splitting it into three parts, using: `}<inlineCode parentName=\"p\">{`<Hero.Head>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<Hero.Body>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<Hero.Foot>`}</inlineCode>{`.`}</p>\n    <Playground __position={6} __code={'<Frame style={{ height: \\'500px\\' }}>\\n  <Hero size=\\\"fullheight\\\" color=\\\"primary\\\">\\n    {/* Hero head: will stick at the top */}\\n    <Hero.Head>\\n      <Navbar>\\n        <Container>\\n          <Navbar.Brand>\\n            <Navbar.Item>\\n              <img\\n                src=\\\"https://bulma.io/images/bulma-type-white.png\\\"\\n                alt=\\\"Logo\\\"\\n              />\\n            </Navbar.Item>\\n            <Navbar.Burger />\\n          </Navbar.Brand>\\n          <Navbar.Menu>\\n            <Navbar.Segment align=\\\"end\\\">\\n              <Navbar.Item active>Home</Navbar.Item>\\n              <Navbar.Item>Examples</Navbar.Item>\\n              <Navbar.Item>Documentation</Navbar.Item>\\n              <Navbar.Item as=\\\"span\\\">\\n                <Button color=\\\"primary\\\" inverted>\\n                  <Icon>\\n                    <FontAwesomeIcon icon={faGithub} />\\n                  </Icon>\\n                  <span>Download</span>\\n                </Button>\\n              </Navbar.Item>\\n            </Navbar.Segment>\\n          </Navbar.Menu>\\n        </Container>\\n      </Navbar>\\n    </Hero.Head>\\n    {/* Hero content: will be in the middle */}\\n    <Hero.Body>\\n      <Container textAlign=\\\"centered\\\">\\n        <Title>Title</Title>\\n        <Title as=\\\"h2\\\" subtitle>\\n          Subtitle\\n        </Title>\\n      </Container>\\n    </Hero.Body>\\n\\n    {/* Hero footer: will stick at the bottom */}\\n    <Hero.Foot>\\n      <Container>\\n        <Tab.Group as=\\\"nav\\\" type=\\\"boxed\\\" fullwidth>\\n          <Tab active>Overview</Tab>\\n          <Tab>Modifiers</Tab>\\n          <Tab>Grid</Tab>\\n          <Tab>Elements</Tab>\\n          <Tab>Components</Tab>\\n          <Tab>Layout</Tab>\\n        </Tab.Group>\\n      </Container>\\n    </Hero.Foot>\\n  </Hero>\\n</Frame>'} __scope={{\n      props: this ? this.props : props,\n      faGithub,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Navbar,\n      Tab,\n      Block,\n      Button,\n      Content,\n      Container,\n      Icon,\n      Title,\n      Hero,\n      HERO_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Frame style={{\n        height: \"500px\"\n      }} mdxType=\"Frame\">\n    <Hero size=\"fullheight\" color=\"primary\" mdxType=\"Hero\">\n      {\n            /* Hero head: will stick at the top */\n          }\n      <Hero.Head>\n        <Navbar mdxType=\"Navbar\">\n          <Container mdxType=\"Container\">\n            <Navbar.Brand>\n              <Navbar.Item>\n                <img src=\"https://bulma.io/images/bulma-type-white.png\" alt=\"Logo\" />\n              </Navbar.Item>\n              <Navbar.Burger />\n            </Navbar.Brand>\n            <Navbar.Menu>\n              <Navbar.Segment align=\"end\">\n                <Navbar.Item active>Home</Navbar.Item>\n                <Navbar.Item>Examples</Navbar.Item>\n                <Navbar.Item>Documentation</Navbar.Item>\n                <Navbar.Item as=\"span\">\n                  <Button color=\"primary\" inverted mdxType=\"Button\">\n                    <Icon mdxType=\"Icon\">\n                      <FontAwesomeIcon icon={faGithub} mdxType=\"FontAwesomeIcon\" />\n                    </Icon>\n                    <span>Download</span>\n                  </Button>\n                </Navbar.Item>\n              </Navbar.Segment>\n            </Navbar.Menu>\n          </Container>\n        </Navbar>\n      </Hero.Head>\n  {\n            /* Hero content: will be in the middle */\n          }\n  <Hero.Body>\n    <Container textAlign=\"centered\" mdxType=\"Container\">\n      <Title mdxType=\"Title\">Title</Title>\n      <Title as=\"h2\" subtitle mdxType=\"Title\">\n        Subtitle\n      </Title>\n    </Container>\n  </Hero.Body>\n\n  {\n            /* Hero footer: will stick at the bottom */\n          }\n  <Hero.Foot>\n    <Container mdxType=\"Container\">\n      <Tab.Group as=\"nav\" type=\"boxed\" fullwidth>\n        <Tab active mdxType=\"Tab\">Overview</Tab>\n        <Tab mdxType=\"Tab\">Modifiers</Tab>\n        <Tab mdxType=\"Tab\">Grid</Tab>\n        <Tab mdxType=\"Tab\">Elements</Tab>\n        <Tab mdxType=\"Tab\">Components</Tab>\n        <Tab mdxType=\"Tab\">Layout</Tab>\n      </Tab.Group>\n    </Container>\n  </Hero.Foot>\n\n        </Hero>\n  </Frame>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Hero} customize docPath=\"/layout/hero\" props={{\n      color: {\n        description: \"set the hero's color\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(DEFAULTS.colors)\n      },\n      gradient: {\n        description: \"apply a standard gradient for the color scheme\",\n        typeName: \"boolean\"\n      },\n      size: {\n        description: \"set the hero's size\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(HERO_DEFAULTS.sizes)\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Hero.Body} docPath=\"/layout/hero\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Hero.Foot} docPath=\"/layout/hero\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Hero.Head} docPath=\"/layout/hero\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type HeroBodyProps = HelpersProps;\n\nexport const HeroBody = forwardRefAs<HeroBodyProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"hero-body\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nHeroBody.displayName = \"Hero.Body\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type HeroFootProps = HelpersProps;\n\nexport const HeroFoot = forwardRefAs<HeroFootProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"hero-foot\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nHeroFoot.displayName = \"Hero.Foot\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type HeroHeadProps = HelpersProps;\n\nexport const HeroHead = forwardRefAs<HeroHeadProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"hero-head\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nHeroHead.displayName = \"Hero.Head\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Variables } from \"../../base/helpers/variables\";\nimport { Prefer } from \"../../types\";\nimport { HeroBody } from \"./hero-body\";\nimport { HeroFoot } from \"./hero-foot\";\nimport { HeroHead } from \"./hero-head\";\n\nexport const HERO_DEFAULTS = {\n  sizes: [\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"fullheight\",\n    \"fullheight-with-navbar\",\n  ] as const,\n};\n\nexport interface HeroVariablesOverrides {}\n\nexport interface HeroVariablesDefaults {\n  sizes: (typeof HERO_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type HeroVariables = Prefer<\n  HeroVariablesOverrides,\n  HeroVariablesDefaults\n>;\n\nexport type HeroModifierProps = {\n  color?: Variables[\"colors\"];\n  gradient?: boolean;\n  size?: HeroVariables[\"sizes\"];\n};\n\nexport type HeroProps = HelpersProps & HeroModifierProps;\n\nexport const Hero = Object.assign(\n  forwardRefAs<HeroProps>(\n    ({ className, color, gradient, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"hero\",\n          {\n            \"is-bold\": gradient,\n            [`is-${color}`]: color,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"section\" },\n  ),\n  {\n    Body: HeroBody,\n    Foot: HeroFoot,\n    Head: HeroHead,\n  },\n);\n\nHero.displayName = \"Hero\";\nHero.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  gradient: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n"],"sourceRoot":""}