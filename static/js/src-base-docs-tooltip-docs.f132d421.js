(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./src/base/__docs__/tooltip.docs.mdx":function(o,t,e){"use strict";e.r(t),e.d(t,"default",function(){return m});var i=e("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),n=e("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),p=(e("./node_modules/react/index.js"),e("./node_modules/@mdx-js/react/dist/index.es.js")),l=e("./node_modules/docz/dist/index.esm.js"),c=e("./src/__docs__/components/index.ts"),r=e("./src/base/index.ts"),s=e("./src/base/helpers/variables.ts"),a=e("./src/elements/index.ts"),d={},b="wrapper";function m(o){var t,e=o.components,m=Object(n.a)(o,["components"]);return Object(p.b)(b,Object.assign({},d,m,{components:e,mdxType:"MDXLayout"}),Object(p.b)("h1",{id:"tooltip"},"Tooltip"),Object(p.b)("p",null,"Display a ",Object(p.b)("strong",{parentName:"p"},"tooltip")," attached to any kind of element with different positioning."),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"This is available on every component as it's handled by the ",Object(p.b)("inlineCode",{parentName:"em"},"Generic")," component.")),Object(p.b)("p",null,"It can display a ",Object(p.b)("inlineCode",{parentName:"p"},"number")," or a ",Object(p.b)("inlineCode",{parentName:"p"},"string")," on any component using ",Object(p.b)("inlineCode",{parentName:"p"},"Generic"),"."),Object(p.b)(l.c,{__position:0,__code:'<Generic as="span" tooltip="pending" textColor="primary">\n  Tooltip\n</Generic>',__scope:{props:this?this.props:m,Playground:l.c,ForwardRefAsExoticComponentDoc:c.b,mapEnumerable:c.g,OptionBlock:c.d,Generic:r.a,DEFAULTS:s.a,Block:a.a,Button:a.c,Title:a.u},mdxType:"Playground"},Object(p.b)(r.a,{as:"span",tooltip:"pending",textColor:"primary",mdxType:"Generic"},"Tooltip")),Object(p.b)("p",null,"Or, you can use any other ",Object(p.b)("inlineCode",{parentName:"p"},"rbx")," component (e.g. ",Object(p.b)("inlineCode",{parentName:"p"},"<Button>"),") and use the same API."),Object(p.b)(l.c,{__position:1,__code:'<Button tooltip="pending" color="primary">\n  Tooltip\n</Button>',__scope:{props:this?this.props:m,Playground:l.c,ForwardRefAsExoticComponentDoc:c.b,mapEnumerable:c.g,OptionBlock:c.d,Generic:r.a,DEFAULTS:s.a,Block:a.a,Button:a.c,Title:a.u},mdxType:"Playground"},Object(p.b)(a.c,{tooltip:"pending",color:"primary",mdxType:"Button"},"Tooltip")),Object(p.b)("h3",{id:"colors"},"Colors"),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"tooltipColor")," prop to specify the color."),Object(p.b)(l.c,{__position:2,__code:"() =>\n  DEFAULTS.colors.map((tooltipColor, i) => (\n    <OptionBlock props={{ tooltipColor }} index={i} key={i}>\n      <Button tooltip={tooltipColor} tooltipColor={tooltipColor}>\n        {tooltipColor} tooltip\n      </Button>\n    </OptionBlock>\n  ))",__scope:{props:this?this.props:m,Playground:l.c,ForwardRefAsExoticComponentDoc:c.b,mapEnumerable:c.g,OptionBlock:c.d,Generic:r.a,DEFAULTS:s.a,Block:a.a,Button:a.c,Title:a.u},mdxType:"Playground"},function(){return s.a.colors.map(function(o,t){return Object(p.b)(c.d,{props:{tooltipColor:o},index:t,key:t,mdxType:"OptionBlock"},Object(p.b)(a.c,{tooltip:o,tooltipColor:o,mdxType:"Button"},o," tooltip"))})}),Object(p.b)("h3",{id:"positioning"},"Positioning"),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"tooltipPosition")," prop to specify the position of the tooltip."),Object(p.b)(l.c,{__position:3,__code:'() =>\n  DEFAULTS.tooltipPositions.map((tooltipPosition, i) => (\n    <OptionBlock props={{ tooltipPosition }} index={i} key={i}>\n      <Button\n        color="primary"\n        tooltip={tooltipPosition}\n        tooltipPosition={tooltipPosition}\n      >\n        {tooltipPosition} tooltip\n      </Button>\n    </OptionBlock>\n  ))',__scope:{props:this?this.props:m,Playground:l.c,ForwardRefAsExoticComponentDoc:c.b,mapEnumerable:c.g,OptionBlock:c.d,Generic:r.a,DEFAULTS:s.a,Block:a.a,Button:a.c,Title:a.u},mdxType:"Playground"},function(){return s.a.tooltipPositions.map(function(o,t){return Object(p.b)(c.d,{props:{tooltipPosition:o},index:t,key:t,mdxType:"OptionBlock"},Object(p.b)(a.c,{color:"primary",tooltip:o,tooltipPosition:o,mdxType:"Button"},o," tooltip"))})}),Object(p.b)("h3",{id:"responsive-positioning"},"Responsive positioning"),Object(p.b)("p",null,"You can position the tooltip at differently depending on the screen size."),Object(p.b)(l.c,{__position:4,__code:'<Button\n  color="primary"\n  tooltip="Hi! I\'m on top and bottom."\n  tooltipPosition="top"\n  tooltipResponsive={{ desktop: \'bottom\' }}\n>\n  Top and bottom\n</Button>',__scope:{props:this?this.props:m,Playground:l.c,ForwardRefAsExoticComponentDoc:c.b,mapEnumerable:c.g,OptionBlock:c.d,Generic:r.a,DEFAULTS:s.a,Block:a.a,Button:a.c,Title:a.u},mdxType:"Playground"},Object(p.b)(a.c,{color:"primary",tooltip:"Hi! I'm on top and bottom.",tooltipPosition:"top",tooltipResponsive:{desktop:"bottom"},mdxType:"Button"},"Top and bottom")),Object(p.b)("p",null,"If you resize your browser window around ",Object(p.b)("inlineCode",{parentName:"p"},"1024px")," (the ",Object(p.b)("inlineCode",{parentName:"p"},"touch")," breakpoint), then the tooltip will change position."),Object(p.b)("h3",{id:"styles"},"Styles"),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"tooltipActive")," prop to force the tooltip to be visible."),Object(p.b)(l.c,{__position:5,__code:'<Button tooltip="pending" color="primary" tooltipActive>\n  Tooltip\n</Button>',__scope:{props:this?this.props:m,Playground:l.c,ForwardRefAsExoticComponentDoc:c.b,mapEnumerable:c.g,OptionBlock:c.d,Generic:r.a,DEFAULTS:s.a,Block:a.a,Button:a.c,Title:a.u},mdxType:"Playground"},Object(p.b)(a.c,{tooltip:"pending",color:"primary",tooltipActive:!0,mdxType:"Button"},"Tooltip")),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"tooltipMultiline")," prop to allow for the tooltip to flow to multiple lines."),Object(p.b)(l.c,{__position:6,__code:'<Button\n  tooltip="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."\n  color="primary"\n  tooltipMultiline\n>\n  Tooltip\n</Button>',__scope:{props:this?this.props:m,Playground:l.c,ForwardRefAsExoticComponentDoc:c.b,mapEnumerable:c.g,OptionBlock:c.d,Generic:r.a,DEFAULTS:s.a,Block:a.a,Button:a.c,Title:a.u},mdxType:"Playground"},Object(p.b)(a.c,{tooltip:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",color:"primary",tooltipMultiline:!0,mdxType:"Button"},"Tooltip")),Object(p.b)("h2",{id:"api"},"API"),Object(p.b)("p",null,"The ",Object(p.b)("inlineCode",{parentName:"p"},"tooltip")," API is built into the ",Object(p.b)("inlineCode",{parentName:"p"},"<Generic>")," component, so these props can be used by any ",Object(p.b)("inlineCode",{parentName:"p"},"rbx")," component."),Object(p.b)(c.b,{component:r.a,customize:!0,docPath:"https://wikiki.github.io/elements/tooltip/",docProvider:"Bulma-Extensions",props:(t={tooltip:{description:"the contents of the tooltip",typeName:"number | string"},tooltipActive:{description:"force the tooltip to be displayed",typeName:"boolean"},tooltipColor:{description:"the color of the tooltip",typeName:"string (literal)",typeTip:Object(c.g)(s.a.colors)}},Object(i.a)(t,"tooltipActive",{description:"allow the tooltip text to flow over multipe lines",typeName:"boolean"}),Object(i.a)(t,"tooltipPosition",{description:"the position of the tooltip",typeName:"string (literal)",typeTip:Object(c.g)(s.a.tooltipPositions)}),Object(i.a)(t,"tooltipResponsive",{description:"the responsive positioning of the tooltip",typeName:"{ [Breakpoint]: <tooltipPosition value> }"}),t),mdxType:"ForwardRefAsExoticComponentDoc"}))}m&&m===Object(m)&&Object.isExtensible(m)&&Object.defineProperty(m,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/base/__docs__/tooltip.docs.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=src-base-docs-tooltip-docs.fc493be904ddd6f2633b.js.map