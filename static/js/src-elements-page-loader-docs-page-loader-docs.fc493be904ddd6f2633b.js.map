{"version":3,"sources":["/Users/dfee/code/rbx/src/elements/page-loader/__docs__/simple-page-loader-manager.tsx","/Users/dfee/code/rbx/src/elements/page-loader/__docs__/page-loader.docs.mdx"],"names":["SimplePageLoaderManager","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","defineProperty","assertThisInitialized","active","setState","setTimeout","inherits","createClass","key","value","_this$props","props","button","rest","objectWithoutProperties","managedButton","React","cloneElement","onClick","handleClick","react_default","a","createElement","Fragment","page_loader","assign","state","Component","layoutProps","MDXLayout","MDXContent","_ref","components","index_es","mdxType","id","parentName","index_esm","__position","__code","__scope","Playground","ForwardRefAsExoticComponentDoc","Frame","mapEnumerable","DEFAULTS","Button","Notification","Title","PageLoader","PAGE_LOADER_DEFAULTS","_docs_components","style","height","forceHeight","simple_page_loader_manager_SimplePageLoaderManager","color","src_elements","as","Group","colors","map","i","directions","name","direction","undefined","toConsumableArray","_ref2","component","customize","docPath","docProvider","description","typeName","typeTip","isMDXComponent"],"mappings":"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","file":"static/js/src-elements-page-loader-docs-page-loader-docs.a74bab87.js","sourcesContent":["import React from \"react\";\n\nimport { Button } from \"src/elements/button/button\";\nimport { PageLoader, PageLoaderProps } from \"../page-loader\";\n\nexport type SimplePageLoaderManagerProps = Omit<PageLoaderProps, \"active\"> & {\n  children: React.ReactNode;\n  button: React.ReactElement<React.ComponentProps<typeof Button>>;\n};\nexport type SimplePageLoaderManagerState = { active: boolean };\n\nexport class SimplePageLoaderManager extends React.Component<\n  SimplePageLoaderManagerProps,\n  SimplePageLoaderManagerState\n> {\n  public readonly state: SimplePageLoaderManagerState = { active: false };\n\n  public render() {\n    const { button, ...rest } = this.props;\n\n    const managedButton = React.cloneElement(button, {\n      onClick: this.handleClick,\n    });\n\n    return (\n      <React.Fragment>\n        {managedButton}\n        <PageLoader {...rest} active={this.state.active} />\n      </React.Fragment>\n    );\n  }\n\n  private readonly handleClick = () => {\n    this.setState({ active: true }, () => {\n      setTimeout(() => {\n        this.setState({ active: false });\n      }, 3000);\n    });\n  };\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from \"docz\";\nimport {\n  ForwardRefAsExoticComponentDoc,\n  Frame,\n  mapEnumerable,\n} from \"src/__docs__/components\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Button, Notification, Title } from \"src/elements\";\nimport { PageLoader, PAGE_LOADER_DEFAULTS } from \"../page-loader\";\nimport { SimplePageLoaderManager } from \"./simple-page-loader-manager\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"pageloader\"\n    }}>{`PageLoader`}</h1>\n    <p>{`Display a `}<strong parentName=\"p\">{`page-loader`}</strong>{` to inform users that content is loading.`}</p>\n    <Playground __position={0} __code={'<Frame style={{ height: \\'400px\\' }} forceHeight>\\n  {/* SimplePageLoaderManager is a reference implementation for the docs! */}\\n  <SimplePageLoaderManager\\n    color=\\\"primary\\\"\\n    button={<Button>Toggle for 3 Seconds</Button>}\\n  >\\n    <Title as=\\\"span\\\">PageLoader</Title>\\n  </SimplePageLoaderManager>\\n</Frame>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      Frame,\n      mapEnumerable,\n      DEFAULTS,\n      Button,\n      Notification,\n      Title,\n      PageLoader,\n      PAGE_LOADER_DEFAULTS,\n      SimplePageLoaderManager\n    }} mdxType=\"Playground\">\n  <Frame style={{\n        height: \"400px\"\n      }} forceHeight mdxType=\"Frame\">\n    {\n          /* SimplePageLoaderManager is a reference implementation for the docs! */\n        }\n    <SimplePageLoaderManager color=\"primary\" button={<Button mdxType=\"Button\">Toggle for 3 Seconds</Button>} mdxType=\"SimplePageLoaderManager\">\n      <Title as=\"span\" mdxType=\"Title\">PageLoader</Title>\n    </SimplePageLoaderManager>\n  </Frame>\n    </Playground>\n    <Notification color=\"warning\" mdxType=\"Notification\">\n  <strong>Note:</strong> the <code>{\"<SimplePageLoaderManager>\"}</code> used in\n  these playgrounds is a reference implementation for the docs, and is not\n  available in the release.\n  <strong>rbx</strong> provides a <em>foundation</em>, not an <em>opinion</em> for\n  components.\n    </Notification>\n    <h3 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<PageLoader>`}</inlineCode>{` to specify the color.`}</p>\n    <Playground __position={2} __code={'<Frame style={{ height: \\'500px\\' }} forceHeight>\\n  <Button.Group>\\n    {DEFAULTS.colors.map((color, i) => (\\n      <SimplePageLoaderManager\\n        key={i}\\n        color={color}\\n        button={<Button color={color}>Toggle {color}</Button>}\\n      >\\n        <Title as=\\\"span\\\">{color} PageLoader</Title>\\n      </SimplePageLoaderManager>\\n    ))}\\n  </Button.Group>\\n</Frame>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      Frame,\n      mapEnumerable,\n      DEFAULTS,\n      Button,\n      Notification,\n      Title,\n      PageLoader,\n      PAGE_LOADER_DEFAULTS,\n      SimplePageLoaderManager\n    }} mdxType=\"Playground\">\n  <Frame style={{\n        height: \"500px\"\n      }} forceHeight mdxType=\"Frame\">\n    <Button.Group>\n      {DEFAULTS.colors.map((color, i) => <SimplePageLoaderManager key={i} color={color} button={<Button color={color} mdxType=\"Button\">Toggle {color}</Button>} mdxType=\"SimplePageLoaderManager\">\n          <Title as=\"span\" mdxType=\"Title\">{color} PageLoader</Title>\n        </SimplePageLoaderManager>)}\n    </Button.Group>\n  </Frame>\n    </Playground>\n    <h3 {...{\n      \"id\": \"direction\"\n    }}>{`Direction`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`direction`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<PageLoader>`}</inlineCode>{` to specify the loading direction.`}</p>\n    <Playground __position={3} __code={'<Frame style={{ height: \\'500px\\' }} forceHeight>\\n  {() => {\\n    const directions = [\\n      { name: \\'top-to-bottom (default)\\', direction: undefined },\\n      ...PAGE_LOADER_DEFAULTS.directions.map(direction => ({\\n        direction,\\n        name: direction,\\n      })),\\n    ]\\n    return (\\n      <Button.Group>\\n        {directions.map(({ direction, name }, i) => (\\n          <SimplePageLoaderManager\\n            key={i}\\n            direction={direction}\\n            button={<Button>Toggle {name}</Button>}\\n          >\\n            <Title as=\\\"span\\\">{name} PageLoader</Title>\\n          </SimplePageLoaderManager>\\n        ))}\\n      </Button.Group>\\n    )\\n  }}\\n</Frame>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      Frame,\n      mapEnumerable,\n      DEFAULTS,\n      Button,\n      Notification,\n      Title,\n      PageLoader,\n      PAGE_LOADER_DEFAULTS,\n      SimplePageLoaderManager\n    }} mdxType=\"Playground\">\n  <Frame style={{\n        height: \"500px\"\n      }} forceHeight mdxType=\"Frame\">\n    {() => {\n          const directions = [{\n            name: 'top-to-bottom (default)',\n            direction: undefined\n          }, ...PAGE_LOADER_DEFAULTS.directions.map(direction => ({\n            direction,\n            name: direction\n          }))];\n          return <Button.Group>\n      {directions.map(({\n              direction,\n              name\n            }, i) => <SimplePageLoaderManager key={i} direction={direction} button={<Button mdxType=\"Button\">Toggle {name}</Button>} mdxType=\"SimplePageLoaderManager\">\n          <Title as=\"span\" mdxType=\"Title\">{name} PageLoader</Title>\n        </SimplePageLoaderManager>)}\n    </Button.Group>;\n        }}\n  </Frame>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={PageLoader} customize docPath=\"https://wikiki.github.io/elements/pageloader/\" docProvider=\"Bulma-Extensions\" props={{\n      active: {\n        description: \"show the page-loader\",\n        typeName: \"boolean\"\n      },\n      color: {\n        description: \"the color of the page-loader\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(DEFAULTS.colors)\n      },\n      direction: {\n        description: \"the directinon from which the page-loader appears\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(PAGE_LOADER_DEFAULTS.directions)\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}