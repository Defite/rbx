{"version":3,"sources":["/Users/dfee/code/rbx/src/components/message/__docs__/message.docs.mdx","/Users/dfee/code/rbx/src/components/message/message-body.tsx","/Users/dfee/code/rbx/src/components/message/message-header.tsx","/Users/dfee/code/rbx/src/components/message/message.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","ForwardRefAsExoticComponentDoc","mapEnumerable","OptionBlock","DEFAULTS","Delete","Message","MESSAGE_DEFAULTS","_message__WEBPACK_IMPORTED_MODULE_7__","Header","src_elements__WEBPACK_IMPORTED_MODULE_6__","as","Body","href","colors","map","color","i","src_docs_components__WEBPACK_IMPORTED_MODULE_4__","index","key","sizes","size","name","splice","undefined","_ref2","component","customize","docPath","description","typeName","typeTip","isMDXComponent","MessageBody","forwardRefAs","ref","className","rest","objectWithoutProperties","react_default","a","createElement","base","classNames","displayName","MessageHeader","_classNames","defineProperty","concat","propTypes","PropTypes","oneOfType","string","number"],"mappings":"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","file":"static/js/src-components-message-docs-message-docs.8f2597fb.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from \"docz\";\nimport {\n  ForwardRefAsExoticComponentDoc,\n  mapEnumerable,\n  OptionBlock,\n} from \"src/__docs__/components\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Delete } from \"src/elements\";\nimport { Message, MESSAGE_DEFAULTS } from \"../message\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"message\"\n    }}>{`Message`}</h1>\n    <p>{`Colored `}<strong parentName=\"p\">{`message`}</strong>{` blocks, to emphasize part of your page.`}</p>\n    <Playground __position={0} __code={'<Message>\\n  <Message.Header>\\n    <p>Hello world</p>\\n    <Delete as=\\\"button\\\" />\\n  </Message.Header>\\n  <Message.Body>\\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\\' \\'}\\n    <strong>Pellentesque risus mi</strong>, tempus quis placerat ut, porta nec\\n    nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam gravida purus\\n    diam, et dictum <a href=\\\"#felis\\\">felis venenatis</a> efficitur. Aenean ac{\\' \\'}\\n    <em>eleifend lacus</em>, in mollis lectus. Donec sodales, arcu et\\n    sollicitudin porttitor, tortor urna tempor ligula, id porttitor mi magna a\\n    neque. Donec dui urna, vehicula et sem eget, facilisis sodales sem.\\n  </Message.Body>\\n</Message>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Delete,\n      Message,\n      MESSAGE_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Message mdxType=\"Message\">\n    <Message.Header>\n      <p>Hello world</p>\n      <Delete as=\"button\" mdxType=\"Delete\" />\n    </Message.Header>\n    <Message.Body>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\" \"}\n      <strong>Pellentesque risus mi</strong>, tempus quis placerat ut, porta nec\n      nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam gravida purus\n      diam, et dictum <a href=\"#felis\">felis venenatis</a> efficitur. Aenean ac{\" \"}\n      <em>eleifend lacus</em>, in mollis lectus. Donec sodales, arcu et\n      sollicitudin porttitor, tortor urna tempor ligula, id porttitor mi magna a\n      neque. Donec dui urna, vehicula et sem eget, facilisis sodales sem.\n    </Message.Body>\n  </Message>\n    </Playground>\n    <h3 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<Message>`}</inlineCode>{` to set the color.`}</p>\n    <Playground __position={1} __code={'() =>\\n  DEFAULTS.colors.map((color, i) => (\\n    <OptionBlock props={{ color }} index={i} key={i}>\\n      <Message color={color}>\\n        <Message.Header>\\n          <p>{color} message</p>\\n          <Delete as=\\\"button\\\" />\\n        </Message.Header>\\n        <Message.Body>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\\' \\'}\\n          <strong>Pellentesque risus mi</strong>, tempus quis placerat ut,\\n          porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam\\n          gravida purus diam, et dictum <a href=\\\"#felis\\\">felis venenatis</a>{\\' \\'}\\n          efficitur. Aenean ac <em>eleifend lacus</em>, in mollis lectus.\\n          Donec sodales, arcu et sollicitudin porttitor, tortor urna tempor\\n          ligula, id porttitor mi magna a neque. Donec dui urna, vehicula et\\n          sem eget, facilisis sodales sem.\\n        </Message.Body>\\n      </Message>\\n    </OptionBlock>\\n  ))'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Delete,\n      Message,\n      MESSAGE_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => DEFAULTS.colors.map((color, i) => <OptionBlock props={{\n        color\n      }} index={i} key={i} mdxType=\"OptionBlock\">\n        <Message color={color} mdxType=\"Message\">\n          <Message.Header>\n            <p>{color} message</p>\n            <Delete as=\"button\" mdxType=\"Delete\" />\n          </Message.Header>\n          <Message.Body>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\" \"}\n            <strong>Pellentesque risus mi</strong>, tempus quis placerat ut,\n            porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam\n            gravida purus diam, et dictum <a href=\"#felis\">felis venenatis</a>{\" \"}\n            efficitur. Aenean ac <em>eleifend lacus</em>, in mollis lectus.\n            Donec sodales, arcu et sollicitudin porttitor, tortor urna tempor\n            ligula, id porttitor mi magna a neque. Donec dui urna, vehicula et\n            sem eget, facilisis sodales sem.\n          </Message.Body>\n        </Message>\n      </OptionBlock>)}\n    </Playground>\n    <h3 {...{\n      \"id\": \"message-body-only\"\n    }}>{`Message body only`}</h3>\n    <p>{`Omit the `}<inlineCode parentName=\"p\">{`<Message.Header>`}</inlineCode>{` to get a simpler `}<inlineCode parentName=\"p\">{`<Message>`}</inlineCode>{`.`}</p>\n    <Playground __position={2} __code={'() =>\\n  DEFAULTS.colors.map((color, i) => (\\n    <OptionBlock props={{ color }} index={i} key={i}>\\n      <Message color={color}>\\n        <Message.Body>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\\' \\'}\\n          <strong>Pellentesque risus mi</strong>, tempus quis placerat ut,\\n          porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam\\n          gravida purus diam, et dictum <a href=\\\"#felis\\\">felis venenatis</a>{\\' \\'}\\n          efficitur. Aenean ac <em>eleifend lacus</em>, in mollis lectus.\\n          Donec sodales, arcu et sollicitudin porttitor, tortor urna tempor\\n          ligula, id porttitor mi magna a neque. Donec dui urna, vehicula et\\n          sem eget, facilisis sodales sem.\\n        </Message.Body>\\n      </Message>\\n    </OptionBlock>\\n  ))'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Delete,\n      Message,\n      MESSAGE_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => DEFAULTS.colors.map((color, i) => <OptionBlock props={{\n        color\n      }} index={i} key={i} mdxType=\"OptionBlock\">\n        <Message color={color} mdxType=\"Message\">\n          <Message.Body>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\" \"}\n            <strong>Pellentesque risus mi</strong>, tempus quis placerat ut,\n            porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam\n            gravida purus diam, et dictum <a href=\"#felis\">felis venenatis</a>{\" \"}\n            efficitur. Aenean ac <em>eleifend lacus</em>, in mollis lectus.\n            Donec sodales, arcu et sollicitudin porttitor, tortor urna tempor\n            ligula, id porttitor mi magna a neque. Donec dui urna, vehicula et\n            sem eget, facilisis sodales sem.\n          </Message.Body>\n        </Message>\n      </OptionBlock>)}\n    </Playground>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<Message>`}</inlineCode>{` to set the size.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const sizes = MESSAGE_DEFAULTS.sizes.map(size => ({ name: size, size }))\\n  sizes.splice(1, 0, { name: \\'normal\\', size: undefined })\\n  return sizes.map(({ name, size }, i) => (\\n    <OptionBlock props={{ size }} index={i} key={i}>\\n      <Message size={size}>\\n        <Message.Header>\\n          <p>{name} message</p>\\n          <Delete as=\\\"button\\\" size={size} />\\n        </Message.Header>\\n        <Message.Body>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\\' \\'}\\n          <strong>Pellentesque risus mi</strong>, tempus quis placerat ut,\\n          porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam\\n          gravida purus diam, et dictum <a href=\\\"#felis\\\">felis venenatis</a>{\\' \\'}\\n          efficitur. Aenean ac <em>eleifend lacus</em>, in mollis lectus.\\n          Donec sodales, arcu et sollicitudin porttitor, tortor urna tempor\\n          ligula, id porttitor mi magna a neque. Donec dui urna, vehicula et\\n          sem eget, facilisis sodales sem.\\n        </Message.Body>\\n      </Message>\\n    </OptionBlock>\\n  ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Delete,\n      Message,\n      MESSAGE_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const sizes = MESSAGE_DEFAULTS.sizes.map(size => ({\n          name: size,\n          size\n        }));\n        sizes.splice(1, 0, {\n          name: \"normal\",\n          size: undefined\n        });\n        return sizes.map(({\n          name,\n          size\n        }, i) => <OptionBlock props={{\n          size\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n    <Message size={size} mdxType=\"Message\">\n      <Message.Header>\n        <p>{name} message</p>\n        <Delete as=\"button\" size={size} mdxType=\"Delete\" />\n      </Message.Header>\n      <Message.Body>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.{\" \"}\n        <strong>Pellentesque risus mi</strong>, tempus quis placerat ut, porta\n        nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam gravida\n        purus diam, et dictum <a href=\"#felis\">felis venenatis</a> efficitur.\n        Aenean ac <em>eleifend lacus</em>, in mollis lectus. Donec sodales,\n        arcu et sollicitudin porttitor, tortor urna tempor ligula, id\n        porttitor mi magna a neque. Donec dui urna, vehicula et sem eget,\n        facilisis sodales sem.\n      </Message.Body>\n    </Message>\n  </OptionBlock>);\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Message} customize docPath=\"/components/message\" props={{\n      color: {\n        description: \"set the message's color\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(DEFAULTS.colors)\n      },\n      size: {\n        description: \"set the message's size\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(MESSAGE_DEFAULTS.sizes)\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Message.Body} docPath=\"/components/message\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Message.Header} docPath=\"/components/message\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MessageBodyProps = HelpersProps;\n\nexport const MessageBody = forwardRefAs<MessageBodyProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"message-body\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nMessageBody.displayName = \"Message.Body\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MessageHeaderProps = HelpersProps;\n\nexport const MessageHeader = forwardRefAs<MessageHeaderProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"message-header\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nMessageHeader.displayName = \"Message.Header\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Variables } from \"../../base/helpers/variables\";\nimport { Prefer } from \"../../types\";\nimport { MessageBody } from \"./message-body\";\nimport { MessageHeader } from \"./message-header\";\n\nexport const MESSAGE_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n};\n\nexport interface MessageVariablesOverrides {}\n\nexport interface MessageVariablesDefaults {\n  sizes: (typeof MESSAGE_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type MessageVariables = Prefer<\n  MessageVariablesOverrides,\n  MessageVariablesDefaults\n>;\n\nexport type MessageModifierProps = {\n  color?: Variables[\"colors\"];\n  size?: MessageVariables[\"sizes\"];\n};\n\nexport type MessageProps = HelpersProps & MessageModifierProps;\n\nexport const Message = Object.assign(\n  forwardRefAs<MessageProps>(\n    ({ className, color, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"message\",\n          {\n            [`is-${color}`]: color,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"article\" },\n  ),\n  {\n    Body: MessageBody,\n    Header: MessageHeader,\n  },\n);\n\nMessage.displayName = \"Message\";\nMessage.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n"],"sourceRoot":""}