{"version":3,"sources":["/Users/dfee/code/rbx/src/components/breadcrumb/__docs__/breadcrumb.docs.mdx","/Users/dfee/code/rbx/src/components/breadcrumb/breadcrumb-item.tsx","/Users/dfee/code/rbx/src/components/breadcrumb/breadcrumb.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_6__","__position","__code","__scope","this","faBook","faHome","faPuzzlePiece","faThumbsUp","FontAwesomeIcon","Playground","ForwardRefAsExoticComponentDoc","OptionBlock","mapEnumerable","DEFAULTS","Block","Title","Icon","Breadcrumb","BREADCRUMB_DEFAULTS","_breadcrumb__WEBPACK_IMPORTED_MODULE_10__","Item","active","align","undefined","name","concat","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","alignments","map","_ref2","i","src_docs_components__WEBPACK_IMPORTED_MODULE_7__","index","key","src_elements__WEBPACK_IMPORTED_MODULE_9__","size","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","separator","separators","_ref3","sizes","splice","_ref4","component","customize","docPath","description","typeName","typeTip","isMDXComponent","BreadcrumbItem","forwardRefAs","ref","rest","objectWithoutProperties","react_default","a","createElement","className","classNames","is-active","base","as","displayName","propTypes","PropTypes","bool","_classNames","children","defineProperty","oneOfType","string","number"],"mappings":"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","file":"static/js/src-components-breadcrumb-docs-breadcrumb-docs.b53c0948.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport {\n  faBook,\n  faHome,\n  faPuzzlePiece,\n  faThumbsUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Playground } from \"docz\";\nimport {\n  ForwardRefAsExoticComponentDoc,\n  OptionBlock,\n  mapEnumerable,\n} from \"src/__docs__/components\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Block, Title, Icon } from \"src/elements\";\nimport { Breadcrumb, BREADCRUMB_DEFAULTS } from \"../breadcrumb\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"breadcrumb\"\n    }}>{`Breadcrumb`}</h1>\n    <p>{`A simple `}<strong parentName=\"p\">{`breadcrumb`}</strong>{` component to improve your navigation experience.`}</p>\n    <Playground __position={0} __code={'<Breadcrumb>\\n  <Breadcrumb.Item>rbx</Breadcrumb.Item>\\n  <Breadcrumb.Item>Documentation</Breadcrumb.Item>\\n  <Breadcrumb.Item>Components</Breadcrumb.Item>\\n  <Breadcrumb.Item active>Breadcrumb</Breadcrumb.Item>\\n</Breadcrumb>'} __scope={{\n      props: this ? this.props : props,\n      faBook,\n      faHome,\n      faPuzzlePiece,\n      faThumbsUp,\n      FontAwesomeIcon,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Block,\n      Title,\n      Icon,\n      Breadcrumb,\n      BREADCRUMB_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Breadcrumb mdxType=\"Breadcrumb\">\n    <Breadcrumb.Item>rbx</Breadcrumb.Item>\n    <Breadcrumb.Item>Documentation</Breadcrumb.Item>\n    <Breadcrumb.Item>Components</Breadcrumb.Item>\n    <Breadcrumb.Item active>Breadcrumb</Breadcrumb.Item>\n  </Breadcrumb>\n    </Playground>\n    <h3 {...{\n      \"id\": \"alignments\"\n    }}>{`Alignments`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`align`}</inlineCode>{` prop to center or align-right the breadcrumbs.\nLeaving this prop unspecified, or setting it to `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{`, causes it to be `}<strong parentName=\"p\">{`left`}</strong>{` aligned.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const alignments = [\\n    { align: undefined, name: \\'normal\\' },\\n    ...BREADCRUMB_DEFAULTS.alignments.map(align => ({ align, name: align })),\\n  ]\\n  return alignments.map(({ align, name }, i) => (\\n    <OptionBlock props={{ align }} index={i} key={i}>\\n      <Breadcrumb align={align}>\\n        <Breadcrumb.Item>rbx</Breadcrumb.Item>\\n        <Breadcrumb.Item>Documentation</Breadcrumb.Item>\\n        <Breadcrumb.Item>Components</Breadcrumb.Item>\\n        <Breadcrumb.Item active>Breadcrumb</Breadcrumb.Item>\\n      </Breadcrumb>\\n    </OptionBlock>\\n  ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      faBook,\n      faHome,\n      faPuzzlePiece,\n      faThumbsUp,\n      FontAwesomeIcon,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Block,\n      Title,\n      Icon,\n      Breadcrumb,\n      BREADCRUMB_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const alignments = [{\n          align: undefined,\n          name: \"normal\"\n        }, ...BREADCRUMB_DEFAULTS.alignments.map(align => ({\n          align,\n          name: align\n        }))];\n        return alignments.map(({\n          align,\n          name\n        }, i) => <OptionBlock props={{\n          align\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n   <Breadcrumb align={align} mdxType=\"Breadcrumb\">\n      <Breadcrumb.Item>rbx</Breadcrumb.Item>\n      <Breadcrumb.Item>Documentation</Breadcrumb.Item>\n      <Breadcrumb.Item>Components</Breadcrumb.Item>\n      <Breadcrumb.Item active>Breadcrumb</Breadcrumb.Item>\n    </Breadcrumb>\n  </OptionBlock>);\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"with-icons\"\n    }}>{`With icons`}</h3>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`<Icon>`}</inlineCode>{` component within the `}<inlineCode parentName=\"p\">{`<Breadcrumb.Item>`}</inlineCode>{` for additional flavor.`}</p>\n    <Playground __position={2} __code={'<Breadcrumb>\\n  <Breadcrumb.Item>\\n    <Icon size=\\\"small\\\">\\n      <FontAwesomeIcon icon={faHome} />\\n    </Icon>\\n    rbx\\n  </Breadcrumb.Item>\\n  <Breadcrumb.Item>\\n    <Icon size=\\\"small\\\">\\n      <FontAwesomeIcon icon={faBook} />\\n    </Icon>\\n    Documentation\\n  </Breadcrumb.Item>\\n  <Breadcrumb.Item>\\n    <Icon size=\\\"small\\\">\\n      <FontAwesomeIcon icon={faPuzzlePiece} />\\n    </Icon>\\n    Components\\n  </Breadcrumb.Item>\\n  <Breadcrumb.Item active>\\n    <Icon size=\\\"small\\\">\\n      <FontAwesomeIcon icon={faThumbsUp} />\\n    </Icon>\\n    Breadcrumb\\n  </Breadcrumb.Item>\\n</Breadcrumb>'} __scope={{\n      props: this ? this.props : props,\n      faBook,\n      faHome,\n      faPuzzlePiece,\n      faThumbsUp,\n      FontAwesomeIcon,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Block,\n      Title,\n      Icon,\n      Breadcrumb,\n      BREADCRUMB_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Breadcrumb mdxType=\"Breadcrumb\">\n    <Breadcrumb.Item>\n      <Icon size=\"small\" mdxType=\"Icon\">\n        <FontAwesomeIcon icon={faHome} mdxType=\"FontAwesomeIcon\" />\n      </Icon>\n      rbx\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <Icon size=\"small\" mdxType=\"Icon\">\n        <FontAwesomeIcon icon={faBook} mdxType=\"FontAwesomeIcon\" />\n      </Icon>\n      Documentation\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <Icon size=\"small\" mdxType=\"Icon\">\n        <FontAwesomeIcon icon={faPuzzlePiece} mdxType=\"FontAwesomeIcon\" />\n      </Icon>\n      Components\n    </Breadcrumb.Item>\n    <Breadcrumb.Item active>\n      <Icon size=\"small\" mdxType=\"Icon\">\n        <FontAwesomeIcon icon={faThumbsUp} mdxType=\"FontAwesomeIcon\" />\n      </Icon>\n      Breadcrumb\n    </Breadcrumb.Item>\n  </Breadcrumb>\n    </Playground>\n    <h3 {...{\n      \"id\": \"separators\"\n    }}>{`Separators`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`separator`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Breadcrumb>`}</inlineCode>{` to specify an alternative separator.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const separators = [\\n    { name: \\'forward-slash\\', separator: undefined },\\n    ...BREADCRUMB_DEFAULTS.separators.map(separator => ({\\n      name: separator,\\n      separator,\\n    })),\\n  ]\\n  return separators.map(({ name, separator }, i) => (\\n    <OptionBlock props={{ separator }} index={i} key={i}>\\n      <Breadcrumb separator={separator}>\\n        <Breadcrumb.Item>breadcrumb</Breadcrumb.Item>\\n        <Breadcrumb.Item>separator</Breadcrumb.Item>\\n        <Breadcrumb.Item active>{name}</Breadcrumb.Item>\\n      </Breadcrumb>\\n    </OptionBlock>\\n  ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      faBook,\n      faHome,\n      faPuzzlePiece,\n      faThumbsUp,\n      FontAwesomeIcon,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Block,\n      Title,\n      Icon,\n      Breadcrumb,\n      BREADCRUMB_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const separators = [{\n          name: \"forward-slash\",\n          separator: undefined\n        }, ...BREADCRUMB_DEFAULTS.separators.map(separator => ({\n          name: separator,\n          separator\n        }))];\n        return separators.map(({\n          name,\n          separator\n        }, i) => <OptionBlock props={{\n          separator\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n      <Breadcrumb separator={separator} mdxType=\"Breadcrumb\">\n        <Breadcrumb.Item>breadcrumb</Breadcrumb.Item>\n        <Breadcrumb.Item>separator</Breadcrumb.Item>\n        <Breadcrumb.Item active>{name}</Breadcrumb.Item>\n      </Breadcrumb>\n    </OptionBlock>);\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<Breadcrumb>`}</inlineCode>{` to specify the size of the breadcrumbs.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const sizes = BREADCRUMB_DEFAULTS.sizes.map(size => ({ name: size, size }))\\n  sizes.splice(1, 0, { name: \\'normal\\', size: undefined })\\n  return sizes.map(({ size, name }, i) => (\\n    <OptionBlock props={{ size }} index={i} key={i}>\\n      <Breadcrumb size={size}>\\n        <Breadcrumb.Item>breadcrumb</Breadcrumb.Item>\\n        <Breadcrumb.Item>size</Breadcrumb.Item>\\n        <Breadcrumb.Item active>{name}</Breadcrumb.Item>\\n      </Breadcrumb>\\n    </OptionBlock>\\n  ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      faBook,\n      faHome,\n      faPuzzlePiece,\n      faThumbsUp,\n      FontAwesomeIcon,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      OptionBlock,\n      mapEnumerable,\n      DEFAULTS,\n      Block,\n      Title,\n      Icon,\n      Breadcrumb,\n      BREADCRUMB_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const sizes = BREADCRUMB_DEFAULTS.sizes.map(size => ({\n          name: size,\n          size\n        }));\n        sizes.splice(1, 0, {\n          name: \"normal\",\n          size: undefined\n        });\n        return sizes.map(({\n          size,\n          name\n        }, i) => <OptionBlock props={{\n          size\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n    <Breadcrumb size={size} mdxType=\"Breadcrumb\">\n      <Breadcrumb.Item>breadcrumb</Breadcrumb.Item>\n      <Breadcrumb.Item>size</Breadcrumb.Item>\n      <Breadcrumb.Item active>{name}</Breadcrumb.Item>\n    </Breadcrumb>\n  </OptionBlock>);\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Breadcrumb} customize docPath=\"/components/breadcrumb\" props={{\n      align: {\n        description: \"set the breadcrumb group's alignment\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(BREADCRUMB_DEFAULTS.alignments)\n      },\n      separator: {\n        description: \"set the breadcrumb group's separator\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(BREADCRUMB_DEFAULTS.separators)\n      },\n      size: {\n        description: \"set the breadcrumb group's size\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(BREADCRUMB_DEFAULTS.sizes)\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Breadcrumb.Item} docPath=\"/components/breadcrumb\" props={{\n      active: {\n        description: \"marks the breadcrumb as active\",\n        typeName: \"boolean\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport interface BreadcrumbItemModifierProps {\n  active?: boolean;\n}\n\nexport type BreadcrumbItemProps = HelpersProps & BreadcrumbItemModifierProps;\n\nexport const BreadcrumbItem = forwardRefAs<BreadcrumbItemProps>(\n  ({ active, ...rest }, ref) => (\n    <li className={classNames({ \"is-active\": active })}>\n      <Generic ref={ref} {...rest} />\n    </li>\n  ),\n  { as: \"a\" },\n);\n\nBreadcrumbItem.displayName = \"Breadcrumb.Item\";\nBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\nimport { BreadcrumbItem } from \"./breadcrumb-item\";\n\nexport const BREADCRUMB_DEFAULTS = {\n  alignments: [\"centered\", \"right\"] as const,\n  separators: [\"arrow\", \"bullet\", \"dot\", \"succeeds\"] as const,\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n};\n\nexport interface BreadcrumbVariablesOverrides {}\n\nexport interface BreadcrumbVariablesDefaults {\n  alignments: (typeof BREADCRUMB_DEFAULTS[\"alignments\"])[number];\n  separators: (typeof BREADCRUMB_DEFAULTS[\"separators\"])[number];\n  sizes: (typeof BREADCRUMB_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type BreadcrumbVariables = Prefer<\n  BreadcrumbVariablesOverrides,\n  BreadcrumbVariablesDefaults\n>;\n\nexport type BreadcrumbModifierProps = {\n  align?: BreadcrumbVariables[\"alignments\"];\n  separator?: BreadcrumbVariables[\"separators\"];\n  size?: BreadcrumbVariables[\"sizes\"];\n};\n\nexport type BreadcrumbProps = HelpersProps & BreadcrumbModifierProps;\n\nexport const Breadcrumb = Object.assign(\n  forwardRefAs<BreadcrumbProps>(\n    ({ align, children, className, separator, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"breadcrumb\",\n          {\n            [`has-${separator}-separator`]: separator,\n            [`is-${align}`]: align,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      >\n        <ul>{children}</ul>\n      </Generic>\n    ),\n    { as: \"nav\" },\n  ),\n  { Item: BreadcrumbItem },\n);\n\nBreadcrumb.displayName = \"Breadcrumb\";\nBreadcrumb.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  separator: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n"],"sourceRoot":""}