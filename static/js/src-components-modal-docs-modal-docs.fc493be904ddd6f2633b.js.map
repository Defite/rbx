{"version":3,"sources":["/Users/dfee/code/rbx/src/components/breadcrumb/breadcrumb-item.tsx","/Users/dfee/code/rbx/src/components/breadcrumb/breadcrumb.tsx","/Users/dfee/code/rbx/src/components/card/card-header-title.tsx","/Users/dfee/code/rbx/src/components/card/card-content.tsx","/Users/dfee/code/rbx/src/components/card/card-footer-item.tsx","/Users/dfee/code/rbx/src/components/card/card-footer.tsx","/Users/dfee/code/rbx/src/components/card/card-header-icon.tsx","/Users/dfee/code/rbx/src/components/card/card-header.tsx","/Users/dfee/code/rbx/src/components/card/card-image.tsx","/Users/dfee/code/rbx/src/components/card/card.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-container.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-context.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-content.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-divider.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-item.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-menu.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown-trigger.tsx","/Users/dfee/code/rbx/src/components/dropdown/dropdown.tsx","/Users/dfee/code/rbx/src/components/index.ts","/Users/dfee/code/rbx/src/components/level/level-item.tsx","/Users/dfee/code/rbx/src/components/level/level.tsx","/Users/dfee/code/rbx/src/components/list/list-item.tsx","/Users/dfee/code/rbx/src/components/list/list.tsx","/Users/dfee/code/rbx/src/components/media/media-item.tsx","/Users/dfee/code/rbx/src/components/media/media.tsx","/Users/dfee/code/rbx/src/components/menu/menu-label.tsx","/Users/dfee/code/rbx/src/components/menu/menu-list-item.tsx","/Users/dfee/code/rbx/src/components/menu/menu-list.tsx","/Users/dfee/code/rbx/src/components/menu/menu.tsx","/Users/dfee/code/rbx/src/components/message/message-body.tsx","/Users/dfee/code/rbx/src/components/message/message-header.tsx","/Users/dfee/code/rbx/src/components/message/message.tsx","/Users/dfee/code/rbx/src/components/modal/__docs__/simple-modal-manager.tsx","/Users/dfee/code/rbx/src/components/modal/__docs__/modal.docs.mdx","/Users/dfee/code/rbx/src/components/modal/modal-context.tsx","/Users/dfee/code/rbx/src/components/modal/modal-background.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card-body.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card-foot.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card-head.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card-title.tsx","/Users/dfee/code/rbx/src/components/modal/modal-card.tsx","/Users/dfee/code/rbx/src/components/modal/modal-close.tsx","/Users/dfee/code/rbx/src/components/modal/modal-portal.tsx","/Users/dfee/code/rbx/src/components/modal/modal-container.tsx","/Users/dfee/code/rbx/src/components/modal/modal-content.tsx","/Users/dfee/code/rbx/src/components/modal/modal.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination-step.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination-ellipsis.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination-link.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination-list.tsx","/Users/dfee/code/rbx/src/components/pagination/pagination.tsx","/Users/dfee/code/rbx/src/components/panel/panel-block.tsx","/Users/dfee/code/rbx/src/components/panel/panel-heading.tsx","/Users/dfee/code/rbx/src/components/panel/panel-icon.tsx","/Users/dfee/code/rbx/src/components/panel/panel-tab-group.tsx","/Users/dfee/code/rbx/src/components/panel/panel-tab.tsx","/Users/dfee/code/rbx/src/components/panel/panel.tsx","/Users/dfee/code/rbx/src/components/tab/tab-group.tsx","/Users/dfee/code/rbx/src/components/tab/tab.tsx"],"names":["BreadcrumbItem","forwardRefAs","_ref","ref","active","rest","Object","objectWithoutProperties","react_default","a","createElement","className","classNames","is-active","base","assign","as","displayName","propTypes","PropTypes","bool","BREADCRUMB_DEFAULTS","alignments","separators","sizes","Breadcrumb","_classNames","align","children","separator","size","defineProperty","concat","Item","oneOfType","string","number","CARD_HEADER_TITLE_DEFAULTS","CardHeaderTitle","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_4___default","_base__WEBPACK_IMPORTED_MODULE_5__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","CardContent","CardFooterItem","CardFooter","CardHeaderIcon","CardHeader","Icon","Title","CardImage","Card","Content","Footer","Header","Image","DROPDOWN_DEFAULTS","DropdownContainer","_React$PureComponent","props","_this","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","React","createRef","event","managed","current","target","Element","contains","state","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","document","addEventListener","handleClick","removeEventListener","_this2","_this$props","hoverable","innerRef","up","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_9___default","_dropdown_context__WEBPACK_IMPORTED_MODULE_12__","Provider","setActive","_base__WEBPACK_IMPORTED_MODULE_10__","combineRefs","get","set","setState","PureComponent","__webpack_require__","d","__webpack_exports__","DropdownContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils__WEBPACK_IMPORTED_MODULE_1__","initialValue","noop","createContext","DropdownContent","DropdownDivider","onClickHandler","onClick","ctx","undefined","DropdownItem","dropdown_context","Consumer","func","DropdownMenu","DropdownTrigger","Dropdown","dropdown_container","Container","Context","Divider","Menu","Trigger","level","media","message","navbar","tab","LEVEL_ITEM_DEFAULTS","LevelItem","level-item","Level","breakpoint","ListItem","List","MEDIA_ITEM_DEFAULTS","MediaItem","Media","react__WEBPACK_IMPORTED_MODULE_2___default","_base__WEBPACK_IMPORTED_MODULE_3__","MenuLabel","MenuListItem","menu","node","MenuList","Label","MessageBody","MessageHeader","MESSAGE_DEFAULTS","Message","color","Body","SimpleModalManager","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","assertThisInitialized","inherits","createClass","elements_button","open","modal","onClose","close","modalProps","Component","layoutProps","MDXLayout","MDXContent","components","index_es","mdxType","id","parentName","src_elements","index_esm","__position","__code","__scope","faHeart","faReply","faRetweet","FontAwesomeIcon","Playground","Frame","ForwardRefAsExoticComponentDoc","mapEnumerable","Modal","Box","Button","Delete","Notification","_docs_components","forceHeight","style","height","_ref2","simple_modal_manager_SimpleModalManager","closeOnBlur","Background","src_components","alt","src","react_fontawesome_index_es","icon","Close","href","_ref3","_ref4","Head","OrderedList","Foot","component","docPath","description","typeName","clipped","closeOnEsc","defaultValue","containerClassName","isMDXComponent","ModalContext","ModalBackground","role","ModalCardBody","ModalCardFoot","mapChildren","Children","map","child","i","esm_typeof","type","cloneElement","Fragment","ModalCardHead","ModalCardTitle","ModalCard","ModalClose","aria-label","ModalPortal","code","handleKeydown","html","querySelector","classList","add","remove","_this$props2","ModalContainer","canUseDOM","el","body","appendChild","removeChild","ReactDOM","createPortal","modal_portal_ModalPortal","ModalContent","object","modal_container_ModalContainer","Portal","PAGINATION_STEP_DEFAULTS","PaginationStep","isRequired","PaginationEllipsis","PaginationLink","is-current","PaginationList","PAGINATION_DEFAULTS","Pagination","rounded","Ellipsis","Link","Step","PanelBlock","PanelHeading","PanelIcon","PanelTabGroup","PanelTab","Group","Panel","Block","Heading","Tab","TAB_GROUP_DEFAULTS","kinds","TabGroup","fullwidth","kind","react__WEBPACK_IMPORTED_MODULE_3___default","_base__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"suCAaO,IAAMA,EAAiBC,YAC5B,SAAAC,EAAsBC,GAAtB,IAAGC,EAAHF,EAAGE,OAAWC,EAAdC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,mBACEM,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAW,CAAEC,YAAaT,KACvCI,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CAASZ,IAAKA,GAASE,MAG3B,CAAEW,GAAI,qOAGRhB,EAAeiB,YAAc,kBAC7BjB,EAAekB,UAAY,CACzBd,OAAQe,IAAUC,sECfb,IAAMC,EAAsB,CACjCC,WAAY,CAAC,WAAY,SACzBC,WAAY,CAAC,QAAS,SAAU,MAAO,YACvCC,MAAO,CAAC,QAAS,SAAU,u9DAwBtB,IAAMC,EAAanB,OAAOS,OAC/Bd,YACE,SAAAC,EAA2DC,GAA3D,IAAAuB,EAAGC,EAAHzB,EAAGyB,MAAOC,EAAV1B,EAAU0B,SAAUjB,EAApBT,EAAoBS,UAAWkB,EAA/B3B,EAA+B2B,UAAWC,EAA1C5B,EAA0C4B,KAASzB,EAAnDC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,4DACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IACT,cADmBc,EAAA,GAAApB,OAAAyB,EAAA,EAAAzB,CAAAoB,EAAA,OAAAM,OAGTH,EAHS,cAGeA,GAHfvB,OAAAyB,EAAA,EAAAzB,CAAAoB,EAAA,MAAAM,OAIVL,GAAUA,GAJArB,OAAAyB,EAAA,EAAAzB,CAAAoB,EAAA,MAAAM,OAKVF,GAASA,GALCJ,GAOnBf,GAEFR,IAAKA,GACDE,GAEJG,EAAAC,EAAAC,cAAA,UAAKkB,KAGT,CAAEZ,GAAI,QAER,CAAEiB,KAAMjC,0NAGVyB,EAAWR,YAAc,aACzBQ,EAAWP,UAAY,CACrBS,MAAOR,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,SACxDP,UAAWV,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,SAC5DN,KAAMX,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,giBCxD5CC,EAA6B,CACxCf,WAAY,CAAC,spEAoBR,IAAMgB,EAAkBrC,YAC7B,SAAAC,EAAgCC,GAAhC,IAAGwB,EAAHzB,EAAGyB,MAAOhB,EAAVT,EAAUS,UAAcN,EAAxBC,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAA,8BACEsC,EAAA/B,EAAAC,cAAC+B,EAAA,EAADnC,OAAAS,OAAA,CACEJ,UAAWC,IACT,oBADmBN,OAAAoC,EAAA,EAAApC,CAAA,SAAA0B,OAEVL,GAAUA,GACnBhB,GAEFR,IAAKA,GACDE,KAGR,CAAEW,GAAI,oOAGRsB,EAAgBrB,YAAc,oBAC9BqB,EAAgBpB,UAAY,CAC1BS,MAAOR,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,2mBCtCnD,IAAMO,EAAc1C,YACzB,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,eAAgBD,GACtCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,2NAGR2B,EAAY1B,YAAc,0VCXnB,IAAM2B,EAAiB3C,YAC5B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,mBAAoBD,GAC1CR,IAAKA,GACDE,KAGR,CAAEW,GAAI,kOAGR4B,EAAe3B,YAAc,6TCVtB,IAAM4B,EAAavC,OAAOS,OAC/Bd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,cAAeD,GACrCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,QAER,CAAEiB,KAAMW,qNAGVC,EAAW5B,YAAc,yVCflB,IAAM6B,EAAiB7C,YAC5B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,mBAAoBD,GAC1CR,IAAKA,GACDE,KAGR,CAAEW,GAAI,kOAGR8B,EAAe7B,YAAc,oXCTtB,IAAM8B,EAAazC,OAAOS,OAC/Bd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,cAAeD,GACrCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,QAER,CACEgC,KAAMF,EACNG,MAAOX,uNAIXS,EAAW9B,YAAc,gTCnBlB,IAAMiC,EAAYjD,YACvB,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,aAAcD,GACpCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,uNAGRkC,EAAUjC,YAAc,sSCPjB,IAAMkC,EAAO7C,OAAOS,OACzBd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CAASJ,UAAWC,IAAW,OAAQD,GAAYR,IAAKA,GAASE,KAEnE,CAAEW,GAAI,QAER,CACEoC,QAAST,EACTU,OAAQR,EACRS,OAAQP,EACRQ,MAAOL,wMAIXC,EAAKlC,YAAc,8qCClBNuC,EAAoB,CAC/BlC,WAAY,CAAC,u5EAiCR,IAAMmC,EAAb,SAAAC,GAQE,SAAAD,EAAYE,GAA+B,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAwD,KAAAL,GACzCG,EAAAtD,OAAAyD,EAAA,EAAAzD,CAAAwD,KAAAxD,OAAA0D,EAAA,EAAA1D,CAAAmD,GAAAQ,KAAAH,KAAMH,IADmCrD,OAAA4D,EAAA,EAAA5D,QAAA6D,EAAA,EAAA7D,CAAAsD,GAAA,gBAAAtD,OAAA4D,EAAA,EAAA5D,QAAA6D,EAAA,EAAA7D,CAAAsD,GAAA,MAFpBQ,IAAMC,aAEc/D,OAAA4D,EAAA,EAAA5D,QAAA6D,EAAA,EAAA7D,CAAAsD,GAAA,cA8DZ,SAACU,IAEL,IAAvBV,EAAKD,MAAMY,SACXX,EAAKxD,QACgB,OAArBwD,EAAKzD,IAAIqE,SAGPF,EAAMG,kBAAkBC,UACvBd,EAAKzD,IAAIqE,QAAQG,SAASL,EAAMG,UAEjCb,EAAKxD,QAAS,KAtElBwD,EAAKgB,MAAQ,CAAExE,QAAyB,IAAjBuD,EAAMvD,QAFYwD,EAR7C,OAAAtD,OAAAuE,EAAA,EAAAvE,CAAAmD,EAAAC,GAAApD,OAAAwE,EAAA,EAAAxE,CAAAmD,EAAA,EAAAsB,IAAA,oBAAAC,MAAA,WAcIC,SAASC,iBAAiB,QAASpB,KAAKqB,eAd5C,CAAAJ,IAAA,uBAAAC,MAAA,WAkBIC,SAASG,oBAAoB,QAAStB,KAAKqB,eAlB/C,CAAAJ,IAAA,SAAAC,MAAA,WAqBkB,IAAAtD,EAAA2D,EAAAvB,KAAAwB,EAUVxB,KAAKH,MAPPhC,GAHY2D,EAEZlF,OAFYkF,EAGZ3D,OACAhB,EAJY2E,EAIZ3E,UACA4E,EALYD,EAKZC,UACAC,EANYF,EAMZE,SAEAC,GARYH,EAOZf,QAPYe,EAQZG,IACGpF,EATSC,OAAAoF,EAAA,EAAApF,CAAAgF,EAAA,sEAYd,OACEK,EAAAlF,EAAAC,cAACkF,EAAA,EAAgBC,SAAjB,CACEb,MAAO,CACL5E,OAAQ0D,KAAK1D,OACb0F,UAAW,SAACd,GAAD,OAAqBK,EAAKjF,OAAS4E,KAGhDW,EAAAlF,EAAAC,cAACqF,EAAA,EAADzF,OAAAS,OAAA,CACEJ,UAAWC,IACT,YADmBc,EAAA,GAAApB,OAAA4D,EAAA,EAAA5D,CAAAoB,EAAA,MAAAM,OAGVL,GAAUA,GAHArB,OAAA4D,EAAA,EAAA5D,CAAAoB,EAIjB,YAAaoC,KAAK1D,QAJDE,OAAA4D,EAAA,EAAA5D,CAAAoB,EAKjB,eAAgB6D,GALCjF,OAAA4D,EAAA,EAAA5D,CAAAoB,EAMjB,QAAS+D,GANQ/D,GAQnBf,GAEFR,IAAK6F,YAAYlC,KAAK3D,IAAKqF,IACvBnF,OApDd,CAAA0E,IAAA,SAAAkB,IAAA,WA2DI,OAA8B,IAAvBnC,KAAKH,MAAMY,SACQ,IAAtBT,KAAKH,MAAMvD,OACX0D,KAAKc,MAAMxE,QA7DnB8F,IAAA,SAgEqBlB,IACU,IAAvBlB,KAAKH,MAAMY,SACbT,KAAKqC,SAAS,CAAE/F,OAAQ4E,QAlE9BvB,EAAA,CAAuCW,IAAMgC,2BAAhC3C,gBAIiB,wUC/C9B4C,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,iCAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,wWASO,IAAMQ,EAAqC,CAChDzG,QAAQ,EACR0F,UAAWgB,iOAGN,IAAMN,EAAkBpC,IAAM2C,cACnCF,09BCPK,IAAMG,EAAkB/G,YAC7B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,mBAAoBD,GAC1CR,IAAKA,GACDE,KAGR,CAAEW,GAAI,uOAGRgG,EAAgB/F,YAAc,maCXvB,IAAMgG,EAAkBhH,YAC7B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,mBAAoBD,GAC1CR,IAAKA,GACDE,KAGR,CAAEW,GAAI,sOAGRiG,EAAgBhG,YAAc,usBCJ9B,IAAMiG,EAAiB,SACrBC,EACAC,GAFqB,OAGlB,SAAC9C,QACY+C,IAAZF,GACFA,EAAQ7C,GAEV8C,EAAItB,WAAU,KAGHwB,EAAerH,YAC1B,SAAAC,EAA0CC,GAA1C,IAAGC,EAAHF,EAAGE,OAAQO,EAAXT,EAAWS,UAAWwG,EAAtBjH,EAAsBiH,QAAY9G,EAAlCC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,yCACEM,EAAAC,EAAAC,cAAC6G,EAAA,EAAgBC,SAAjB,KACG,SAAAJ,GAAG,OACF5G,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IACT,gBACA,CAAEC,YAAaT,GACfO,GAEFwG,QAASD,EAAeC,EAASC,GACjCjH,IAAKA,GACDE,OAKZ,CAAEW,GAAI,+NAGRsG,EAAarG,YAAc,gBAC3BqG,EAAapG,UAAY,CACvBd,OAAQe,IAAUC,KAClB+F,QAAShG,IAAUsG,oUCxCd,IAAMC,EAAezH,YAC1B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,gBAAiBD,GACvCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,iOAGR0G,EAAazG,YAAc,ovBCL3B,IAAMiG,EAAiB,SACrBC,EACAC,GAFqB,OAGlB,SAAC9C,QACY+C,IAAZF,GACFA,EAAQ7C,GAEV8C,EAAItB,WAAWsB,EAAIhH,UAGRuH,EAAkB1H,YAC7B,SAAAC,EAAkCC,GAAlC,IAAGQ,EAAHT,EAAGS,UAAWwG,EAAdjH,EAAciH,QAAY9G,EAA1BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,gCACEM,EAAAC,EAAAC,cAAC6G,EAAA,EAAgBC,SAAjB,KACG,SAAAJ,GAAG,OACF5G,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,mBAAoBD,GAC1CwG,QAASD,EAAeC,EAASC,GACjCjH,IAAKA,GACDE,OAKZ,CAAEW,GAAI,uOAGR2G,EAAgB1G,YAAc,mBAC9B0G,EAAgBzG,UAAY,CAC1BiG,QAAShG,IAAUsG,MC1CrBpB,EAAAC,EAAAC,EAAA,sBAAAqB,iSAiBO,IAAMA,EAAWtH,OAAOS,OAC7Bd,YACE,SAAC0D,EAAOxD,GAAR,OAAgBK,EAAAC,EAAAC,cAACmH,EAAA,EAADvH,OAAAS,OAAA,CAAmByE,SAAUrF,GAASwD,KACtD,CAAE3C,GAAI,QAER,CACE8G,UAAWrE,IACXL,QAAS4D,EACTe,QAASvB,IACTwB,QAASf,EACThF,KAAMqF,EACNW,KAAMP,EACNQ,QAASP,oNAIbC,EAAS3G,YAAc,WACvB2G,EAAS1G,UAAY,CACnBd,OAAQe,IAAUC,KAClBO,MAAOR,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,SACxDmD,UAAWpE,IAAUC,KACrBmD,QAASpD,IAAUC,KACnBqE,GAAItE,IAAUC,ggHCvChBiF,EAAAC,EAAAC,EAAA,sBAAA4B,EAAA,IAAA9B,EAAAC,EAAAC,EAAA,sBAAA6B,EAAA,IAAA/B,EAAAC,EAAAC,EAAA,sBAAA8B,EAAA,IAAAhC,EAAAC,EAAAC,EAAA,sBAAA+B,EAAA,IAAAjC,EAAAC,EAAAC,EAAA,sBAAAgC,EAAA,y1GCQaC,EAAsB,CACjClH,WAAY,CAAC,OAAQ,s5DAoBhB,IAAMmH,EAAYxI,YACvB,SAAAC,EAAgCC,GAAhC,IAAGwB,EAAHzB,EAAGyB,MAAOhB,EAAVT,EAAUS,UAAcN,EAAxBC,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAA,8BACEsC,EAAA/B,EAAAC,cAAC+B,EAAA,EAADnC,OAAAS,OAAA,CACEJ,UAAWC,IAAWN,OAAAoC,EAAA,EAAApC,CAAA,CAElBoI,kBAAwBrB,IAAV1F,GAFG,SAAAK,OAGPL,GAAUA,GAEtBhB,GAEFR,IAAKA,GACDE,KAGR,CAAEW,GAAI,wNAGRyH,EAAUxH,YAAc,aACxBwH,EAAUvH,UAAY,CACpBS,MAAOR,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,8lCCjCnD,IAAMuG,EAAQrI,OAAOS,OAC1Bd,YACE,SAAAC,EAAqCC,GAArC,IAAGyI,EAAH1I,EAAG0I,WAAYjI,EAAfT,EAAeS,UAAcN,EAA7BC,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAA,mCACEsC,EAAA/B,EAAAC,cAAC+B,EAAA,EAADnC,OAAAS,OAAA,CACEJ,UAAWC,IACT,QADmBN,OAAAoC,EAAA,EAAApC,CAAA,SAAA0B,OAEV4G,GAAeA,GACxBjI,GAEFR,IAAKA,GACDE,KAGR,CAAEW,GAAI,QAER,CAAEiB,KAAMwG,6MAGVE,EAAM1H,YAAc,QACpB0H,EAAMzH,UAAY,CAChB0H,WAAYzH,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,w9BCtBxD,IAAMyG,EAAW5I,YACtB,SAAAC,EAAiCC,GAAjC,IAAGC,EAAHF,EAAGE,OAAQO,EAAXT,EAAWS,UAAcN,EAAzBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,+BACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,YAAa,CAAEC,YAAaT,GAAUO,GAC5DR,IAAKA,GACDE,KAGR,CAAEW,GAAI,mNAGR6H,EAAS5H,YAAc,YACvB4H,EAAS3H,UAAY,CACnBd,OAAQe,IAAUC,+RCjBb,IAAM0H,EAAOxI,OAAOS,OACzBd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CAASJ,UAAWC,IAAW,OAAQD,GAAYR,IAAKA,GAASE,KAEnE,CAAEW,GAAI,QAER,CAAEiB,KAAM4G,wMAGVC,EAAK7H,YAAc,uhBCXN8H,EAAsB,CACjCzH,WAAY,CAAC,UAAW,OAAQ,s5DAoB3B,IAAM0H,EAAY/I,YACvB,SAAAC,EAAgCC,GAAhC,IAAGwB,EAAHzB,EAAGyB,MAAOhB,EAAVT,EAAUS,UAAcN,EAAxBC,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAA,8BACEsC,EAAA/B,EAAAC,cAAC+B,EAAA,EAADnC,OAAAS,OAAA,CACEJ,UAAWC,IAAWN,OAAAoC,EAAA,EAAApC,CAAA,YAAA0B,OAAYL,GAAUA,GAAShB,GACrDR,IAAKA,GACDE,KAGR,CACEsB,MAAO,UACPX,GAAI,wNAIRgI,EAAU/H,YAAc,aACxB+H,EAAU9H,UAAY,CACpBS,MAAOR,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,0oBCpCnD,IAAM6G,EAAQ3I,OAAOS,OAC1Bd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAoF,EAAA,EAAApF,CAAAJ,EAAA,sBACEgJ,EAAAzI,EAAAC,cAACyI,EAAA,EAAD7I,OAAAS,OAAA,CAASJ,UAAWC,IAAW,QAASD,GAAYR,IAAKA,GAASE,KAEpE,CAAEW,GAAI,YAER,CAAEiB,KAAM+G,6MAGVC,EAAMhI,YAAc,ylBCXb,IAAMmI,EAAYnJ,YACvB,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,aAAcD,GACpCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,qNAGRoI,EAAUnI,YAAc,kvBCLjB,IAAMoI,EAAepJ,YAC1B,SAAAC,EAAuCC,GAAvC,IAAGC,EAAHF,EAAGE,OAAQO,EAAXT,EAAWS,UAAW2I,EAAtBpJ,EAAsBoJ,KAASjJ,EAA/BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sCACEM,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,CAAEC,YAAaT,GAAUO,GAC/CR,IAAKA,GACDE,IAELiJ,IAGL,CAAEtI,GAAI,4NAGRqI,EAAapI,YAAc,iBAC3BoI,EAAanI,UAAY,CACvBd,OAAQe,IAAUC,KAClBkI,KAAMnI,IAAUoI,gSCtBX,IAAMC,EAAWlJ,OAAOS,OAC7Bd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,YAAaD,GACnCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,OAER,CAAEiB,KAAMoH,iNAGVG,EAASvI,YAAc,qSCbhB,IAAMgH,EAAO3H,OAAOS,OACzBd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CAASJ,UAAWC,IAAW,OAAQD,GAAYR,IAAKA,GAASE,KAEnE,CAAEW,GAAI,UAER,CACEyI,MAAOL,EACPN,KAAMU,wMAIVvB,EAAKhH,YAAc,2wBCfZ,IAAMyI,EAAczJ,YACzB,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,eAAgBD,GACtCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,8NAGR0I,EAAYzI,YAAc,oVCXnB,IAAM0I,EAAgB1J,YAC3B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,iBAAkBD,GACxCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,kOAGR2I,EAAc1I,YAAc,iFCRrB,IAAM2I,EAAmB,CAC9BpI,MAAO,CAAC,QAAS,SAAU,u0DAqBtB,IAAMqI,EAAUvJ,OAAOS,OAC5Bd,YACE,SAAAC,EAAsCC,GAAtC,IAAAuB,EAAGf,EAAHT,EAAGS,UAAWmJ,EAAd5J,EAAc4J,MAAOhI,EAArB5B,EAAqB4B,KAASzB,EAA9BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,qCACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IACT,WADmBc,EAAA,GAAApB,OAAAyB,EAAA,EAAAzB,CAAAoB,EAAA,MAAAM,OAGV8H,GAAUA,GAHAxJ,OAAAyB,EAAA,EAAAzB,CAAAoB,EAAA,MAAAM,OAIVF,GAASA,GAJCJ,GAMnBf,GAEFR,IAAKA,GACDE,KAGR,CAAEW,GAAI,YAER,CACE+I,KAAML,EACNpG,OAAQqG,iNAIZE,EAAQ5I,YAAc,UACtB4I,EAAQ3I,UAAY,CAClB4I,MAAO3I,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,SACxDN,KAAMX,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,23CC9C5C4H,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAtG,EAAAtD,OAAA6J,EAAA,EAAA7J,CAAAwD,KAAAkG,GAAA,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAA7G,EAAAtD,OAAAoK,EAAA,EAAApK,CAAAwD,MAAAoG,EAAA5J,OAAAqK,EAAA,EAAArK,CAAA0J,IAAA/F,KAAA2G,MAAAV,EAAA,CAAApG,MAAA9B,OAAAuI,KAAAjK,OAAAyB,EAAA,EAAAzB,QAAAuK,EAAA,EAAAvK,CAAAsD,GAAA,QAQmD,CAAExD,QAAQ,IAR7DE,OAAAyB,EAAA,EAAAzB,QAAAuK,EAAA,EAAAvK,CAAAsD,GAAA,QAyB2B,WACvBA,EAAKuC,SAAS,CAAE/F,QAAQ,MA1B5BE,OAAAyB,EAAA,EAAAzB,QAAAuK,EAAA,EAAAvK,CAAAsD,GAAA,OA4B0B,WACtBA,EAAKuC,SAAS,CAAE/F,QAAQ,MA7B5BwD,EAAA,OAAAtD,OAAAwK,EAAA,EAAAxK,CAAA0J,EAAAC,GAAA3J,OAAAyK,EAAA,EAAAzK,CAAA0J,EAAA,EAAAjF,IAAA,SAAAC,MAAA,WAWI,OACExE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAQ7D,QAASrD,KAAKmH,MAAtB,cACAzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD5K,OAAAS,OAAA,CACEX,OAAQ0D,KAAKc,MAAMxE,OACnB+K,QAASrH,KAAKsH,OACVtH,KAAKH,MAAM0H,YAEdvH,KAAKH,MAAM/B,eAnBtBoI,EAAA,CAAwC5F,IAAMkH,uBAAjCtB,iBAIkB,CAC3BqB,WAAY,uRCOhB,IAKME,EAAc,GAGdC,EAAY,UACH,SAASC,EAATvL,GAGZ,IAFDwL,EAECxL,EAFDwL,WACG/H,EACFrD,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,gBACD,OAAOI,OAAAqL,EAAA,EAAArL,CAACkL,EAADlL,OAAAS,OAAA,GAAewK,EAAiB5H,EAAhC,CAAuC+H,WAAYA,EAAYE,QAAQ,cAG5EtL,OAAAqL,EAAA,EAAArL,CAAA,KAAQ,CACNuL,GAAM,SADR,SAGAvL,OAAAqL,EAAA,EAAArL,CAAA,sBAAiBA,OAAAqL,EAAA,EAAArL,CAAA,UAAQwL,WAAW,KAAnB,SAAjB,4DACAxL,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAASH,QAAQ,WACnBtL,OAAAqL,EAAA,EAAArL,CAAA,gBACMA,OAAAqL,EAAA,EAAArL,CAAA,YAAO,WADb,8BAGAA,OAAAqL,EAAA,EAAArL,CAAA,UACEA,OAAAqL,EAAA,EAAArL,CAAA,UACEA,OAAAqL,EAAA,EAAArL,CAAA,YAAO,WADT,uBAEEA,OAAAqL,EAAA,EAAArL,CAAA,UACEA,OAAAqL,EAAA,EAAArL,CAAA,UACEA,OAAAqL,EAAA,EAAArL,CAAA,YAAO,sBADT,uEAEqCA,OAAAqL,EAAA,EAAArL,CAAA,YAAO,YAE5CA,OAAAqL,EAAA,EAAArL,CAAA,UACEA,OAAAqL,EAAA,EAAArL,CAAA,YAAO,mBADT,+GAGUA,OAAAqL,EAAA,EAAArL,CAAA,iBAHV,YAKAA,OAAAqL,EAAA,EAAArL,CAAA,UACEA,OAAAqL,EAAA,EAAArL,CAAA,YAAO,iBADT,wDAQJA,OAAAqL,EAAA,EAAArL,CAAA,KAAQ,CACNuL,GAAM,iBADR,iBAGAvL,OAAAqL,EAAA,EAAArL,CAAC0L,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,gvDAAuwDC,QAAS,CACjzDxI,MAAOG,KAAOA,KAAKH,MAAQA,EAC3ByI,YACAC,YACAC,cACAC,oBACAC,eACAC,UACAC,mCACAC,kBACAC,UACAjE,UACAM,UACA4D,QACAC,WACA1J,YACA2J,WACA/J,SACAO,UACAyJ,iBACA/J,UACA+G,sBACC4B,QAAQ,cACbtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAOC,aAAW,EAACC,MAAO,CACpBC,OAAQ,SACPxB,QAAQ,SAIZ,SAAAyB,GAAA,IACKpI,EADLoI,EACKpI,SADL,OAES3E,OAAAqL,EAAA,EAAArL,CAACgN,EAAD,CAAoBjC,WAAY,CACpCkC,aAAa,EACbtI,YACC2G,QAAQ,sBACXtL,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAMsC,WAAP,MACAlN,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM9H,QAAP,KACE9C,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAKH,QAAQ,OACXtL,OAAAqL,EAAA,EAAArL,CAACmN,EAAA,EAAD,CAAO7B,QAAQ,SACbtL,OAAAqL,EAAA,EAAArL,CAACmN,EAAA,EAAMxL,KAAP,CAAYjB,GAAG,SAASW,MAAM,QAC5BrB,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAMjE,UAAP,CAAiB9G,GAAG,IAAIc,KAAM,IAC5BxB,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAO2B,IAAI,QAAQC,IAAI,mDAAmD/B,QAAQ,YAGtFtL,OAAAqL,EAAA,EAAArL,CAACmN,EAAA,EAAMxL,KAAP,KACE3B,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAASH,QAAQ,WACftL,OAAAqL,EAAA,EAAArL,CAAA,SACEA,OAAAqL,EAAA,EAAArL,CAAA,4BADF,IAC8BA,OAAAqL,EAAA,EAAArL,CAAA,2BAA0B,IACtDA,OAAAqL,EAAA,EAAArL,CAAA,oBACAA,OAAAqL,EAAA,EAAArL,CAAA,WAHF,kJASFA,OAAAqL,EAAA,EAAArL,CAACmN,EAAA,EAAD,CAAO7E,WAAW,SAASgD,QAAQ,SACjCtL,OAAAqL,EAAA,EAAArL,CAACmN,EAAA,EAAMxL,KAAP,CAAYN,MAAM,QAChBrB,OAAAqL,EAAA,EAAArL,CAACmN,EAAA,EAAMxL,KAAP,CAAYjB,GAAG,KACbV,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAMjK,KAAK,QAAQ8J,QAAQ,QACzBtL,OAAAqL,EAAA,EAAArL,CAACsN,EAAA,EAAD,CAAiBC,KAAMvB,IAAWV,QAAQ,sBAG9CtL,OAAAqL,EAAA,EAAArL,CAACmN,EAAA,EAAMxL,KAAP,CAAYjB,GAAG,KACbV,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAMjK,KAAK,QAAQ8J,QAAQ,QACzBtL,OAAAqL,EAAA,EAAArL,CAACsN,EAAA,EAAD,CAAiBC,KAAMzB,IAASR,QAAQ,4BASxDtL,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM4C,MAAP,UAIJxN,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAcjC,MAAM,UAAU8B,QAAQ,gBACxCtL,OAAAqL,EAAA,EAAArL,CAAA,uBADE,QACyBA,OAAAqL,EAAA,EAAArL,CAAA,YAAO,wBADhC,wMAIwBA,OAAAqL,EAAA,EAAArL,CAAA,qBAJxB,eAIwDA,OAAAqL,EAAA,EAAArL,CAAA,wBAJxD,YAKKA,OAAAqL,EAAA,EAAArL,CAAA,qBALL,IAMFA,OAAAqL,EAAA,EAAArL,CAAA,WACAA,OAAAqL,EAAA,EAAArL,CAAA,WAPE,6DAQwDA,OAAAqL,EAAA,EAAArL,CAAA,KAAGmE,OAAO,SAASsJ,KAAK,+CAAxB,qDARxD,KAYAzN,OAAAqL,EAAA,EAAArL,CAAA,KAAQ,CACNuL,GAAM,eADR,eAGAvL,OAAAqL,EAAA,EAAArL,CAAA,gEACAA,OAAAqL,EAAA,EAAArL,CAAC0L,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,igBAAwgBC,QAAS,CACljBxI,MAAOG,KAAOA,KAAKH,MAAQA,EAC3ByI,YACAC,YACAC,cACAC,oBACAC,eACAC,UACAC,mCACAC,kBACAC,UACAjE,UACAM,UACA4D,QACAC,WACA1J,YACA2J,WACA/J,SACAO,UACAyJ,iBACA/J,UACA+G,sBACC4B,QAAQ,cACbtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAOC,aAAW,EAACC,MAAO,CACpBC,OAAQ,SACPxB,QAAQ,SAIZ,SAAAoC,GAAA,IACK/I,EADL+I,EACK/I,SADL,OAES3E,OAAAqL,EAAA,EAAArL,CAACgN,EAAD,CAAoBjC,WAAY,CACpCkC,aAAa,EACbtI,YACC2G,QAAQ,sBACXtL,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAMsC,WAAP,MACAlN,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM9H,QAAP,KACE9C,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAMjE,UAAP,CAAiB9G,GAAG,IAAIc,KAAK,QAC3BxB,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAO4B,IAAI,oDAAoD/B,QAAQ,YAG3EtL,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM4C,MAAP,UAIJxN,OAAAqL,EAAA,EAAArL,CAAA,KAAQ,CACNuL,GAAM,cADR,cAGAvL,OAAAqL,EAAA,EAAArL,CAAA,gDAA2CA,OAAAqL,EAAA,EAAArL,CAAA,MAAIwL,WAAW,KAAf,QAA3C,KAAiFxL,OAAAqL,EAAA,EAAArL,CAAA,MAAIwL,WAAW,KAAf,QAAjF,QAA0HxL,OAAAqL,EAAA,EAAArL,CAAA,MAAIwL,WAAW,KAAf,QAA1H,KACAxL,OAAAqL,EAAA,EAAArL,CAAA,gDAA2CA,OAAAqL,EAAA,EAAArL,CAAA,cAAYwL,WAAW,KAAvB,YAA3C,sFACAxL,OAAAqL,EAAA,EAAArL,CAAC0L,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,8iNAA6jNC,QAAS,CACvmNxI,MAAOG,KAAOA,KAAKH,MAAQA,EAC3ByI,YACAC,YACAC,cACAC,oBACAC,eACAC,UACAC,mCACAC,kBACAC,UACAjE,UACAM,UACA4D,QACAC,WACA1J,YACA2J,WACA/J,SACAO,UACAyJ,iBACA/J,UACA+G,sBACC4B,QAAQ,cACbtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAOC,aAAW,EAACC,MAAO,CACpBC,OAAQ,SACPxB,QAAQ,SAIZ,SAAAqC,GAAA,IACKhJ,EADLgJ,EACKhJ,SADL,OAES3E,OAAAqL,EAAA,EAAArL,CAACgN,EAAD,CAAoBjC,WAAY,CACpCkC,aAAa,EACbtI,YACC2G,QAAQ,sBACXtL,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAMsC,WAAP,MACAlN,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM/H,KAAP,KACE7C,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM/H,KAAK+K,KAAZ,KACE5N,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM/H,KAAKF,MAAZ,oBACA3C,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAQH,QAAQ,YAElBtL,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM/H,KAAK4G,KAAZ,KACEzJ,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAASH,QAAQ,WACftL,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAOH,QAAQ,SAAf,eACAtL,OAAAqL,EAAA,EAAArL,CAAA,6QAOAA,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAO/K,GAAG,KAAK4K,QAAQ,SAAvB,gBACAtL,OAAAqL,EAAA,EAAArL,CAAA,8CACqC,IACnCA,OAAAqL,EAAA,EAAArL,CAAA,iCAFF,wOAQAA,OAAAqL,EAAA,EAAArL,CAAA,UACEA,OAAAqL,EAAA,EAAArL,CAAA,wEAGAA,OAAAqL,EAAA,EAAArL,CAAA,wEAGAA,OAAAqL,EAAA,EAAArL,CAAA,iFAIAA,OAAAqL,EAAA,EAAArL,CAAA,iCAEFA,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAO/K,GAAG,KAAK4K,QAAQ,SAAvB,eACAtL,OAAAqL,EAAA,EAAArL,CAAA,iEACwD,IACtDA,OAAAqL,EAAA,EAAArL,CAAA,KAAGyN,KAAK,aAAR,YAFF,mGAKAzN,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAQoC,YAAT,KACE7N,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAQoC,YAAYlM,KAArB,4CAGA3B,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAQoC,YAAYlM,KAArB,mDAGA3B,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAQoC,YAAYlM,KAArB,oCAGA3B,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAQoC,YAAYlM,KAArB,6BAGA3B,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAQoC,YAAYlM,KAArB,gCAGA3B,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAQoC,YAAYlM,KAArB,sEAGA3B,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAQoC,YAAYlM,KAArB,6CAIF3B,OAAAqL,EAAA,EAAArL,CAAA,gJAIAA,OAAAqL,EAAA,EAAArL,CAAA,2EACkE,IAChEA,OAAAqL,EAAA,EAAArL,CAAA,2BAFF,0FAKAA,OAAAqL,EAAA,EAAArL,CAAA,sJAKAA,OAAAqL,EAAA,EAAArL,CAAA,+KAKAA,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAO/K,GAAG,KAAK4K,QAAQ,SAAvB,gBACAtL,OAAAqL,EAAA,EAAArL,CAAA,oJAKAA,OAAAqL,EAAA,EAAArL,CAAA,gNAMAA,OAAAqL,EAAA,EAAArL,CAAA,+kBAYAA,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAO/K,GAAG,KAAK4K,QAAQ,SAAvB,eACAtL,OAAAqL,EAAA,EAAArL,CAAA,qSAOAA,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAO/K,GAAG,KAAK4K,QAAQ,SAAvB,eACAtL,OAAAqL,EAAA,EAAArL,CAAA,kbAWJA,OAAAqL,EAAA,EAAArL,CAAC4K,EAAA,EAAM/H,KAAKiL,KAAZ,KACE9N,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAQjC,MAAM,UAAU8B,QAAQ,UAAhC,gBACAtL,OAAAqL,EAAA,EAAArL,CAACyL,EAAA,EAAD,CAAQH,QAAQ,UAAhB,gBAMRtL,OAAAqL,EAAA,EAAArL,CAAA,KAAQ,CACNuL,GAAM,OADR,OAGAvL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAgCoB,UAAWzB,IAAO0B,QAAQ,oBAAoB3K,MAAO,CACnFvD,OAAQ,CACNmO,YAAa,+BACbC,SAAU,WAEZC,QAAS,CACPF,YAAa,2DACbC,SAAU,WAEZjB,YAAa,CACXgB,YAAa,0EACbC,SAAU,WAEZE,WAAY,CACVH,YAAa,+DACbI,aAAc,OACdH,SAAU,WAEZI,mBAAoB,CAClBL,YAAa,6DACbC,SAAU,UAEZvJ,SAAU,CACRsJ,YAAa,yEACbC,SAAU,YAEZrD,QAAS,CACPoD,YAAa,2HACbC,SAAU,eAEX5C,QAAQ,mCACXtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAgCoB,UAAWzB,IAAMY,WAAYc,QAAQ,oBAAoB3K,MAAO,CAC9FwD,QAAS,CACPoH,YAAa,yCACbC,SAAU,sCAEX5C,QAAQ,mCACXtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAgCoB,UAAWzB,IAAMzJ,KAAK4G,KAAMuE,QAAQ,oBAAoB1C,QAAQ,mCAChGtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAgCoB,UAAWzB,IAAMzJ,KAAKiL,KAAME,QAAQ,oBAAoB1C,QAAQ,mCAChGtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAgCoB,UAAWzB,IAAMzJ,KAAKF,MAAOqL,QAAQ,oBAAoB1C,QAAQ,mCACjGtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAgCoB,UAAWzB,IAAMzJ,KAAMmL,QAAQ,oBAAoB1C,QAAQ,mCAC3FtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAgCoB,UAAWzB,IAAMkB,MAAOQ,QAAQ,oBAAoB3K,MAAO,CACzFwD,QAAS,CACPoH,YAAa,yCACbC,SAAU,sCAEX5C,QAAQ,mCACXtL,OAAAqL,EAAA,EAAArL,CAAC2M,EAAA,EAAD,CAAgCoB,UAAWzB,IAAMxJ,QAASkL,QAAQ,oBAAoB1C,QAAQ,sOAIlGH,EAAWoD,gBAAiB,urBClbrB,IAAMhI,EAAkC,CAC7CuE,MAAOtE,IACPyG,aAAa,EACbmB,YAAY,yNAGP,IAAMI,EAAe1K,IAAM2C,cAChCF,u7BCHF,IAAMK,EAAiB,SACrBC,EACAC,GAFqB,OAGlB,SAAC9C,QACY+C,IAAZF,GACFA,EAAQ7C,GAEN8C,EAAImG,aACNnG,EAAIgE,UAIK2D,EAAkB9O,YAC7B,SAAAC,EAAkCC,GAAlC,IAAGQ,EAAHT,EAAGS,UAAWwG,EAAdjH,EAAciH,QAAY9G,EAA1BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,gCACEM,EAAAC,EAAAC,cAACoO,EAAatH,SAAd,KACG,SAAAJ,GAAG,OACF5G,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,mBAAoBD,GAC1CwG,QAASD,EAAeC,EAASC,GACjCjH,IAAKA,EACL6O,KAAK,gBACD3O,OAKZ,CAAEW,GAAI,oOAGR+N,EAAgB9N,YAAc,mBAC9B8N,EAAgB7N,UAAY,CAC1BiG,QAAShG,IAAUsG,0UCrCd,IAAMwH,EAAgBhP,YAC3B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,kBAAmBD,GACzCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,qOAGRiO,EAAchO,YAAc,sVCXrB,IAAMiO,EAAgBjP,YAC3B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,kBAAmBD,GACzCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,oOAGRkO,EAAcjO,YAAc,wdCT5B,IAAMkO,EAAc,SAAdA,EACJvN,EACAwJ,GAFkB,OAIlBhH,IAAMgL,SAASC,IAAIzN,EAAU,SAAC0N,EAAOC,GACnC,GAAqB,WAAjBjP,OAAAkP,EAAA,EAAAlP,CAAOgP,IAAgC,OAAVA,GAAkB,SAAUA,EAAO,CAClE,GAAIA,EAAMG,OAAS1C,IAAQ,CACzB,IAAM5F,EAAWmI,EAAM3L,MAAwCwD,QAE/D,OAAO/C,IAAMsL,aAAaJ,EAAO,CAC/BnI,QAAS,SAAC7C,QACQ+C,IAAZF,GACFA,EAAQ7C,GAEV8G,OAGC,GAAIkE,EAAMG,OAASrL,IAAMuL,SAC9B,OACEnP,EAAAC,EAAAC,cAACF,EAAAC,EAAMkP,SAAP,CACE/N,SAAUuN,EACPG,EAAM3L,MAEJ/B,SACHwJ,KAOV,OAAOkE,KAGEM,EAAgB3P,YAC3B,SAAAC,EAAmCC,GAAnC,IAAGQ,EAAHT,EAAGS,UAAWiB,EAAd1B,EAAc0B,SAAavB,EAA3BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,iCACEM,EAAAC,EAAAC,cAACoO,EAAatH,SAAd,KACG,SAAA6F,GAAA,IAAGjC,EAAHiC,EAAGjC,MAAH,OACC5K,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEa,SAAUuN,EAAYvN,EAAUwJ,GAChCzK,UAAWC,IAAW,kBAAmBD,GACzCR,IAAKA,GACDE,OAKZ,CAAEW,GAAI,oOAGR4O,EAAc3O,YAAc,8VCpDrB,IAAM4O,EAAiB5P,YAC5B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,mBAAoBD,GAC1CR,IAAKA,GACDE,KAGR,CAAEW,GAAI,iOAGR6O,EAAe5O,YAAc,sTCPtB,IAAM6O,EAAYxP,OAAOS,OAC9Bd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,aAAcD,GACpCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,QAER,CACE+I,KAAMkF,EACNb,KAAMc,EACNhB,KAAM0B,EACN3M,MAAO4M,oNAIXC,EAAU7O,YAAc,2pBCjBxB,IAAMiG,EAAiB,SACrBC,EACAC,GAFqB,OAGlB,SAAC9C,QACY+C,IAAZF,GACFA,EAAQ7C,GAEV8C,EAAIgE,UAGO2E,EAAa9P,YACxB,SAAAC,EAAkCC,GAAlC,IAAGQ,EAAHT,EAAGS,UAAWwG,EAAdjH,EAAciH,QAAY9G,EAA1BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,gCACEM,EAAAC,EAAAC,cAACoO,EAAatH,SAAd,KACG,SAAAJ,GAAG,OACF5G,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEiP,aAAW,QACXrP,UAAWC,IAAW,cAAe,WAAYD,GACjDwG,QAASD,EAAeC,EAASC,GACjCjH,IAAKA,GACDE,OAKZ,CAAEW,GAAI,6NAGR+O,EAAW9O,YAAc,cACzB8O,EAAW7O,UAAY,CACrBiG,QAAShG,IAAUsG,o7CCxBd,IAAMwI,EAAb,SAAAvM,GAAA,SAAAuM,IAAA,IAAA/F,EAAAtG,EAAAtD,OAAA6J,EAAA,EAAA7J,CAAAwD,KAAAmM,GAAA,QAAA7F,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAA7G,EAAAtD,OAAAoK,EAAA,EAAApK,CAAAwD,MAAAoG,EAAA5J,OAAAqK,EAAA,EAAArK,CAAA2P,IAAAhM,KAAA2G,MAAAV,EAAA,CAAApG,MAAA9B,OAAAuI,KAAAjK,OAAAyB,EAAA,EAAAzB,QAAAuK,EAAA,EAAAvK,CAAAsD,GAAA,QAwD2B,gBACIyD,IAAvBzD,EAAKD,MAAMwH,SACbvH,EAAKD,MAAMwH,YA1DjB7K,OAAAyB,EAAA,EAAAzB,QAAAuK,EAAA,EAAAvK,CAAAsD,GAAA,gBA8DmC,SAACU,IACF,IAA1BV,EAAKD,MAAM+K,YAAsC,WAAfpK,EAAM4L,MAC1CtM,EAAKwH,UAhEXxH,EAAA,OAAAtD,OAAAwK,EAAA,EAAAxK,CAAA2P,EAAAvM,GAAApD,OAAAyK,EAAA,EAAAzK,CAAA2P,EAAA,EAAAlL,IAAA,oBAAAC,MAAA,WAO6B,IAAAM,EACKxB,KAAKH,MAA3B8K,EADiBnJ,EACjBmJ,QAASxJ,EADQK,EACRL,SACjBA,EAASC,iBAAiB,UAAWpB,KAAKqM,eAC1C,IAAMC,EAAOnL,EAASoL,cAAc,QAEvB,OAATD,IACc,IAAZ3B,GACF2B,EAAKE,UAAUC,IAAI,gBAd3B,CAAAxL,IAAA,uBAAAC,MAAA,WAmBgC,IACpBC,EAAanB,KAAKH,MAAlBsB,SACRA,EAASG,oBAAoB,UAAWtB,KAAKqM,eAC7C,IAAMC,EAAOnL,EAASoL,cAAc,QAEvB,OAATD,GACFA,EAAKE,UAAUE,OAAO,gBAzB5B,CAAAzL,IAAA,SAAAC,MAAA,WA6BkB,IAAAyL,EAQV3M,KAAKH,MANPhD,EAFY8P,EAEZ9P,UACA4M,EAHYkD,EAGZlD,YACAmB,EAJY+B,EAIZ/B,WACAlJ,EALYiL,EAKZjL,SAEGnF,GAPSoQ,EAMZtF,QANY7K,OAAAC,EAAA,EAAAD,CAAAmQ,EAAA,gEAUd,OACEjQ,EAAAC,EAAAC,cAACoO,EAAajJ,SAAd,CACEb,MAAO,CACLoG,MAAOtH,KAAKsH,MACZmC,aAA6B,IAAhBA,EACbmB,YAA2B,IAAfA,IAGdlO,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,QAAS,YAAaD,GAC5CR,IAAKqF,GACDnF,SAlDd4P,EAAA,CAAiC7L,IAAMgC,2BAA1B6J,iBACkB,CAC3B1C,YAAa1G,EAAa0G,YAC1BmB,WAAY7H,EAAa6H,yBAHhBuB,gBAKiB,+iBCJvB,IAAMS,EAAb,SAAAhN,GAIE,SAAAgN,EAAY/M,GAA4B,IAAAC,EAAA,OAAAtD,OAAA6J,EAAA,EAAA7J,CAAAwD,KAAA4M,GACtC9M,EAAAtD,OAAAoK,EAAA,EAAApK,CAAAwD,KAAAxD,OAAAqK,EAAA,EAAArK,CAAAoQ,GAAAzM,KAAAH,KAAMH,IADgCrD,OAAAyB,EAAA,EAAAzB,QAAAuK,EAAA,EAAAvK,CAAAsD,GAAA,aAElC+M,gBACF/M,EAAKgN,GAAKhN,EAAKqB,SAASvE,cAAc,YACL2G,IAA7B1D,EAAMiL,qBACRhL,EAAKgN,GAAGjQ,UAAYgD,EAAMiL,qBALQhL,EAJ1C,OAAAtD,OAAAwK,EAAA,EAAAxK,CAAAoQ,EAAAhN,GAAApD,OAAAyK,EAAA,EAAAzK,CAAAoQ,EAAA,EAAA3L,IAAA,oBAAAC,MAAA,gBAgBoBqC,IAAZvD,KAAK8M,IACP9M,KAAKmB,SAAS4L,KAAKC,YAAYhN,KAAK8M,MAjB1C,CAAA7L,IAAA,uBAAAC,MAAA,gBAuBoBqC,IAAZvD,KAAK8M,IACP9M,KAAKmB,SAAS4L,KAAKE,YAAYjN,KAAK8M,MAxB1C,CAAA7L,IAAA,SAAAC,MAAA,WA4BkB,IAAAM,EAC4CxB,KAAKH,MAAvDvD,EADMkF,EACNlF,OAAyCC,GADnCiF,EACEsJ,mBADFtJ,EACsBL,SADtB3E,OAAAC,EAAA,EAAAD,CAAAgF,EAAA,6CAGd,YAAmB+B,IAAZvD,KAAK8M,KAA+B,IAAXxQ,GAC5B4Q,IAASC,aACPzQ,EAAAC,EAAAC,cAACwQ,EAAD5Q,OAAAS,OAAA,CAAakE,SAAUnB,KAAKmB,UAAc5E,IAC1CyD,KAAK8M,MAlCf,CAAA7L,IAAA,WAAAkB,IAAA,WAwCI,YAA+BoB,IAAxBvD,KAAKH,MAAMsB,SAAyBnB,KAAKH,MAAMsB,SAAWA,aAxCrEyL,EAAA,CAAoCtM,IAAMgC,2BAA7BsK,gBACiB,wiBCbvB,IAAMS,EAAelR,YAC1B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,gBAAiBD,GACvCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,8NAGRmQ,EAAalQ,YAAc,gBCnB3BoF,EAAAC,EAAAC,EAAA,sBAAAqG,sQAcA,IAAM1L,EAAY,CAChBd,OAAQe,IAAUC,KAClBmM,YAAapM,IAAUC,KACvBsN,WAAYvN,IAAUC,KACtBqN,QAAStN,IAAUC,KACnBwN,mBAAoBzN,IAAUgB,OAC9B8C,SAAU9D,IAAUiQ,OACpBjG,QAAShK,IAAUsG,MAGRmF,EAAQtM,OAAOS,OAC1Bd,YACE,SAAC0D,EAAOxD,GAAR,OAAgBK,EAAAC,EAAAC,cAAC2Q,EAAD/Q,OAAAS,OAAA,CAAgByE,SAAUrF,GAASwD,KACnD,CACE3C,GAAI,MACJyN,SAAS,IAGb,CACEjB,WAAYuB,EACZ5L,KAAM2M,EACNhC,MAAOiC,EACPjI,UAAW4I,EACXtN,QAAS+N,EACTpJ,QAAS+G,EACTwC,OAAQrB,EACR/O,+uBChCSqQ,EAA2B,CACtCjQ,WAAY,CAAC,OAAQ,yoEAoBhB,IAAMkQ,EAAiBvR,YAC5B,SAAAC,EAAgCC,GAAhC,IAAGwB,EAAHzB,EAAGyB,MAAOhB,EAAVT,EAAUS,UAAcN,EAAxBC,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAA,8BACEsC,EAAA/B,EAAAC,cAAC+B,EAAA,EAADnC,OAAAS,OAAA,CACEJ,UAAWC,IAAWN,OAAAoC,EAAA,EAAApC,CAAA,iBAAA0B,OAAiBL,GAAUA,GAAShB,GAC1DR,IAAKA,GACDE,KAGR,CAAEW,GAAI,qOAGRwQ,EAAevQ,YAAc,kBAC7BuQ,EAAetQ,UAAY,CACzBS,MAAOR,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,SAASqP,i1BClC5D,IAAMC,EAAqBzR,YAChC,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,sBAAuBD,GAC7CR,IAAKA,GACDE,MAIV,CACEW,GAAI,OACJY,SAAU,kPAId8P,EAAmBzQ,YAAc,ktBCX1B,IAAM0Q,EAAiB1R,YAC5B,SAAAC,EAAkCC,GAAlC,IAAGQ,EAAHT,EAAGS,UAAW6D,EAAdtE,EAAcsE,QAAYnE,EAA1BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,gCACEM,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IACT,kBACA,CAAEgR,aAAcpN,GAChB7D,GAEFR,IAAKA,GACDE,MAIV,CAAEW,GAAI,qOAGR2Q,EAAe1Q,YAAc,kBAC7B0Q,EAAezQ,UAAY,CACzBsD,QAASrD,IAAUC,sVCxBd,IAAMyQ,EAAiB5R,YAC5B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,kBAAmBD,GACzCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,sOAGR6Q,EAAe5Q,YAAc,6ICPtB,IAAM6Q,EAAsB,CACjCxQ,WAAY,CAAC,WAAY,SACzBE,MAAO,CAAC,QAAS,SAAU,27DAuBtB,IAAMuQ,EAAazR,OAAOS,OAC/Bd,YACE,SAAAC,EAA+CC,GAA/C,IAAAuB,EAAGC,EAAHzB,EAAGyB,MAAOhB,EAAVT,EAAUS,UAAWqR,EAArB9R,EAAqB8R,QAASlQ,EAA9B5B,EAA8B4B,KAASzB,EAAvCC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,+CACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IACT,cADmBc,EAAA,GAAApB,OAAAyB,EAAA,EAAAzB,CAAAoB,EAAA,MAAAM,OAGVL,GAAUA,GAHArB,OAAAyB,EAAA,EAAAzB,CAAAoB,EAIjB,aAAcsQ,GAJG1R,OAAAyB,EAAA,EAAAzB,CAAAoB,EAAA,MAAAM,OAKVF,GAASA,GALCJ,GAOnBf,GAEFR,IAAKA,GACDE,KAGR,CAAEW,GAAI,QAER,CACEiR,SAAUP,EACVQ,KAAMP,EACN7I,KAAM+I,EACNM,KAAMX,4NAIVO,EAAW9Q,YAAc,aACzB8Q,EAAW7Q,UAAY,CACrBS,MAAOR,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,SACxD4P,QAAS7Q,IAAUC,KACnBU,KAAMX,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,4/BCvDlD,IAAMgQ,EAAanS,YACxB,SAAAC,EAAiCC,GAAjC,IAAGC,EAAHF,EAAGE,OAAQO,EAAXT,EAAWS,UAAcN,EAAzBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,+BACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,cAAe,CAAEC,YAAaT,GAAUO,GAC9DR,IAAKA,GACDE,KAGR,CAAEW,GAAI,0NAGRoR,EAAWnR,YAAc,cACzBmR,EAAWlR,UAAY,CACrBd,OAAQe,IAAUC,iUClBb,IAAMiR,EAAepS,YAC1B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,gBAAiBD,GACvCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,8NAGRqR,EAAapR,YAAc,mTCXpB,IAAMqR,EAAYrS,YACvB,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,aAAcD,GACpCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,yNAGRsR,EAAUrR,YAAc,iVCXjB,IAAMsR,EAAgBtS,YAC3B,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,aAAcD,GACpCR,IAAKA,GACDE,KAGR,CAAEW,GAAI,iOAGRuR,EAActR,YAAc,goBCLrB,IAAMuR,EAAWlS,OAAOS,OAC7Bd,YACE,SAAAC,EAAiCC,GAAjC,IAAGC,EAAHF,EAAGE,OAAQO,EAAXT,EAAWS,UAAcN,EAAzBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,+BACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CACEJ,UAAWC,IAAW,CAAEC,YAAaT,GAAUO,GAC/CR,IAAKA,GACDE,KAGR,CAAEW,GAAI,MAER,CAAEyR,MAAOF,kNAGXC,EAASvR,YAAc,YACvBuR,EAAStR,UAAY,CACnBd,OAAQe,IAAUC,wSClBb,IAAMsR,EAAQpS,OAAOS,OAC1Bd,YACE,SAAAC,EAAyBC,GAAzB,IAAGQ,EAAHT,EAAGS,UAAcN,EAAjBC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBACEM,EAAAC,EAAAC,cAACI,EAAA,EAADR,OAAAS,OAAA,CAASJ,UAAWC,IAAW,QAASD,GAAYR,IAAKA,GAASE,KAEpE,CAAEW,GAAI,QAER,CACE2R,MAAOP,EACPQ,QAASP,EACTrP,KAAMsP,EACNO,IAAKL,2MAITE,EAAMzR,YAAc,qhBCnBP6R,EAAqB,CAChCxR,WAAY,CAAC,WAAY,SACzBE,MAAO,CAAC,QAAS,SAAU,SAC3BuR,MAAO,CAAC,QAAS,SAAU,y2DA0BtB,IAAMC,EAAW/S,YACtB,SAAAC,EAAiEC,GAAjE,IAAAuB,EAAGC,EAAHzB,EAAGyB,MAAOC,EAAV1B,EAAU0B,SAAUjB,EAApBT,EAAoBS,UAAWsS,EAA/B/S,EAA+B+S,UAAWC,EAA1ChT,EAA0CgT,KAAMpR,EAAhD5B,EAAgD4B,KAASzB,EAAzDC,OAAAiC,EAAA,EAAAjC,CAAAJ,EAAA,mEACEsC,EAAA/B,EAAAC,cAAC+B,EAAA,EAADnC,OAAAS,OAAA,CACEJ,UAAWC,IACT,QADmBc,EAAA,GAAApB,OAAAoC,EAAA,EAAApC,CAAAoB,EAAA,MAAAM,OAGVL,GAAUA,GAHArB,OAAAoC,EAAA,EAAApC,CAAAoB,EAAA,MAAAM,OAIVF,GAASA,GAJCxB,OAAAoC,EAAA,EAAApC,CAAAoB,EAKjB,eAAgBuR,GALC3S,OAAAoC,EAAA,EAAApC,CAAAoB,EAAA,MAAAM,OAMVkR,GAASA,GANC5S,OAAAoC,EAAA,EAAApC,CAAAoB,EAOjB,YAAsB,WAATwR,GAA8B,mBAATA,GAPjB5S,OAAAoC,EAAA,EAAApC,CAAAoB,EAQjB,oBAA8B,mBAATwR,GARJxR,GAUnBf,GAEFiB,SAAUY,EAAA/B,EAAAC,cAAA,UAAKkB,GACfzB,IAAKA,GACDE,KAGR,CAAEW,GAAI,oNAGRgS,EAAS/R,YAAc,YACvB+R,EAAS9R,UAAY,CACnBS,MAAOR,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,SACxD6Q,UAAW9R,IAAUC,KACrB8R,KAAM/R,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,SACvDN,KAAMX,IAAUe,UAAU,CAACf,IAAUgB,OAAQhB,IAAUiB,48BCnDlD,IAAMyQ,EAAMvS,OAAOS,OACxBd,YACE,SAAAC,EAAsBC,GAAtB,IAAGC,EAAHF,EAAGE,OAAWC,EAAdC,OAAAoF,EAAA,EAAApF,CAAAJ,EAAA,mBACEiT,EAAA1S,EAAAC,cAAA,MAAIC,UAAWC,IAAW,CAAEC,YAAaT,KACvC+S,EAAA1S,EAAAC,cAAC0S,EAAA,EAAD9S,OAAAS,OAAA,CAASZ,IAAKA,GAASE,MAG3B,CAAEW,GAAI,MAER,CAAEyR,MAAOO,uMAGXH,EAAI5R,YAAc,MAClB4R,EAAI3R,UAAY,CACdd,OAAQe,IAAUC","file":"static/js/src-components-modal-docs-modal-docs.bb11514a.js","sourcesContent":["import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport interface BreadcrumbItemModifierProps {\n  active?: boolean;\n}\n\nexport type BreadcrumbItemProps = HelpersProps & BreadcrumbItemModifierProps;\n\nexport const BreadcrumbItem = forwardRefAs<BreadcrumbItemProps>(\n  ({ active, ...rest }, ref) => (\n    <li className={classNames({ \"is-active\": active })}>\n      <Generic ref={ref} {...rest} />\n    </li>\n  ),\n  { as: \"a\" },\n);\n\nBreadcrumbItem.displayName = \"Breadcrumb.Item\";\nBreadcrumbItem.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\nimport { BreadcrumbItem } from \"./breadcrumb-item\";\n\nexport const BREADCRUMB_DEFAULTS = {\n  alignments: [\"centered\", \"right\"] as const,\n  separators: [\"arrow\", \"bullet\", \"dot\", \"succeeds\"] as const,\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n};\n\nexport interface BreadcrumbVariablesOverrides {}\n\nexport interface BreadcrumbVariablesDefaults {\n  alignments: (typeof BREADCRUMB_DEFAULTS[\"alignments\"])[number];\n  separators: (typeof BREADCRUMB_DEFAULTS[\"separators\"])[number];\n  sizes: (typeof BREADCRUMB_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type BreadcrumbVariables = Prefer<\n  BreadcrumbVariablesOverrides,\n  BreadcrumbVariablesDefaults\n>;\n\nexport type BreadcrumbModifierProps = {\n  align?: BreadcrumbVariables[\"alignments\"];\n  separator?: BreadcrumbVariables[\"separators\"];\n  size?: BreadcrumbVariables[\"sizes\"];\n};\n\nexport type BreadcrumbProps = HelpersProps & BreadcrumbModifierProps;\n\nexport const Breadcrumb = Object.assign(\n  forwardRefAs<BreadcrumbProps>(\n    ({ align, children, className, separator, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"breadcrumb\",\n          {\n            [`has-${separator}-separator`]: separator,\n            [`is-${align}`]: align,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      >\n        <ul>{children}</ul>\n      </Generic>\n    ),\n    { as: \"nav\" },\n  ),\n  { Item: BreadcrumbItem },\n);\n\nBreadcrumb.displayName = \"Breadcrumb\";\nBreadcrumb.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  separator: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const CARD_HEADER_TITLE_DEFAULTS = {\n  alignments: [\"centered\"] as const,\n};\n\nexport interface CardHeaderTitleVariablesOverrides {}\n\nexport interface CardHeaderTitleVariablesDefaults {\n  alignments: (typeof CARD_HEADER_TITLE_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type CardHeaderTitleVariables = Prefer<\n  CardHeaderTitleVariablesOverrides,\n  CardHeaderTitleVariablesDefaults\n>;\n\nexport type CardHeaderTitleModifierProps = {\n  align?: CardHeaderTitleVariables[\"alignments\"];\n};\n\nexport type CardHeaderTitleProps = HelpersProps & CardHeaderTitleModifierProps;\n\nexport const CardHeaderTitle = forwardRefAs<CardHeaderTitleProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        \"card-header-title\",\n        { [`is-${align}`]: align },\n        className,\n      )}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardHeaderTitle.displayName = \"Card.Header.Title\";\nCardHeaderTitle.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type CardContentProps = HelpersProps;\n\nexport const CardContent = forwardRefAs<CardContentProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"card-content\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardContent.displayName = \"Card.Content\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type CardFooterItemProps = HelpersProps;\n\nexport const CardFooterItem = forwardRefAs<CardFooterItemProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"card-footer-item\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardFooterItem.displayName = \"Card.Footer.Item\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { CardFooterItem } from \"./card-footer-item\";\n\nexport type CardFooterProps = HelpersProps;\n\nexport const CardFooter = Object.assign(\n  forwardRefAs<CardFooterProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\"card-footer\", className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"div\" },\n  ),\n  { Item: CardFooterItem },\n);\n\nCardFooter.displayName = \"Card.Footer\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type CardHeaderIconProps = HelpersProps;\n\nexport const CardHeaderIcon = forwardRefAs<CardHeaderIconProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"card-header-icon\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardHeaderIcon.displayName = \"Card.Header.Icon\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { CardHeaderIcon } from \"./card-header-icon\";\nimport { CardHeaderTitle } from \"./card-header-title\";\n\nexport type CardHeaderProps = HelpersProps;\n\nexport const CardHeader = Object.assign(\n  forwardRefAs<CardHeaderProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\"card-header\", className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"div\" },\n  ),\n  {\n    Icon: CardHeaderIcon,\n    Title: CardHeaderTitle,\n  },\n);\n\nCardHeader.displayName = \"Card.Header\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type CardImageProps = HelpersProps;\n\nexport const CardImage = forwardRefAs<CardImageProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"card-image\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nCardImage.displayName = \"Card.Image\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { CardContent } from \"./card-content\";\nimport { CardFooter } from \"./card-footer\";\nimport { CardHeader } from \"./card-header\";\nimport { CardImage } from \"./card-image\";\n\nexport type CardProps = HelpersProps;\n\nexport const Card = Object.assign(\n  forwardRefAs<CardProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"card\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"div\" },\n  ),\n  {\n    Content: CardContent,\n    Footer: CardFooter,\n    Header: CardHeader,\n    Image: CardImage,\n  },\n);\n\nCard.displayName = \"Card\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\nimport { combineRefs } from \"../../utils\";\nimport { DropdownContext } from \"./dropdown-context\";\n\nexport const DROPDOWN_DEFAULTS = {\n  alignments: [\"right\"] as const,\n};\n\nexport interface DropdownVariablesOverrides {}\n\nexport interface DropdownVariablesDefaults {\n  alignments: (typeof DROPDOWN_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type DropdownVariables = Prefer<\n  DropdownVariablesOverrides,\n  DropdownVariablesDefaults\n>;\n\nexport type DropdownContainerModifierProps = {\n  active?: boolean;\n  align?: DropdownVariables[\"alignments\"];\n  as?: React.ReactType; // tslint:disable-line:no-reserved-keywords\n  hoverable?: boolean;\n  innerRef?: React.Ref<HTMLElement | SVGElement | React.ComponentType>;\n  managed?: boolean;\n  up?: boolean;\n};\n\nexport type DropdownContainerProps = HelpersProps &\n  DropdownContainerModifierProps;\n\nconst initialState = {\n  active: false,\n};\n\nexport type DropdownContainerState = typeof initialState;\n\nexport class DropdownContainer extends React.PureComponent<\n  DropdownContainerProps,\n  DropdownContainerState\n> {\n  public static displayName = \"Dropdown.Container\";\n  public readonly state: DropdownContainerState;\n  private readonly ref = React.createRef<HTMLElement>();\n\n  constructor(props: DropdownContainerProps) {\n    super(props);\n    this.state = { active: props.active === true };\n  }\n\n  public componentDidMount() {\n    document.addEventListener(\"click\", this.handleClick);\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClick);\n  }\n\n  public render() {\n    const {\n      active,\n      align,\n      className,\n      hoverable,\n      innerRef,\n      managed,\n      up,\n      ...rest\n    } = this.props;\n\n    return (\n      <DropdownContext.Provider\n        value={{\n          active: this.active,\n          setActive: (value: boolean) => (this.active = value),\n        }}\n      >\n        <Generic\n          className={classNames(\n            \"dropdown\",\n            {\n              [`is-${align}`]: align,\n              \"is-active\": this.active,\n              \"is-hoverable\": hoverable,\n              \"is-up\": up,\n            },\n            className,\n          )}\n          ref={combineRefs(this.ref, innerRef)}\n          {...rest}\n        />\n      </DropdownContext.Provider>\n    );\n  }\n\n  private get active() {\n    return this.props.managed === true\n      ? this.props.active === true\n      : this.state.active;\n  }\n\n  private set active(value: boolean) {\n    if (this.props.managed !== true) {\n      this.setState({ active: value });\n    }\n  }\n\n  private readonly handleClick = (event: MouseEvent) => {\n    if (\n      this.props.managed !== true &&\n      this.active &&\n      this.ref.current !== null\n    ) {\n      if (\n        event.target instanceof Element &&\n        !this.ref.current.contains(event.target)\n      ) {\n        this.active = false;\n      }\n    }\n  };\n}\n","import React from \"react\";\n\nimport { noop } from \"../../utils\";\n\nexport interface DropdownContextValue {\n  active: boolean;\n  setActive(value: boolean): void;\n}\n\nexport const initialValue: DropdownContextValue = {\n  active: false,\n  setActive: noop,\n};\n\nexport const DropdownContext = React.createContext<DropdownContextValue>(\n  initialValue,\n);\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type DropdownContentProps = HelpersProps;\n\nexport const DropdownContent = forwardRefAs<DropdownContentProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"dropdown-content\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nDropdownContent.displayName = \"Dropdown.Content\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type DropdownDividerProps = HelpersProps;\n\nexport const DropdownDivider = forwardRefAs<DropdownDividerProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"dropdown-divider\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"hr\" },\n);\n\nDropdownDivider.displayName = \"Dropdown.Divider\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { DropdownContext, DropdownContextValue } from \"./dropdown-context\";\n\nexport type DropdownItemModifierProps = {\n  active?: boolean;\n  onClick?: React.MouseEventHandler;\n};\n\nexport type DropdownItemProps = HelpersProps & DropdownItemModifierProps;\n\nconst onClickHandler = (\n  onClick: DropdownItemProps[\"onClick\"] | undefined,\n  ctx: DropdownContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  ctx.setActive(false);\n};\n\nexport const DropdownItem = forwardRefAs<DropdownItemProps>(\n  ({ active, className, onClick, ...rest }, ref) => (\n    <DropdownContext.Consumer>\n      {ctx => (\n        <Generic\n          className={classNames(\n            \"dropdown-item\",\n            { \"is-active\": active },\n            className,\n          )}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </DropdownContext.Consumer>\n  ),\n  { as: \"a\" },\n);\n\nDropdownItem.displayName = \"Dropdown.Item\";\nDropdownItem.propTypes = {\n  active: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type DropdownMenuProps = HelpersProps;\n\nexport const DropdownMenu = forwardRefAs<DropdownMenuProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"dropdown-menu\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nDropdownMenu.displayName = \"Dropdown.Menu\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { DropdownContext, DropdownContextValue } from \"./dropdown-context\";\n\nexport type DropdownTriggerModifierProps = {\n  onClick?: React.MouseEventHandler;\n};\n\nexport type DropdownTriggerProps = HelpersProps & DropdownTriggerModifierProps;\n\nconst onClickHandler = (\n  onClick: DropdownTriggerProps[\"onClick\"] | undefined,\n  ctx: DropdownContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  ctx.setActive(!ctx.active);\n};\n\nexport const DropdownTrigger = forwardRefAs<DropdownTriggerProps>(\n  ({ className, onClick, ...rest }, ref) => (\n    <DropdownContext.Consumer>\n      {ctx => (\n        <Generic\n          className={classNames(\"dropdown-trigger\", className)}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </DropdownContext.Consumer>\n  ),\n  { as: \"div\" },\n);\n\nDropdownTrigger.displayName = \"Dropdown.Trigger\";\nDropdownTrigger.propTypes = {\n  onClick: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs } from \"../../base\";\nimport {\n  DropdownContainer,\n  DropdownContainerProps,\n} from \"./dropdown-container\";\nimport { DropdownContent } from \"./dropdown-content\";\nimport { DropdownContext } from \"./dropdown-context\";\nimport { DropdownDivider } from \"./dropdown-divider\";\nimport { DropdownItem } from \"./dropdown-item\";\nimport { DropdownMenu } from \"./dropdown-menu\";\nimport { DropdownTrigger } from \"./dropdown-trigger\";\n\nexport type DropdownProps = Omit<DropdownContainerProps, \"as\" | \"innerRef\">;\n\nexport const Dropdown = Object.assign(\n  forwardRefAs<DropdownProps>(\n    (props, ref) => <DropdownContainer innerRef={ref} {...props} />,\n    { as: \"div\" },\n  ),\n  {\n    Container: DropdownContainer,\n    Content: DropdownContent,\n    Context: DropdownContext,\n    Divider: DropdownDivider,\n    Item: DropdownItem,\n    Menu: DropdownMenu,\n    Trigger: DropdownTrigger,\n  },\n);\n\nDropdown.displayName = \"Dropdown\";\nDropdown.propTypes = {\n  active: PropTypes.bool,\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  hoverable: PropTypes.bool,\n  managed: PropTypes.bool,\n  up: PropTypes.bool,\n};\n","export { Breadcrumb } from \"./breadcrumb\";\nexport { Card } from \"./card\";\nexport { Dropdown } from \"./dropdown\";\nexport { Level } from \"./level\";\nexport { List } from \"./list\";\nexport { Media } from \"./media\";\nexport { Menu } from \"./menu\";\nexport { Message } from \"./message\";\nexport { Modal } from \"./modal\";\nexport { Navbar } from \"./navbar\";\nexport { Pagination } from \"./pagination\";\nexport { Panel } from \"./panel\";\nexport { Tab } from \"./tab\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const LEVEL_ITEM_DEFAULTS = {\n  alignments: [\"left\", \"right\"] as const,\n};\n\nexport interface LevelItemVariablesOverrides {}\n\nexport interface LevelItemVariablesDefaults {\n  alignments: (typeof LEVEL_ITEM_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type LevelItemVariables = Prefer<\n  LevelItemVariablesOverrides,\n  LevelItemVariablesDefaults\n>;\n\nexport type LevelItemModifierProps = {\n  align?: LevelItemVariables[\"alignments\"];\n};\n\nexport type LevelItemProps = HelpersProps & LevelItemModifierProps;\n\nexport const LevelItem = forwardRefAs<LevelItemProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        {\n          \"level-item\": align === undefined,\n          [`level-${align}`]: align,\n        },\n        className,\n      )}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nLevelItem.displayName = \"Level.Item\";\nLevelItem.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Variables } from \"../../base/helpers/variables\";\nimport { LevelItem } from \"./level-item\";\n\nexport type LevelModifierProps = {\n  breakpoint?: Variables[\"breakpoints\"];\n};\n\nexport type LevelProps = HelpersProps & LevelModifierProps;\n\nexport const Level = Object.assign(\n  forwardRefAs<LevelProps>(\n    ({ breakpoint, className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"level\",\n          { [`is-${breakpoint}`]: breakpoint },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"nav\" },\n  ),\n  { Item: LevelItem },\n);\n\nLevel.displayName = \"Level\";\nLevel.propTypes = {\n  breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ListItemModifierProps = {\n  active?: boolean;\n};\n\nexport type ListItemProps = HelpersProps & ListItemModifierProps;\n\nexport const ListItem = forwardRefAs<ListItemProps>(\n  ({ active, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"list-item\", { \"is-active\": active }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"a\" },\n);\n\nListItem.displayName = \"List.Item\";\nListItem.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { ListItem } from \"./list-item\";\n\nexport type ListProps = HelpersProps;\n\nexport const List = Object.assign(\n  forwardRefAs<ListProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"list\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"div\" },\n  ),\n  { Item: ListItem },\n);\n\nList.displayName = \"List\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const MEDIA_ITEM_DEFAULTS = {\n  alignments: [\"content\", \"left\", \"right\"] as const,\n};\n\nexport interface MediaItemVariablesOverrides {}\n\nexport interface MediaItemVariablesDefaults {\n  alignments: (typeof MEDIA_ITEM_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type MediaItemVariables = Prefer<\n  MediaItemVariablesOverrides,\n  MediaItemVariablesDefaults\n>;\n\nexport type MediaItemModifierProps = {\n  align?: MediaItemVariables[\"alignments\"];\n};\n\nexport type MediaItemProps = HelpersProps & MediaItemModifierProps;\n\nexport const MediaItem = forwardRefAs<MediaItemProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames({ [`media-${align}`]: align }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  {\n    align: \"content\",\n    as: \"div\",\n  },\n);\n\nMediaItem.displayName = \"Media.Item\";\nMediaItem.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { MediaItem } from \"./media-item\";\n\nexport type MediaProps = HelpersProps;\n\nexport const Media = Object.assign(\n  forwardRefAs<MediaProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"media\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"article\" },\n  ),\n  { Item: MediaItem },\n);\n\nMedia.displayName = \"Media\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MenuLabelProps = HelpersProps;\n\nexport const MenuLabel = forwardRefAs<MenuLabelProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"menu-label\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"p\" },\n);\n\nMenuLabel.displayName = \"Menu.Label\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MenuListItemModifierProps = {\n  active?: boolean;\n  menu?: React.ReactNode;\n};\n\nexport type MenuListItemProps = HelpersProps & MenuListItemModifierProps;\n\nexport const MenuListItem = forwardRefAs<MenuListItemProps>(\n  ({ active, className, menu, ...rest }, ref) => (\n    <li>\n      <Generic\n        className={classNames({ \"is-active\": active }, className)}\n        ref={ref}\n        {...rest}\n      />\n      {menu}\n    </li>\n  ),\n  { as: \"a\" },\n);\n\nMenuListItem.displayName = \"Menu.List.Item\";\nMenuListItem.propTypes = {\n  active: PropTypes.bool,\n  menu: PropTypes.node,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { MenuListItem } from \"./menu-list-item\";\n\nexport type MenuListProps = HelpersProps;\n\nexport const MenuList = Object.assign(\n  forwardRefAs<MenuListProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\"menu-list\", className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"ul\" },\n  ),\n  { Item: MenuListItem },\n);\n\nMenuList.displayName = \"Menu.List\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { MenuLabel } from \"./menu-label\";\nimport { MenuList } from \"./menu-list\";\n\nexport type MenuProps = HelpersProps;\n\nexport const Menu = Object.assign(\n  forwardRefAs<MenuProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"menu\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"aside\" },\n  ),\n  {\n    Label: MenuLabel,\n    List: MenuList,\n  },\n);\n\nMenu.displayName = \"Menu\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MessageBodyProps = HelpersProps;\n\nexport const MessageBody = forwardRefAs<MessageBodyProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"message-body\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nMessageBody.displayName = \"Message.Body\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type MessageHeaderProps = HelpersProps;\n\nexport const MessageHeader = forwardRefAs<MessageHeaderProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"message-header\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nMessageHeader.displayName = \"Message.Header\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Variables } from \"../../base/helpers/variables\";\nimport { Prefer } from \"../../types\";\nimport { MessageBody } from \"./message-body\";\nimport { MessageHeader } from \"./message-header\";\n\nexport const MESSAGE_DEFAULTS = {\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n};\n\nexport interface MessageVariablesOverrides {}\n\nexport interface MessageVariablesDefaults {\n  sizes: (typeof MESSAGE_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type MessageVariables = Prefer<\n  MessageVariablesOverrides,\n  MessageVariablesDefaults\n>;\n\nexport type MessageModifierProps = {\n  color?: Variables[\"colors\"];\n  size?: MessageVariables[\"sizes\"];\n};\n\nexport type MessageProps = HelpersProps & MessageModifierProps;\n\nexport const Message = Object.assign(\n  forwardRefAs<MessageProps>(\n    ({ className, color, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"message\",\n          {\n            [`is-${color}`]: color,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"article\" },\n  ),\n  {\n    Body: MessageBody,\n    Header: MessageHeader,\n  },\n);\n\nMessage.displayName = \"Message\";\nMessage.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from \"react\";\n\nimport { Button } from \"src/elements/button\";\nimport { Modal, ModalProps } from \"../modal\";\n\ninterface SimpleModalManagerProps {\n  modalProps: Omit<ModalProps, \"onClose\" | \"active\">;\n  children: React.ReactNode;\n}\n\ninterface SimpleModalManagerState {\n  active: boolean;\n}\n\nexport class SimpleModalManager extends React.Component<\n  SimpleModalManagerProps,\n  SimpleModalManagerState\n> {\n  public static defaultProps = {\n    modalProps: {},\n  };\n\n  public readonly state: SimpleModalManagerState = { active: false };\n\n  public render() {\n    return (\n      <div>\n        <Button onClick={this.open}>Open modal</Button>\n        <Modal\n          active={this.state.active}\n          onClose={this.close}\n          {...this.props.modalProps}\n        >\n          {this.props.children}\n        </Modal>\n      </div>\n    );\n  }\n\n  private readonly close = () => {\n    this.setState({ active: false });\n  };\n  private readonly open = () => {\n    this.setState({ active: true });\n  };\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { faHeart, faReply, faRetweet } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Playground } from \"docz\";\nimport {\n  Frame,\n  ForwardRefAsExoticComponentDoc,\n  mapEnumerable,\n} from \"src/__docs__/components\";\nimport { Modal } from \"../modal\";\nimport { Level, Media } from \"src/components\";\nimport {\n  Box,\n  Button,\n  Content,\n  Delete,\n  Icon,\n  Image,\n  Notification,\n  Title,\n} from \"src/elements\";\nimport { SimpleModalManager } from \"./simple-modal-manager\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h1>\n    <p>{`A classic `}<strong parentName=\"p\">{`modal`}</strong>{` overlay, in which you can include any content you want.`}</p>\n    <Content mdxType=\"Content\">\n  <p>\n    The <code>{\"<Modal>\"}</code> structure is very simple:\n  </p>\n  <ul>\n    <li>\n      <code>{\"<Modal>\"}</code>: the main container\n      <ul>\n        <li>\n          <code>{\"<Modal.Background>\"}</code>: a transparent overlay that can\n          act as a click target to close the <code>{\"<Modal>\"}</code>\n        </li>\n        <li>\n          <code>{\"<Modal.Content>\"}</code>: a horizontally and vertically\n          centered container, with a maximum width of 640px, in which you can\n          include <em>any</em> content\n        </li>\n        <li>\n          <code>{\"<Modal.Close>\"}</code>: a simple cross located in the top\n          right corner\n        </li>\n      </ul>\n    </li>\n  </ul>\n    </Content>\n    <h3 {...{\n      \"id\": \"example-modal\"\n    }}>{`Example modal`}</h3>\n    <Playground __position={1} __code={'<Frame forceHeight style={{ height: \\'350px\\' }}>\\n  {/* SimpleModalManager is a reference implementation for the docs! */}\\n  {({ document }) => (\\n    <SimpleModalManager modalProps={{ closeOnBlur: true, document }}>\\n      <Modal.Background />\\n      <Modal.Content>\\n        <Box>\\n          <Media>\\n            <Media.Item as=\\\"figure\\\" align=\\\"left\\\">\\n              <Image.Container as=\\\"p\\\" size={64}>\\n                <Image\\n                  alt=\\\"64x64\\\"\\n                  src=\\\"https://bulma.io/images/placeholders/128x128.png\\\"\\n                />\\n              </Image.Container>\\n            </Media.Item>\\n            <Media.Item>\\n              <Content>\\n                <p>\\n                  <strong>John Smith</strong> <small>@johnsmith</small>{\\' \\'}\\n                  <small>31m</small>\\n                  <br />\\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n                  Aenean efficitur sit amet massa fringilla egestas. Nullam\\n                  condimentum luctus turpis.\\n                </p>\\n              </Content>\\n              <Level breakpoint=\\\"mobile\\\">\\n                <Level.Item align=\\\"left\\\">\\n                  <Level.Item as=\\\"a\\\">\\n                    <Icon size=\\\"small\\\">\\n                      <FontAwesomeIcon icon={faRetweet} />\\n                    </Icon>\\n                  </Level.Item>\\n                  <Level.Item as=\\\"a\\\">\\n                    <Icon size=\\\"small\\\">\\n                      <FontAwesomeIcon icon={faHeart} />\\n                    </Icon>\\n                  </Level.Item>\\n                </Level.Item>\\n              </Level>\\n            </Media.Item>\\n          </Media>\\n        </Box>\\n      </Modal.Content>\\n      <Modal.Close />\\n    </SimpleModalManager>\\n  )}\\n</Frame>'} __scope={{\n      props: this ? this.props : props,\n      faHeart,\n      faReply,\n      faRetweet,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      Modal,\n      Level,\n      Media,\n      Box,\n      Button,\n      Content,\n      Delete,\n      Icon,\n      Image,\n      Notification,\n      Title,\n      SimpleModalManager\n    }} mdxType=\"Playground\">\n  <Frame forceHeight style={{\n        height: \"350px\"\n      }} mdxType=\"Frame\">\n    {\n          /* SimpleModalManager is a reference implementation for the docs! */\n        }\n    {({\n          document\n        }) => <SimpleModalManager modalProps={{\n          closeOnBlur: true,\n          document\n        }} mdxType=\"SimpleModalManager\">\n        <Modal.Background />\n        <Modal.Content>\n          <Box mdxType=\"Box\">\n            <Media mdxType=\"Media\">\n              <Media.Item as=\"figure\" align=\"left\">\n                <Image.Container as=\"p\" size={64}>\n                  <Image alt=\"64x64\" src=\"https://bulma.io/images/placeholders/128x128.png\" mdxType=\"Image\" />\n                </Image.Container>\n              </Media.Item>\n              <Media.Item>\n                <Content mdxType=\"Content\">\n                  <p>\n                    <strong>John Smith</strong> <small>@johnsmith</small>{\" \"}\n                    <small>31m</small>\n                    <br />\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Aenean efficitur sit amet massa fringilla egestas. Nullam\n                    condimentum luctus turpis.\n                  </p>\n                </Content>\n                <Level breakpoint=\"mobile\" mdxType=\"Level\">\n                  <Level.Item align=\"left\">\n                    <Level.Item as=\"a\">\n                      <Icon size=\"small\" mdxType=\"Icon\">\n                        <FontAwesomeIcon icon={faRetweet} mdxType=\"FontAwesomeIcon\" />\n                      </Icon>\n                    </Level.Item>\n                    <Level.Item as=\"a\">\n                      <Icon size=\"small\" mdxType=\"Icon\">\n                        <FontAwesomeIcon icon={faHeart} mdxType=\"FontAwesomeIcon\" />\n                      </Icon>\n                    </Level.Item>\n                  </Level.Item>\n                </Level>\n              </Media.Item>\n            </Media>\n          </Box>\n        </Modal.Content>\n        <Modal.Close />\n      </SimpleModalManager>}\n  </Frame>\n    </Playground>\n    <Notification color=\"warning\" mdxType=\"Notification\">\n  <strong>Note:</strong> the <code>{\"<SimpleModalManager>\"}</code> used in these\n  playgrounds is a reference implementation for the docs, and is not available\n  in the release. People are usually particular about how they want to implement\n  their modal workflows, so <strong>rbx</strong> provides a <em>foundation</em>,\n  not an <em>opinion</em>.\n  <br />\n  <br />\n  For more information about designing your modal workflow, <a target=\"_blank\" href=\"https://stackoverflow.com/a/35641680/465164\">\n    review Dan Abramov's suggestions on StackOverflow\n  </a>.\n    </Notification>\n    <h3 {...{\n      \"id\": \"image-modal\"\n    }}>{`Image modal`}</h3>\n    <p>{`Modals can contain anything, for example, an image.`}</p>\n    <Playground __position={3} __code={'<Frame forceHeight style={{ height: \\'500px\\' }}>\\n  {/* SimpleModalManager is a reference implementation for the docs! */}\\n  {({ document }) => (\\n    <SimpleModalManager modalProps={{ closeOnBlur: true, document }}>\\n      <Modal.Background />\\n      <Modal.Content>\\n        <Image.Container as=\\\"p\\\" size=\\\"4by3\\\">\\n          <Image src=\\\"https://bulma.io/images/placeholders/1280x960.png\\\" />\\n        </Image.Container>\\n      </Modal.Content>\\n      <Modal.Close />\\n    </SimpleModalManager>\\n  )}\\n</Frame>'} __scope={{\n      props: this ? this.props : props,\n      faHeart,\n      faReply,\n      faRetweet,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      Modal,\n      Level,\n      Media,\n      Box,\n      Button,\n      Content,\n      Delete,\n      Icon,\n      Image,\n      Notification,\n      Title,\n      SimpleModalManager\n    }} mdxType=\"Playground\">\n  <Frame forceHeight style={{\n        height: \"500px\"\n      }} mdxType=\"Frame\">\n    {\n          /* SimpleModalManager is a reference implementation for the docs! */\n        }\n    {({\n          document\n        }) => <SimpleModalManager modalProps={{\n          closeOnBlur: true,\n          document\n        }} mdxType=\"SimpleModalManager\">\n        <Modal.Background />\n        <Modal.Content>\n          <Image.Container as=\"p\" size=\"4by3\">\n            <Image src=\"https://bulma.io/images/placeholders/1280x960.png\" mdxType=\"Image\" />\n          </Image.Container>\n        </Modal.Content>\n        <Modal.Close />\n      </SimpleModalManager>}\n  </Frame>\n    </Playground>\n    <h3 {...{\n      \"id\": \"card-modal\"\n    }}>{`Card modal`}</h3>\n    <p>{`This is a more classic modal with a `}<em parentName=\"p\">{`head`}</em>{`, `}<em parentName=\"p\">{`body`}</em>{` and `}<em parentName=\"p\">{`foot`}</em>{`.`}</p>\n    <p>{`Notice that the \"close\" button (the `}<inlineCode parentName=\"p\">{`<Delete>`}</inlineCode>{` component) in the card header automatically gains the ability to close the modal.`}</p>\n    <Playground __position={4} __code={'<Frame forceHeight style={{ height: \\'500px\\' }}>\\n  {/* SimpleModalManager is a reference implementation for the docs! */}\\n  {({ document }) => (\\n    <SimpleModalManager modalProps={{ closeOnBlur: true, document }}>\\n      <Modal.Background />\\n      <Modal.Card>\\n        <Modal.Card.Head>\\n          <Modal.Card.Title>Modal Title</Modal.Card.Title>\\n          <Delete />\\n        </Modal.Card.Head>\\n        <Modal.Card.Body>\\n          <Content>\\n            <Title>Hello world</Title>\\n            <p>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla\\n              accumsan, metus ultrices eleifend gravida, nulla nunc varius\\n              lectus, nec rutrum justo nibh eu lectus. Ut vulputate semper\\n              dui. Fusce erat odio, sollicitudin vel erat vel, interdum mattis\\n              neque.\\n            </p>\\n            <Title as=\\\"h2\\\">Second level</Title>\\n            <p>\\n              Curabitur accumsan turpis pharetra{\\' \\'}\\n              <strong>augue tincidunt</strong> blandit. Quisque condimentum\\n              maximus mi, sit amet commodo arcu rutrum id. Proin pretium urna\\n              vel cursus venenatis. Suspendisse potenti. Etiam mattis sem\\n              rhoncus lacus dapibus facilisis. Donec at dignissim dui. Ut et\\n              neque nisl.\\n            </p>\\n            <ul>\\n              <li>\\n                In fermentum leo eu lectus mollis, quis dictum mi aliquet.\\n              </li>\\n              <li>\\n                Morbi eu nulla lobortis, lobortis est in, fringilla felis.\\n              </li>\\n              <li>\\n                Aliquam nec felis in sapien venenatis viverra fermentum nec\\n                lectus.\\n              </li>\\n              <li>Ut non enim metus.</li>\\n            </ul>\\n            <Title as=\\\"h3\\\">Third level</Title>\\n            <p>\\n              Quisque ante lacus, malesuada ac auctor vitae, congue{\\' \\'}\\n              <a href=\\\"#non-ante\\\">non ante</a>. Phasellus lacus ex, semper ac\\n              tortor nec, fringilla condimentum orci. Fusce eu rutrum tellus.\\n            </p>\\n            <Content.OrderedList>\\n              <Content.OrderedList.Item>\\n                Donec blandit a lorem id convallis.\\n              </Content.OrderedList.Item>\\n              <Content.OrderedList.Item>\\n                Cras gravida arcu at diam gravida gravida.\\n              </Content.OrderedList.Item>\\n              <Content.OrderedList.Item>\\n                Integer in volutpat libero.\\n              </Content.OrderedList.Item>\\n              <Content.OrderedList.Item>\\n                Donec a diam tellus.\\n              </Content.OrderedList.Item>\\n              <Content.OrderedList.Item>\\n                Aenean nec tortor orci.\\n              </Content.OrderedList.Item>\\n              <Content.OrderedList.Item>\\n                Quisque aliquam cursus urna, non bibendum massa viverra eget.\\n              </Content.OrderedList.Item>\\n              <Content.OrderedList.Item>\\n                Vivamus maximus ultricies pulvinar.\\n              </Content.OrderedList.Item>\\n            </Content.OrderedList>\\n            <blockquote>\\n              Ut venenatis, nisl scelerisque sollicitudin fermentum, quam\\n              libero hendrerit ipsum, ut blandit est tellus sit amet turpis.\\n            </blockquote>\\n            <p>\\n              Quisque at semper enim, eu hendrerit odio. Etiam auctor nisl et{\\' \\'}\\n              <em>justo sodales</em> elementum. Maecenas ultrices lacus quis\\n              neque consectetur, et lobortis nisi molestie.\\n            </p>\\n            <p>\\n              Sed sagittis enim ac tortor maximus rutrum. Nulla facilisi.\\n              Donec mattis vulputate risus in luctus. Maecenas vestibulum\\n              interdum commodo.\\n            </p>\\n            <p>\\n              Suspendisse egestas sapien non felis placerat elementum. Morbi\\n              tortor nisl, suscipit sed mi sit amet, mollis malesuada nulla.\\n              Nulla facilisi. Nullam ac erat ante.\\n            </p>\\n            <Title as=\\\"h4\\\">Fourth level</Title>\\n            <p>\\n              Nulla efficitur eleifend nisi, sit amet bibendum sapien\\n              fringilla ac. Mauris euismod metus a tellus laoreet, at\\n              elementum ex efficitur.\\n            </p>\\n            <p>\\n              Maecenas eleifend sollicitudin dui, faucibus sollicitudin augue\\n              cursus non. Ut finibus eleifend arcu ut vehicula. Mauris eu est\\n              maximus est porta condimentum in eu justo. Nulla id iaculis\\n              sapien.\\n            </p>\\n            <p>\\n              Phasellus porttitor enim id metus volutpat ultricies. Ut nisi\\n              nunc, blandit sed dapibus at, vestibulum in felis. Etiam iaculis\\n              lorem ac nibh bibendum rhoncus. Nam interdum efficitur ligula\\n              sit amet ullamcorper. Etiam tristique, leo vitae porta faucibus,\\n              mi lacus laoreet metus, at cursus leo est vel tellus. Sed ac\\n              posuere est. Nunc ultricies nunc neque, vitae ultricies ex\\n              sodales quis. Aliquam eu nibh in libero accumsan pulvinar.\\n              Nullam nec nisl placerat, pretium metus vel, euismod ipsum.\\n              Proin tempor cursus nisl vel condimentum. Nam pharetra varius\\n              metus non pellentesque.\\n            </p>\\n            <Title as=\\\"h5\\\">Fifth level</Title>\\n            <p>\\n              Aliquam sagittis rhoncus vulputate. Cras non luctus sem, sed\\n              tincidunt ligula. Vestibulum at nunc elit. Praesent aliquet\\n              ligula mi, in luctus elit volutpat porta. Phasellus molestie\\n              diam vel nisi sodales, a eleifend augue laoreet. Sed nec\\n              eleifend justo. Nam et sollicitudin odio.\\n            </p>\\n            <Title as=\\\"h6\\\">Sixth level</Title>\\n            <p>\\n              Cras in nibh lacinia, venenatis nisi et, auctor urna. Donec\\n              pulvinar lacus sed diam dignissim, ut eleifend eros accumsan.\\n              Phasellus non tortor eros. Ut sed rutrum lacus. Etiam purus\\n              nunc, scelerisque quis enim vitae, malesuada ultrices turpis.\\n              Nunc vitae maximus purus, nec consectetur dui. Suspendisse\\n              euismod, elit vel rutrum commodo, ipsum tortor maximus dui, sed\\n              varius sapien odio vitae est. Etiam at cursus metus.\\n            </p>\\n          </Content>\\n        </Modal.Card.Body>\\n        <Modal.Card.Foot>\\n          <Button color=\\\"success\\\">Save changes</Button>\\n          <Button>Cancel</Button>\\n        </Modal.Card.Foot>\\n      </Modal.Card>\\n    </SimpleModalManager>\\n  )}\\n</Frame>'} __scope={{\n      props: this ? this.props : props,\n      faHeart,\n      faReply,\n      faRetweet,\n      FontAwesomeIcon,\n      Playground,\n      Frame,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      Modal,\n      Level,\n      Media,\n      Box,\n      Button,\n      Content,\n      Delete,\n      Icon,\n      Image,\n      Notification,\n      Title,\n      SimpleModalManager\n    }} mdxType=\"Playground\">\n  <Frame forceHeight style={{\n        height: \"500px\"\n      }} mdxType=\"Frame\">\n    {\n          /* SimpleModalManager is a reference implementation for the docs! */\n        }\n    {({\n          document\n        }) => <SimpleModalManager modalProps={{\n          closeOnBlur: true,\n          document\n        }} mdxType=\"SimpleModalManager\">\n        <Modal.Background />\n        <Modal.Card>\n          <Modal.Card.Head>\n            <Modal.Card.Title>Modal Title</Modal.Card.Title>\n            <Delete mdxType=\"Delete\" />\n          </Modal.Card.Head>\n          <Modal.Card.Body>\n            <Content mdxType=\"Content\">\n              <Title mdxType=\"Title\">Hello world</Title>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla\n                accumsan, metus ultrices eleifend gravida, nulla nunc varius\n                lectus, nec rutrum justo nibh eu lectus. Ut vulputate semper\n                dui. Fusce erat odio, sollicitudin vel erat vel, interdum mattis\n                neque.\n              </p>\n              <Title as=\"h2\" mdxType=\"Title\">Second level</Title>\n              <p>\n                Curabitur accumsan turpis pharetra{\" \"}\n                <strong>augue tincidunt</strong> blandit. Quisque condimentum\n                maximus mi, sit amet commodo arcu rutrum id. Proin pretium urna\n                vel cursus venenatis. Suspendisse potenti. Etiam mattis sem\n                rhoncus lacus dapibus facilisis. Donec at dignissim dui. Ut et\n                neque nisl.\n              </p>\n              <ul>\n                <li>\n                  In fermentum leo eu lectus mollis, quis dictum mi aliquet.\n                </li>\n                <li>\n                  Morbi eu nulla lobortis, lobortis est in, fringilla felis.\n                </li>\n                <li>\n                  Aliquam nec felis in sapien venenatis viverra fermentum nec\n                  lectus.\n                </li>\n                <li>Ut non enim metus.</li>\n              </ul>\n              <Title as=\"h3\" mdxType=\"Title\">Third level</Title>\n              <p>\n                Quisque ante lacus, malesuada ac auctor vitae, congue{\" \"}\n                <a href=\"#non-ante\">non ante</a>. Phasellus lacus ex, semper ac\n                tortor nec, fringilla condimentum orci. Fusce eu rutrum tellus.\n              </p>\n              <Content.OrderedList>\n                <Content.OrderedList.Item>\n                  Donec blandit a lorem id convallis.\n                </Content.OrderedList.Item>\n                <Content.OrderedList.Item>\n                  Cras gravida arcu at diam gravida gravida.\n                </Content.OrderedList.Item>\n                <Content.OrderedList.Item>\n                  Integer in volutpat libero.\n                </Content.OrderedList.Item>\n                <Content.OrderedList.Item>\n                  Donec a diam tellus.\n                </Content.OrderedList.Item>\n                <Content.OrderedList.Item>\n                  Aenean nec tortor orci.\n                </Content.OrderedList.Item>\n                <Content.OrderedList.Item>\n                  Quisque aliquam cursus urna, non bibendum massa viverra eget.\n                </Content.OrderedList.Item>\n                <Content.OrderedList.Item>\n                  Vivamus maximus ultricies pulvinar.\n                </Content.OrderedList.Item>\n              </Content.OrderedList>\n              <blockquote>\n                Ut venenatis, nisl scelerisque sollicitudin fermentum, quam\n                libero hendrerit ipsum, ut blandit est tellus sit amet turpis.\n              </blockquote>\n              <p>\n                Quisque at semper enim, eu hendrerit odio. Etiam auctor nisl et{\" \"}\n                <em>justo sodales</em> elementum. Maecenas ultrices lacus quis\n                neque consectetur, et lobortis nisi molestie.\n              </p>\n              <p>\n                Sed sagittis enim ac tortor maximus rutrum. Nulla facilisi.\n                Donec mattis vulputate risus in luctus. Maecenas vestibulum\n                interdum commodo.\n              </p>\n              <p>\n                Suspendisse egestas sapien non felis placerat elementum. Morbi\n                tortor nisl, suscipit sed mi sit amet, mollis malesuada nulla.\n                Nulla facilisi. Nullam ac erat ante.\n              </p>\n              <Title as=\"h4\" mdxType=\"Title\">Fourth level</Title>\n              <p>\n                Nulla efficitur eleifend nisi, sit amet bibendum sapien\n                fringilla ac. Mauris euismod metus a tellus laoreet, at\n                elementum ex efficitur.\n              </p>\n              <p>\n                Maecenas eleifend sollicitudin dui, faucibus sollicitudin augue\n                cursus non. Ut finibus eleifend arcu ut vehicula. Mauris eu est\n                maximus est porta condimentum in eu justo. Nulla id iaculis\n                sapien.\n              </p>\n              <p>\n                Phasellus porttitor enim id metus volutpat ultricies. Ut nisi\n                nunc, blandit sed dapibus at, vestibulum in felis. Etiam iaculis\n                lorem ac nibh bibendum rhoncus. Nam interdum efficitur ligula\n                sit amet ullamcorper. Etiam tristique, leo vitae porta faucibus,\n                mi lacus laoreet metus, at cursus leo est vel tellus. Sed ac\n                posuere est. Nunc ultricies nunc neque, vitae ultricies ex\n                sodales quis. Aliquam eu nibh in libero accumsan pulvinar.\n                Nullam nec nisl placerat, pretium metus vel, euismod ipsum.\n                Proin tempor cursus nisl vel condimentum. Nam pharetra varius\n                metus non pellentesque.\n              </p>\n              <Title as=\"h5\" mdxType=\"Title\">Fifth level</Title>\n              <p>\n                Aliquam sagittis rhoncus vulputate. Cras non luctus sem, sed\n                tincidunt ligula. Vestibulum at nunc elit. Praesent aliquet\n                ligula mi, in luctus elit volutpat porta. Phasellus molestie\n                diam vel nisi sodales, a eleifend augue laoreet. Sed nec\n                eleifend justo. Nam et sollicitudin odio.\n              </p>\n              <Title as=\"h6\" mdxType=\"Title\">Sixth level</Title>\n              <p>\n                Cras in nibh lacinia, venenatis nisi et, auctor urna. Donec\n                pulvinar lacus sed diam dignissim, ut eleifend eros accumsan.\n                Phasellus non tortor eros. Ut sed rutrum lacus. Etiam purus\n                nunc, scelerisque quis enim vitae, malesuada ultrices turpis.\n                Nunc vitae maximus purus, nec consectetur dui. Suspendisse\n                euismod, elit vel rutrum commodo, ipsum tortor maximus dui, sed\n                varius sapien odio vitae est. Etiam at cursus metus.\n              </p>\n            </Content>\n          </Modal.Card.Body>\n          <Modal.Card.Foot>\n            <Button color=\"success\" mdxType=\"Button\">Save changes</Button>\n            <Button mdxType=\"Button\">Cancel</Button>\n          </Modal.Card.Foot>\n        </Modal.Card>\n  </SimpleModalManager>}\n  </Frame>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Modal} docPath=\"/components/modal\" props={{\n      active: {\n        description: \"whether the modal is visible\",\n        typeName: \"boolean\"\n      },\n      clipped: {\n        description: \"whether the underlying document should prevent scrolling\",\n        typeName: \"boolean\"\n      },\n      closeOnBlur: {\n        description: \"whether the modal should close when a click happens outside its element\",\n        typeName: \"boolean\"\n      },\n      closeOnEsc: {\n        description: \"whether the modal should close when the <ESC> key is pressed\",\n        defaultValue: \"true\",\n        typeName: \"boolean\"\n      },\n      containerClassName: {\n        description: \"the name of the container for the React Portal to mount in\",\n        typeName: \"string\"\n      },\n      document: {\n        description: \"the document to contain the portal (useful for launching in an iframe)\",\n        typeName: \"Document\"\n      },\n      onClose: {\n        description: \"a callback when the Modal should be closed (usually due to closeOnBlur, closeOnEsc, or manually toggling a close button)\",\n        typeName: \"() => void\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Modal.Background} docPath=\"/components/modal\" props={{\n      onClick: {\n        description: \"callback when the component is clicked\",\n        typeName: \"(event: React.MouseEvent) => void\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Modal.Card.Body} docPath=\"/components/modal\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Modal.Card.Foot} docPath=\"/components/modal\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Modal.Card.Title} docPath=\"/components/modal\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Modal.Card} docPath=\"/components/modal\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Modal.Close} docPath=\"/components/modal\" props={{\n      onClick: {\n        description: \"callback when the component is clicked\",\n        typeName: \"(event: React.MouseEvent) => void\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Modal.Content} docPath=\"/components/modal\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from \"react\";\n\nimport { noop } from \"../../utils\";\n\nexport interface ModalContextValue {\n  closeOnBlur: boolean;\n  closeOnEsc: boolean;\n  close(): void;\n}\n\nexport const initialValue: ModalContextValue = {\n  close: noop,\n  closeOnBlur: false,\n  closeOnEsc: true,\n};\n\nexport const ModalContext = React.createContext<ModalContextValue>(\n  initialValue,\n);\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { ModalContext, ModalContextValue } from \"./modal-context\";\n\nexport type ModalBackgroundModifierProps = {\n  onClick?: React.MouseEventHandler;\n};\n\nexport type ModalBackgroundProps = HelpersProps & ModalBackgroundModifierProps;\n\nconst onClickHandler = (\n  onClick: ModalBackgroundProps[\"onClick\"],\n  ctx: ModalContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  if (ctx.closeOnBlur) {\n    ctx.close();\n  }\n};\n\nexport const ModalBackground = forwardRefAs<ModalBackgroundProps>(\n  ({ className, onClick, ...rest }, ref) => (\n    <ModalContext.Consumer>\n      {ctx => (\n        <Generic\n          className={classNames(\"modal-background\", className)}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          role=\"presentation\"\n          {...rest}\n        />\n      )}\n    </ModalContext.Consumer>\n  ),\n  { as: \"div\" },\n);\n\nModalBackground.displayName = \"Modal.Background\";\nModalBackground.propTypes = {\n  onClick: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ModalCardBodyProps = HelpersProps;\n\nexport const ModalCardBody = forwardRefAs<ModalCardBodyProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"modal-card-body\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"section\" },\n);\n\nModalCardBody.displayName = \"Modal.Card.Body\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ModalCardFootProps = HelpersProps;\n\nexport const ModalCardFoot = forwardRefAs<ModalCardFootProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"modal-card-foot\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"footer\" },\n);\n\nModalCardFoot.displayName = \"Modal.Card.Foot\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Delete } from \"../../elements\";\nimport { ModalContext, ModalContextValue } from \"./modal-context\";\n\nexport type ModalCardHeadProps = HelpersProps;\n\nconst mapChildren = (\n  children: React.ReactNode,\n  close: ModalContextValue[\"close\"],\n) =>\n  React.Children.map(children, (child, i) => {\n    if (typeof child === \"object\" && child !== null && \"type\" in child) {\n      if (child.type === Delete) {\n        const onClick = (child.props as React.HTMLAttributes<Element>).onClick;\n\n        return React.cloneElement(child, {\n          onClick: (event: React.MouseEvent) => {\n            if (onClick !== undefined) {\n              onClick(event);\n            }\n            close();\n          },\n        });\n      } else if (child.type === React.Fragment) {\n        return (\n          <React.Fragment\n            children={mapChildren(\n              (child.props as React.ComponentPropsWithoutRef<\n                typeof React.Fragment\n              >).children,\n              close,\n            )}\n          />\n        );\n      }\n    }\n\n    return child;\n  });\n\nexport const ModalCardHead = forwardRefAs<ModalCardHeadProps>(\n  ({ className, children, ...rest }, ref) => (\n    <ModalContext.Consumer>\n      {({ close }) => (\n        <Generic\n          children={mapChildren(children, close)}\n          className={classNames(\"modal-card-head\", className)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </ModalContext.Consumer>\n  ),\n  { as: \"header\" },\n);\n\nModalCardHead.displayName = \"Modal.Card.Head\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ModalCardTitleProps = HelpersProps;\n\nexport const ModalCardTitle = forwardRefAs<ModalCardTitleProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"modal-card-title\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"p\" },\n);\n\nModalCardTitle.displayName = \"Modal.Card.Title\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { ModalCardBody } from \"./modal-card-body\";\nimport { ModalCardFoot } from \"./modal-card-foot\";\nimport { ModalCardHead } from \"./modal-card-head\";\nimport { ModalCardTitle } from \"./modal-card-title\";\n\nexport type ModalCardProps = HelpersProps;\n\nexport const ModalCard = Object.assign(\n  forwardRefAs<ModalCardProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic\n        className={classNames(\"modal-card\", className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"div\" },\n  ),\n  {\n    Body: ModalCardBody,\n    Foot: ModalCardFoot,\n    Head: ModalCardHead,\n    Title: ModalCardTitle,\n  },\n);\n\nModalCard.displayName = \"Modal.Card\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { ModalContext, ModalContextValue } from \"./modal-context\";\n\nexport type ModalCloseModifierProps = {\n  onClick?: React.MouseEventHandler;\n};\n\nexport type ModalCloseProps = HelpersProps & ModalCloseModifierProps;\n\nconst onClickHandler = (\n  onClick: ModalCloseProps[\"onClick\"] | undefined,\n  ctx: ModalContextValue,\n) => (event: React.MouseEvent) => {\n  if (onClick !== undefined) {\n    onClick(event);\n  }\n  ctx.close();\n};\n\nexport const ModalClose = forwardRefAs<ModalCloseProps>(\n  ({ className, onClick, ...rest }, ref) => (\n    <ModalContext.Consumer>\n      {ctx => (\n        <Generic\n          aria-label=\"close\"\n          className={classNames(\"modal-close\", \"is-large\", className)}\n          onClick={onClickHandler(onClick, ctx)}\n          ref={ref}\n          {...rest}\n        />\n      )}\n    </ModalContext.Consumer>\n  ),\n  { as: \"button\" },\n);\n\nModalClose.displayName = \"Modal.Close\";\nModalClose.propTypes = {\n  onClick: PropTypes.func,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Generic } from \"../../base\";\nimport { initialValue, ModalContext, ModalContextValue } from \"./modal-context\";\n\nexport type ModalPortalModifierProps = {\n  as?: React.ReactType; // tslint:disable-line:no-reserved-keywords\n  className?: string;\n  clipped?: boolean;\n  closeOnBlur?: ModalContextValue[\"closeOnBlur\"];\n  closeOnEsc?: ModalContextValue[\"closeOnEsc\"];\n  document: Document;\n  innerRef?: React.Ref<HTMLElement | SVGElement | React.ComponentType>;\n  onClose?: ModalContextValue[\"close\"];\n};\n\nexport type ModalPortalProps = ModalPortalModifierProps;\n\nexport class ModalPortal extends React.PureComponent<ModalPortalProps> {\n  public static defaultProps = {\n    closeOnBlur: initialValue.closeOnBlur,\n    closeOnEsc: initialValue.closeOnEsc,\n  };\n  public static displayName = \"Modal.Portal\";\n\n  public componentDidMount() {\n    const { clipped, document } = this.props;\n    document.addEventListener(\"keydown\", this.handleKeydown);\n    const html = document.querySelector(\"html\");\n    /* istanbul ignore else: typeguard */\n    if (html !== null) {\n      if (clipped === true) {\n        html.classList.add(\"is-clipped\");\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    const { document } = this.props;\n    document.removeEventListener(\"keydown\", this.handleKeydown);\n    const html = document.querySelector(\"html\");\n    /* istanbul ignore else: typeguard */\n    if (html !== null) {\n      html.classList.remove(\"is-clipped\");\n    }\n  }\n\n  public render() {\n    const {\n      className,\n      closeOnBlur,\n      closeOnEsc,\n      innerRef,\n      onClose,\n      ...rest\n    } = this.props;\n\n    return (\n      <ModalContext.Provider\n        value={{\n          close: this.close,\n          closeOnBlur: closeOnBlur === true,\n          closeOnEsc: closeOnEsc === true,\n        }}\n      >\n        <Generic\n          className={classNames(\"modal\", \"is-active\", className)}\n          ref={innerRef}\n          {...rest}\n        />\n      </ModalContext.Provider>\n    );\n  }\n\n  private readonly close = () => {\n    if (this.props.onClose !== undefined) {\n      this.props.onClose();\n    }\n  };\n\n  private readonly handleKeydown = (event: KeyboardEvent) => {\n    if (this.props.closeOnEsc === true && event.code === \"Escape\") {\n      this.close();\n    }\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { canUseDOM } from \"../../utils\";\nimport { ModalContextValue } from \"./modal-context\";\nimport { ModalPortal } from \"./modal-portal\";\n\nexport type ModalContainerProps = {\n  active?: boolean;\n  as?: React.ReactType; // tslint:disable-line:no-reserved-keywords\n  children?: React.ReactNode;\n  clipped?: boolean;\n  closeOnBlur?: ModalContextValue[\"closeOnBlur\"];\n  closeOnEsc?: ModalContextValue[\"closeOnEsc\"];\n  containerClassName?: string;\n  document?: Document;\n  innerRef?: React.Ref<HTMLElement | SVGElement | React.ComponentType>;\n  onClose?: () => void;\n};\n\nexport class ModalContainer extends React.PureComponent<ModalContainerProps> {\n  public static displayName = \"Modal.Container\";\n  private readonly el: HTMLDivElement | undefined;\n\n  constructor(props: ModalContainerProps) {\n    super(props);\n    if (canUseDOM()) {\n      this.el = this.document.createElement(\"div\");\n      if (props.containerClassName !== undefined) {\n        this.el.className = props.containerClassName;\n      }\n    }\n  }\n\n  public componentDidMount() {\n    /* istanbul ignore else: typescript typeguard */\n    if (this.el !== undefined) {\n      this.document.body.appendChild(this.el);\n    }\n  }\n\n  public componentWillUnmount() {\n    /* istanbul ignore else: typescript typeguard */\n    if (this.el !== undefined) {\n      this.document.body.removeChild(this.el);\n    }\n  }\n\n  public render() {\n    const { active, containerClassName, document, ...rest } = this.props;\n\n    return this.el !== undefined && active === true\n      ? ReactDOM.createPortal(\n          <ModalPortal document={this.document} {...rest} />,\n          this.el,\n        )\n      : false;\n  }\n\n  private get document() {\n    return this.props.document !== undefined ? this.props.document : document;\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type ModalContentProps = HelpersProps;\n\nexport const ModalContent = forwardRefAs<ModalContentProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"modal-content\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nModalContent.displayName = \"Modal.Content\";\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs } from \"../../base\";\nimport { ModalBackground } from \"./modal-background\";\nimport { ModalCard } from \"./modal-card\";\nimport { ModalClose } from \"./modal-close\";\nimport { ModalContainer, ModalContainerProps } from \"./modal-container\";\nimport { ModalContent } from \"./modal-content\";\nimport { ModalContext } from \"./modal-context\";\nimport { ModalPortal } from \"./modal-portal\";\n\nexport type ModalProps = Omit<ModalContainerProps, \"as\" | \"innerRef\">;\n\nconst propTypes = {\n  active: PropTypes.bool,\n  closeOnBlur: PropTypes.bool,\n  closeOnEsc: PropTypes.bool,\n  clipped: PropTypes.bool,\n  containerClassName: PropTypes.string,\n  document: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nexport const Modal = Object.assign(\n  forwardRefAs<ModalProps>(\n    (props, ref) => <ModalContainer innerRef={ref} {...props} />,\n    {\n      as: \"div\",\n      clipped: true,\n    },\n  ),\n  {\n    Background: ModalBackground,\n    Card: ModalCard,\n    Close: ModalClose,\n    Container: ModalContainer,\n    Content: ModalContent,\n    Context: ModalContext,\n    Portal: ModalPortal,\n    propTypes,\n  },\n);\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const PAGINATION_STEP_DEFAULTS = {\n  alignments: [\"next\", \"previous\"] as const,\n};\n\nexport interface PaginationStepVariablesOverrides {}\n\nexport interface PaginationStepVariablesDefaults {\n  alignments: (typeof PAGINATION_STEP_DEFAULTS[\"alignments\"])[number];\n}\n\nexport type PaginationStepVariables = Prefer<\n  PaginationStepVariablesOverrides,\n  PaginationStepVariablesDefaults\n>;\n\nexport type PaginationStepModifierProps = {\n  align: PaginationStepVariables[\"alignments\"];\n};\n\nexport type PaginationStepProps = HelpersProps & PaginationStepModifierProps;\n\nexport const PaginationStep = forwardRefAs<PaginationStepProps>(\n  ({ align, className, ...rest }, ref) => (\n    <Generic\n      className={classNames({ [`pagination-${align}`]: align }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"a\" },\n);\n\nPaginationStep.displayName = \"Pagination.Step\";\nPaginationStep.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PaginationEllipsisProps = HelpersProps;\n\nexport const PaginationEllipsis = forwardRefAs<PaginationEllipsisProps>(\n  ({ className, ...rest }, ref) => (\n    <li>\n      <Generic\n        className={classNames(\"pagination-ellipsis\", className)}\n        ref={ref}\n        {...rest}\n      />\n    </li>\n  ),\n  {\n    as: \"span\",\n    children: \"…\",\n  },\n);\n\nPaginationEllipsis.displayName = \"Pagination.Ellipsis\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PaginationLinkModifiers = {\n  current?: boolean;\n};\n\nexport type PaginationLinkProps = HelpersProps & PaginationLinkModifiers;\n\nexport const PaginationLink = forwardRefAs<PaginationLinkProps>(\n  ({ className, current, ...rest }, ref) => (\n    <li>\n      <Generic\n        className={classNames(\n          \"pagination-link\",\n          { \"is-current\": current },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    </li>\n  ),\n  { as: \"a\" },\n);\n\nPaginationLink.displayName = \"Pagination.Link\";\nPaginationLink.propTypes = {\n  current: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PaginationListProps = HelpersProps;\n\nexport const PaginationList = forwardRefAs<PaginationListProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"pagination-list\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"ul\" },\n);\n\nPaginationList.displayName = \"Pagination.List\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\nimport { PaginationEllipsis } from \"./pagination-ellipsis\";\nimport { PaginationLink } from \"./pagination-link\";\nimport { PaginationList } from \"./pagination-list\";\nimport { PaginationStep } from \"./pagination-step\";\n\nexport const PAGINATION_DEFAULTS = {\n  alignments: [\"centered\", \"right\"] as const,\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n};\n\nexport interface PaginationVariablesOverrides {}\n\nexport interface PaginationVariablesDefaults {\n  alignments: (typeof PAGINATION_DEFAULTS[\"alignments\"])[number];\n  sizes: (typeof PAGINATION_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type PaginationVariables = Prefer<\n  PaginationVariablesOverrides,\n  PaginationVariablesDefaults\n>;\n\nexport type PaginationModifiers = {\n  align?: PaginationVariables[\"alignments\"];\n  rounded?: boolean;\n  size?: PaginationVariables[\"sizes\"];\n};\n\nexport type PaginationProps = HelpersProps & PaginationModifiers;\n\nexport const Pagination = Object.assign(\n  forwardRefAs<PaginationProps>(\n    ({ align, className, rounded, size, ...rest }, ref) => (\n      <Generic\n        className={classNames(\n          \"pagination\",\n          {\n            [`is-${align}`]: align,\n            \"is-rounded\": rounded,\n            [`is-${size}`]: size,\n          },\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"nav\" },\n  ),\n  {\n    Ellipsis: PaginationEllipsis,\n    Link: PaginationLink,\n    List: PaginationList,\n    Step: PaginationStep,\n  },\n);\n\nPagination.displayName = \"Pagination\";\nPagination.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rounded: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelBlockModifierProps = {\n  active?: boolean;\n};\n\nexport type PanelBlockProps = HelpersProps & PanelBlockModifierProps;\n\nexport const PanelBlock = forwardRefAs<PanelBlockProps>(\n  ({ active, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-block\", { \"is-active\": active }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelBlock.displayName = \"Panel.Block\";\nPanelBlock.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelHeadingProps = HelpersProps;\n\nexport const PanelHeading = forwardRefAs<PanelHeadingProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-heading\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelHeading.displayName = \"Panel.Heading\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelIconProps = HelpersProps;\n\nexport const PanelIcon = forwardRefAs<PanelIconProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-icon\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"span\" },\n);\n\nPanelIcon.displayName = \"Panel.Icon\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelTabGroupProps = HelpersProps;\n\nexport const PanelTabGroup = forwardRefAs<PanelTabGroupProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-tabs\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelTabGroup.displayName = \"Panel.Tab.Group\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { PanelTabGroup } from \"./panel-tab-group\";\n\nexport type PanelTabModifierProps = {\n  active?: boolean;\n};\n\nexport type PanelTabProps = HelpersProps & PanelTabModifierProps;\n\nexport const PanelTab = Object.assign(\n  forwardRefAs<PanelTabProps>(\n    ({ active, className, ...rest }, ref) => (\n      <Generic\n        className={classNames({ \"is-active\": active }, className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"a\" },\n  ),\n  { Group: PanelTabGroup },\n);\n\nPanelTab.displayName = \"Panel.Tab\";\nPanelTab.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { PanelBlock } from \"./panel-block\";\nimport { PanelHeading } from \"./panel-heading\";\nimport { PanelIcon } from \"./panel-icon\";\nimport { PanelTab } from \"./panel-tab\";\n\nexport type PanelProps = HelpersProps;\n\nexport const Panel = Object.assign(\n  forwardRefAs<PanelProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"panel\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"nav\" },\n  ),\n  {\n    Block: PanelBlock,\n    Heading: PanelHeading,\n    Icon: PanelIcon,\n    Tab: PanelTab,\n  },\n);\n\nPanel.displayName = \"Panel\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Prefer } from \"../../types\";\n\nexport const TAB_GROUP_DEFAULTS = {\n  alignments: [\"centered\", \"right\"] as const,\n  sizes: [\"small\", \"medium\", \"large\"] as const,\n  kinds: [\"boxed\", \"toggle\", \"toggle-rounded\"] as const,\n};\n\nexport interface TabGroupVariablesOverrides {}\n\nexport interface TabGroupVariablesDefaults {\n  alignments: (typeof TAB_GROUP_DEFAULTS[\"alignments\"])[number];\n  sizes: (typeof TAB_GROUP_DEFAULTS[\"sizes\"])[number];\n  kinds: (typeof TAB_GROUP_DEFAULTS[\"kinds\"])[number];\n}\n\nexport type TabGroupVariables = Prefer<\n  TabGroupVariablesOverrides,\n  TabGroupVariablesDefaults\n>;\n\nexport type TabGroupModifierProps = {\n  align?: TabGroupVariables[\"alignments\"];\n  fullwidth?: boolean;\n  /** This is called style on Bulma documentation */\n  kind?: TabGroupVariables[\"kinds\"];\n  size?: TabGroupVariables[\"sizes\"];\n};\n\nexport type TabGroupProps = HelpersProps & TabGroupModifierProps;\n\nexport const TabGroup = forwardRefAs<TabGroupProps>(\n  ({ align, children, className, fullwidth, kind, size, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        \"tabs\",\n        {\n          [`is-${align}`]: align,\n          [`is-${size}`]: size,\n          \"is-fullwidth\": fullwidth,\n          [`is-${kind}`]: kind,\n          \"is-toggle\": kind === \"toggle\" || kind === \"toggle-rounded\",\n          \"is-toggle-rounded\": kind === \"toggle-rounded\",\n        },\n        className,\n      )}\n      children={<ul>{children}</ul>}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nTabGroup.displayName = \"Tab.Group\";\nTabGroup.propTypes = {\n  align: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullwidth: PropTypes.bool,\n  kind: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { TabGroup } from \"./tab-group\";\n\nexport type TabModifierProps = {\n  active?: boolean;\n};\n\nexport type TabProps = HelpersProps & TabModifierProps;\n\nexport const Tab = Object.assign(\n  forwardRefAs<TabProps>(\n    ({ active, ...rest }, ref) => (\n      <li className={classNames({ \"is-active\": active })}>\n        <Generic ref={ref} {...rest} />\n      </li>\n    ),\n    { as: \"a\" },\n  ),\n  { Group: TabGroup },\n);\n\nTab.displayName = \"Tab\";\nTab.propTypes = {\n  active: PropTypes.bool,\n};\n"],"sourceRoot":""}