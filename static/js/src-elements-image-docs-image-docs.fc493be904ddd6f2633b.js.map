{"version":3,"sources":["/Users/dfee/code/rbx/src/elements/image/__docs__/image.docs.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","ForwardRefAsExoticComponentDoc","mapEnumerable","DEFAULTS","Table","Image","ImageContainer","IMAGE_CONTAINER_DEFAULTS","_image__WEBPACK_IMPORTED_MODULE_8__","Container","size","src","src_elements__WEBPACK_IMPORTED_MODULE_7__","bordered","dimmensions","map","i","key","concat","rounded","name","description","_ref2","src_docs_components__WEBPACK_IMPORTED_MODULE_5__","component","docPath","typeName","customize","typeTip","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","ratios","isMDXComponent"],"mappings":"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","file":"static/js/src-elements-image-docs-image-docs.149495ca.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from \"docz\";\nimport {\n  ForwardRefAsExoticComponentDoc,\n  mapEnumerable,\n} from \"src/__docs__/components\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Table } from \"src/elements\";\nimport { Image } from \"../image\";\nimport { ImageContainer, IMAGE_CONTAINER_DEFAULTS } from \"../image-container\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"image\"\n    }}>{`Image`}</h1>\n    <p>{`A container for `}<strong parentName=\"p\">{`responsive images`}</strong>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Image.Container>`}</inlineCode>{` is a precisely `}<strong parentName=\"p\">{`sized container`}</strong>{` so your layout isn't broken because images are loading or missing.`}</p>\n    <Playground __position={0} __code={'<Image.Container size={128}>\\n  <Image src=\\\"https://bulma.io/images/placeholders/128x128.png\\\" />\\n</Image.Container>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      DEFAULTS,\n      Table,\n      Image,\n      ImageContainer,\n      IMAGE_CONTAINER_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Image.Container size={128}>\n    <Image src=\"https://bulma.io/images/placeholders/128x128.png\" mdxType=\"Image\" />\n  </Image.Container>\n    </Playground>\n    <h3 {...{\n      \"id\": \"fixed-square-images-ie-dimmensional\"\n    }}>{`Fixed square images (i.e. dimmensional)`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<Image.Container>`}</inlineCode>{` to contain it's underlying image to a fixed square size, useful for `}<strong parentName=\"p\">{`avatars`}</strong>{`.`}</p>\n    <p><em parentName=\"p\">{`The `}<inlineCode parentName=\"em\">{`<Image.Container>`}</inlineCode>{` sizes that are `}<strong parentName=\"em\">{`numbers`}</strong>{` are dimmensions`}</em></p>\n    <Playground __position={1} __code={'<Table bordered>\\n  <thead>\\n    <tr>\\n      <th>\\n        <code>Image.Container</code> size\\n      </th>\\n      <th>Result</th>\\n      <th>Dimmensions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    {IMAGE_CONTAINER_DEFAULTS.dimmensions.map((size, i) => (\\n      <tr key={i}>\\n        <td>\\n          <code>{size}</code>\\n        </td>\\n        <td>\\n          <Image.Container size={size}>\\n            <Image\\n              src={`https://bulma.io/images/placeholders/${size}x${size}.png`}\\n            />\\n          </Image.Container>\\n        </td>\\n        <td>{size}px sq.</td>\\n      </tr>\\n    ))}\\n  </tbody>\\n</Table>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      DEFAULTS,\n      Table,\n      Image,\n      ImageContainer,\n      IMAGE_CONTAINER_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Table bordered mdxType=\"Table\">\n    <thead>\n      <tr>\n        <th>\n          <code>Image.Container</code> size\n        </th>\n        <th>Result</th>\n        <th>Dimmensions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {IMAGE_CONTAINER_DEFAULTS.dimmensions.map((size, i) => <tr key={i}>\n          <td>\n            <code>{size}</code>\n          </td>\n          <td>\n            <Image.Container size={size}>\n              <Image src={`https://bulma.io/images/placeholders/${size}x${size}.png`} mdxType=\"Image\" />\n            </Image.Container>\n          </td>\n          <td>{size}px sq.</td>\n        </tr>)}\n    </tbody>\n  </Table>\n    </Playground>\n    <h3 {...{\n      \"id\": \"rounded-images\"\n    }}>{`Rounded images`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`rounded`}</inlineCode>{` prop on an `}<inlineCode parentName=\"p\">{`<Image>`}</inlineCode>{` to round it.`}</p>\n    <Playground __position={2} __code={'<Image.Container size={128}>\\n  <Image rounded src=\\\"https://bulma.io/images/placeholders/128x128.png\\\" />\\n</Image.Container>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      DEFAULTS,\n      Table,\n      Image,\n      ImageContainer,\n      IMAGE_CONTAINER_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Image.Container size={128}>\n    <Image rounded src=\"https://bulma.io/images/placeholders/128x128.png\" mdxType=\"Image\" />\n  </Image.Container>\n    </Playground>\n    <h3 {...{\n      \"id\": \"retina-images\"\n    }}>{`Retina images`}</h3>\n    <p>{`Because the `}<inlineCode parentName=\"p\">{`<Image.Container>`}</inlineCode>{` fixes the size of the underlying image, you can use a higher resolution image and contain it down to a smaller size.`}</p>\n    <p>{`For example, if you put an image with dimmensions `}<inlineCode parentName=\"p\">{`256x256`}</inlineCode>{` in an `}<inlineCode parentName=\"p\">{`<Image.Container>`}</inlineCode>{` with size `}<inlineCode parentName=\"p\">{`128`}</inlineCode>{` it'll be resized to `}<inlineCode parentName=\"p\">{`128x128`}</inlineCode>{`.`}</p>\n    <Playground __position={3} __code={'<Image.Container size={128}>\\n  <Image src=\\\"https://bulma.io/images/placeholders/256x256.png\\\" />\\n</Image.Container>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      DEFAULTS,\n      Table,\n      Image,\n      ImageContainer,\n      IMAGE_CONTAINER_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Image.Container size={128}>\n    <Image src=\"https://bulma.io/images/placeholders/256x256.png\" mdxType=\"Image\" />\n  </Image.Container>\n    </Playground>\n    <h3 {...{\n      \"id\": \"responsive-images-ie-ratios\"\n    }}>{`Responsive images (i.e. ratios)`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<Image.Container>`}</inlineCode>{` to contain the underlying image to a known size ratio, useful when you dont' know the exact dimmensions.`}</p>\n    <p><em parentName=\"p\">{`The `}<inlineCode parentName=\"em\">{`<Image.Container>`}</inlineCode>{` sizes that are `}<strong parentName=\"em\">{`strings`}</strong>{` are ratios (responsive sizes)`}</em></p>\n    <p>{`Regardless of whether the child is an `}<inlineCode parentName=\"p\">{`img`}</inlineCode>{` or any other type of component, it will gain the `}<inlineCode parentName=\"p\">{`has-ratio`}</inlineCode>{` class automatically.\nTherefore, `}<inlineCode parentName=\"p\">{`<Image.Container>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<Image>`}</inlineCode>{` can be used to size any type of underlying component using the `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const sizeMap = [\\n    { size: \\'square\\', name: \\'480x480\\', description: \\'square (1 by 1)\\' },\\n    { size: \\'1by1\\', name: \\'480x480\\', description: \\'1 by 1\\' },\\n    { size: \\'5by4\\', name: \\'600x480\\', description: \\'5 by 4\\' },\\n    { size: \\'4by3\\', name: \\'640x480\\', description: \\'4 by 3\\' },\\n    { size: \\'3by2\\', name: \\'480x320\\', description: \\'3 by 2\\' },\\n    { size: \\'5by3\\', name: \\'800x480\\', description: \\'5 by 3\\' },\\n    { size: \\'16by9\\', name: \\'640x360\\', description: \\'16 by 9\\' },\\n    { size: \\'2by1\\', name: \\'640x320\\', description: \\'2 by 1\\' },\\n    { size: \\'3by1\\', name: \\'720x240\\', description: \\'3 by 1\\' },\\n    { size: \\'4by5\\', name: \\'480x600\\', description: \\'4 by 5\\' },\\n    { size: \\'3by4\\', name: \\'480x640\\', description: \\'3 by 4\\' },\\n    { size: \\'2by3\\', name: \\'320x480\\', description: \\'2 by 3\\' },\\n    { size: \\'3by5\\', name: \\'480x800\\', description: \\'3 by 5\\' },\\n    { size: \\'9by16\\', name: \\'360x640\\', description: \\'9 by 16\\' },\\n    { size: \\'1by2\\', name: \\'320x640\\', description: \\'1 by 2\\' },\\n    { size: \\'1by3\\', name: \\'240x720\\', description: \\'1 by 3\\' },\\n  ]\\n  return (\\n    <Table bordered>\\n      <thead>\\n        <tr>\\n          <th>\\n            <code>Image.Container</code> size\\n          </th>\\n          <th>Result</th>\\n          <th>Dimmensions</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        {sizeMap.map(({ size, name, description }) => (\\n          <tr key={size}>\\n            <td>\\n              <code>{size}</code>\\n            </td>\\n            <td>\\n              <Image.Container size={size}>\\n                <Image\\n                  src={`https://bulma.io/images/placeholders/${name}.png`}\\n                />\\n              </Image.Container>\\n            </td>\\n            <td>{description}</td>\\n          </tr>\\n        ))}\\n      </tbody>\\n    </Table>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      DEFAULTS,\n      Table,\n      Image,\n      ImageContainer,\n      IMAGE_CONTAINER_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const sizeMap = [{\n          size: \"square\",\n          name: \"480x480\",\n          description: \"square (1 by 1)\"\n        }, {\n          size: \"1by1\",\n          name: \"480x480\",\n          description: \"1 by 1\"\n        }, {\n          size: \"5by4\",\n          name: \"600x480\",\n          description: \"5 by 4\"\n        }, {\n          size: \"4by3\",\n          name: \"640x480\",\n          description: \"4 by 3\"\n        }, {\n          size: \"3by2\",\n          name: \"480x320\",\n          description: \"3 by 2\"\n        }, {\n          size: \"5by3\",\n          name: \"800x480\",\n          description: \"5 by 3\"\n        }, {\n          size: \"16by9\",\n          name: \"640x360\",\n          description: \"16 by 9\"\n        }, {\n          size: \"2by1\",\n          name: \"640x320\",\n          description: \"2 by 1\"\n        }, {\n          size: \"3by1\",\n          name: \"720x240\",\n          description: \"3 by 1\"\n        }, {\n          size: \"4by5\",\n          name: \"480x600\",\n          description: \"4 by 5\"\n        }, {\n          size: \"3by4\",\n          name: \"480x640\",\n          description: \"3 by 4\"\n        }, {\n          size: \"2by3\",\n          name: \"320x480\",\n          description: \"2 by 3\"\n        }, {\n          size: \"3by5\",\n          name: \"480x800\",\n          description: \"3 by 5\"\n        }, {\n          size: \"9by16\",\n          name: \"360x640\",\n          description: \"9 by 16\"\n        }, {\n          size: \"1by2\",\n          name: \"320x640\",\n          description: \"1 by 2\"\n        }, {\n          size: \"1by3\",\n          name: \"240x720\",\n          description: \"1 by 3\"\n        }];\n        return <Table bordered mdxType=\"Table\">\n    <thead>\n      <tr>\n        <th>\n          <code>Image.Container</code> size\n        </th>\n        <th>Result</th>\n        <th>Dimmensions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {sizeMap.map(({\n              size,\n              name,\n              description\n            }) => <tr key={size}>\n          <td>\n            <code>{size}</code>\n          </td>\n          <td>\n            <Image.Container size={size}>\n              <Image src={`https://bulma.io/images/placeholders/${name}.png`} mdxType=\"Image\" />\n            </Image.Container>\n          </td>\n          <td>{description}</td>\n        </tr>)}\n    </tbody>\n  </Table>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Image} docPath=\"/elements/image\" props={{\n      rounded: {\n        description: \"rounds the image\",\n        typeName: \"boolean\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Image.Container} customize docPath=\"/elements/image\" props={{\n      size: {\n        description: \"sets the dimmension of the contained image\",\n        typeName: \"string | number (literal)\",\n        typeTip: mapEnumerable([...IMAGE_CONTAINER_DEFAULTS.dimmensions, ...IMAGE_CONTAINER_DEFAULTS.ratios])\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}