{"version":3,"sources":["/Users/dfee/code/rbx/src/elements/progress/__docs__/progress.docs.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","ForwardRefAsExoticComponentDoc","mapEnumerable","OptionBlock","DEFAULTS","Table","Progress","PROGRESS_DEFAULTS","_progress__WEBPACK_IMPORTED_MODULE_7__","value","max","colors","map","color","i","src_docs_components__WEBPACK_IMPORTED_MODULE_4__","index","key","sizes","size","name","splice","undefined","_ref2","component","customize","docPath","description","typeName","typeTip","defaultValue","isMDXComponent"],"mappings":"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","file":"static/js/src-elements-progress-docs-progress-docs.e7c35ca3.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from \"docz\";\nimport {\n  ForwardRefAsExoticComponentDoc,\n  mapEnumerable,\n  OptionBlock,\n} from \"src/__docs__/components\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Table } from \"src/elements\";\nimport { Progress, PROGRESS_DEFAULTS } from \"../progress\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"progress-bar\"\n    }}>{`Progress Bar`}</h1>\n    <p>{`Native HTML `}<strong parentName=\"p\">{`progress`}</strong>{` bars.`}</p>\n    <Playground __position={0} __code={'<Progress value={15} max={100} />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Table,\n      Progress,\n      PROGRESS_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Progress value={15} max={100} mdxType=\"Progress\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<Progress>`}</inlineCode>{` to set the color.`}</p>\n    <Playground __position={1} __code={'() =>\\n  DEFAULTS.colors.map((color, i) => (\\n    <OptionBlock props={{ color }} index={i} key={i}>\\n      <Progress color={color} max={100} value={20 + i * 5} />\\n    </OptionBlock>\\n  ))'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Table,\n      Progress,\n      PROGRESS_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => DEFAULTS.colors.map((color, i) => <OptionBlock props={{\n        color\n      }} index={i} key={i} mdxType=\"OptionBlock\">\n        <Progress color={color} max={100} value={20 + i * 5} mdxType=\"Progress\" />\n      </OptionBlock>)}\n    </Playground>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Progress>`}</inlineCode>{` to change the height.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const sizes = PROGRESS_DEFAULTS.sizes.map(size => ({ name: size, size }))\\n  sizes.splice(1, 0, { name: \\'-\\', size: undefined })\\n  return sizes.map(({ name, size }, i) => (\\n    <OptionBlock props={{ size }} index={i} key={i}>\\n      <Progress value={20 + i * 10} max={100} size={size} />\\n    </OptionBlock>\\n  ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Table,\n      Progress,\n      PROGRESS_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const sizes = PROGRESS_DEFAULTS.sizes.map(size => ({\n          name: size,\n          size\n        }));\n        sizes.splice(1, 0, {\n          name: \"-\",\n          size: undefined\n        });\n        return sizes.map(({\n          name,\n          size\n        }, i) => <OptionBlock props={{\n          size\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n    <Progress value={20 + i * 10} max={100} size={size} mdxType=\"Progress\" />\n  </OptionBlock>);\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"indeterminate\"\n    }}>{`Indeterminate`}</h3>\n    <p>{`If you don't provide the `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` prop for `}<inlineCode parentName=\"p\">{`<Progress>`}</inlineCode>{`, then the progress bar will be `}<em parentName=\"p\">{`indeterminate`}</em>{`.\nThis is useful for showing that some progress is going on, but the actual duration is not yet determined.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const permutations = [\\n    { size: \\'small\\', color: \\'primary\\' },\\n    { color: \\'danger\\' },\\n    { size: \\'medium\\', color: \\'dark\\' },\\n    { size: \\'large\\', color: \\'info\\' },\\n  ]\\n  return permutations.map((props, i) => (\\n    <OptionBlock props={props} key={i} index={i}>\\n      <Progress {...props} />\\n    </OptionBlock>\\n  ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Table,\n      Progress,\n      PROGRESS_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const permutations = [{\n          size: 'small',\n          color: 'primary'\n        }, {\n          color: 'danger'\n        }, {\n          size: 'medium',\n          color: 'dark'\n        }, {\n          size: 'large',\n          color: 'info'\n        }];\n        return permutations.map((props, i) => <OptionBlock props={props} key={i} index={i} mdxType=\"OptionBlock\">\n    <Progress {...props} mdxType=\"Progress\" />\n  </OptionBlock>);\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Progress} customize docPath=\"/elements/progress\" props={{\n      color: {\n        description: \"set the progress bar's color\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(DEFAULTS.colors)\n      },\n      max: {\n        defaultValue: 100,\n        description: \"the total completion amount (denominator)\",\n        typeName: \"number\"\n      },\n      size: {\n        description: \"set the progress bar's size\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(PROGRESS_DEFAULTS.sizes)\n      },\n      value: {\n        description: \"the completion amount (numerator)\",\n        typeName: \"number\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}