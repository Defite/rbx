{"version":3,"sources":["/Users/dfee/code/rbx/src/layout/divider/__docs__/divider.docs.mdx","/Users/dfee/code/rbx/src/layout/divider/divider.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","ForwardRefAsExoticComponentDoc","mapEnumerable","OptionBlock","DEFAULTS","Block","Button","Title","Divider","colors","map","color","i","src_docs_components__WEBPACK_IMPORTED_MODULE_4__","index","key","_divider__WEBPACK_IMPORTED_MODULE_7__","vertical","component","customize","docPath","docProvider","children","description","typeName","typeTip","isMDXComponent","forwardRefAs","ref","_classNames","className","rest","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_base__WEBPACK_IMPORTED_MODULE_5__","classNames","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","concat","data-content","as","displayName","propTypes","PropTypes","oneOfType","string","number","bool"],"mappings":"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","file":"static/js/src-layout-divider-docs-divider-docs.9fc00d7e.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from \"docz\";\nimport {\n  ForwardRefAsExoticComponentDoc,\n  mapEnumerable,\n  OptionBlock,\n} from \"src/__docs__/components\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Block, Button, Title } from \"src/elements\";\nimport { Divider } from \"../divider\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"divider\"\n    }}>{`Divider`}</h1>\n    <p>{`Display a vertical or horizontal `}<strong parentName=\"p\">{`divider`}</strong>{` to segment your design.`}</p>\n    <h3 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<Divider>`}</inlineCode>{` to specify the color.`}</p>\n    <Playground __position={0} __code={'() =>\\n  DEFAULTS.colors.map((color, i) => (\\n    <OptionBlock props={{ color }} index={i} key={i}>\\n      <Divider color={color}>OR</Divider>\\n    </OptionBlock>\\n  ))'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Block,\n      Button,\n      Title,\n      Divider\n    }} mdxType=\"Playground\">\n  {() => DEFAULTS.colors.map((color, i) => <OptionBlock props={{\n        color\n      }} index={i} key={i} mdxType=\"OptionBlock\">\n        <Divider color={color} mdxType=\"Divider\">OR</Divider>\n      </OptionBlock>)}\n    </Playground>\n    <h3 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`vertical`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Divider>`}</inlineCode>{` to make it vertical.`}</p>\n    <Playground __position={1} __code={'<Divider vertical>OR</Divider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Block,\n      Button,\n      Title,\n      Divider\n    }} mdxType=\"Playground\">\n  <Divider vertical mdxType=\"Divider\">OR</Divider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Divider} customize docPath=\"https://wikiki.github.io/layout/divider/\" docProvider=\"Bulma-Extensions\" props={{\n      children: {\n        description: \"the content of the divider\",\n        typeName: \"string | number\"\n      },\n      color: {\n        description: \"the color of the divider\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(DEFAULTS.colors)\n      },\n      vertical: {\n        description: \"make the divider vertically positioned\",\n        typeName: \"boolean\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { Variables } from \"../../base/helpers/variables\";\n\nexport type DividerModifierProps = {\n  children?: string | number;\n  color?: Variables[\"colors\"];\n  vertical?: boolean;\n};\n\nexport type DividerProps = HelpersProps & DividerModifierProps;\n\nexport const Divider = forwardRefAs<DividerProps>(\n  ({ children, className, color, vertical, ...rest }, ref) => (\n    <Generic\n      className={classNames(\n        \"is-divider\",\n        {\n          [`is-${color}`]: color,\n          [\"is-divider-vertical\"]: vertical,\n        },\n        className,\n      )}\n      data-content={children}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  {\n    as: \"div\",\n    children: \"\",\n  },\n);\n\nDivider.displayName = \"Divider\";\nDivider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vertical: PropTypes.bool,\n};\n"],"sourceRoot":""}