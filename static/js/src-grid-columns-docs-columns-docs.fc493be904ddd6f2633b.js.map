{"version":3,"sources":["/Users/dfee/code/rbx/src/grid/columns/__docs__/columns.docs.mdx","/Users/dfee/code/rbx/src/grid/columns/column-group.tsx","/Users/dfee/code/rbx/src/grid/columns/column.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","_mdx","components","props","Object","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","assign","mdxType","id","src_elements__WEBPACK_IMPORTED_MODULE_8__","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","ForwardRefAsExoticComponentDoc","mapEnumerable","OptionBlock","DEFAULTS","Generic","Box","Content","Notification","Title","Column","COLUMN_DEFAULTS","COLUMN_GROUP_DEFAULTS","_column__WEBPACK_IMPORTED_MODULE_9__","Group","map","i","key","color","textAlign","parentName","sizes","filter","size","remainder","undefined","src_docs_components__WEBPACK_IMPORTED_MODULE_5__","index","offset","_ref2","className","narrow","style","width","as","subtitle","breakpoint","mobile","tablet","desktop","widescreen","fullhd","name","href","src_base__WEBPACK_IMPORTED_MODULE_7__","textColor","gapless","multiline","gapSizes","gapSize","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","vcentered","centered","component","customize","docPath","description","typeName","typeTip","children","JSON","stringify","replace","breakpoints","touch","isMDXComponent","ColumnGroup","forwardRefAs","ref","_classNames2","rest","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","gapSizeClassNames","classNames","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","concat","keys","value","reduce","acc","cv","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_base__WEBPACK_IMPORTED_MODULE_5__","displayName","_classNames"],"mappings":"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","file":"static/js/src-grid-columns-docs-columns-docs.0530a39e.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from \"docz\";\nimport {\n  ForwardRefAsExoticComponentDoc,\n  mapEnumerable,\n  OptionBlock,\n} from \"src/__docs__/components\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Generic } from \"src/base\";\nimport { Box, Content, Notification, Title } from \"src/elements\";\nimport { Column, COLUMN_DEFAULTS } from \"../column\";\nimport { COLUMN_GROUP_DEFAULTS } from \"../column-group\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"columns\"\n    }}>{`Columns`}</h1>\n    <p>{`The power of Flexbox in a simple interface.`}</p>\n    <Content mdxType=\"Content\">\n  <p>\n    Building a <strong>columns layout</strong> with <strong>rbx</strong> is very\n    simple:\n  </p>\n  <ol>\n    <li>\n      Add a <code>{\"<Column.Group>\"}</code> container\n    </li>\n    <li>\n      Add as many <code>{\"<Column>\"}</code> components as you want\n    </li>\n  </ol>\n  <p>\n    Each <code>{\"<Column>\"}</code> will have an <strong>equal width</strong>, no\n    matter the number of <code>{\"<Column>\"}</code>s.\n  </p>\n    </Content>\n    <Playground __position={1} __code={'<Column.Group>\\n  {[1, 2, 3, 4].map(i => (\\n    <Column key={i}>\\n      <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n        Column {i}\\n      </Notification>\\n    </Column>\\n  ))}\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group>\n    {[1, 2, 3, 4].map(i => <Column key={i} mdxType=\"Column\">\n        <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n          Column {i}\n        </Notification>\n      </Column>)}\n  </Column.Group>\n    </Playground>\n    <h3 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{` with a fractional string (predefined) to size your columns.`}</p>\n    <Playground __position={2} __code={'() =>\\n  COLUMN_DEFAULTS.sizes\\n    .filter(size => typeof size === \\'string\\')\\n    .map((size, i) => {\\n      const remainder =\\n        size === \\'full\\' ? (\\n          undefined\\n        ) : (\\n          <Column key={i}>\\n            <Notification textAlign=\\\"centered\\\">Auto</Notification>\\n          </Column>\\n        )\\n      return (\\n        <OptionBlock props={{ size }} index={i} key={i}>\\n          <Column.Group>\\n            <Column size={size}>\\n              <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n                <code>{size}</code>\\n              </Notification>\\n            </Column>\\n            {remainder}\\n          </Column.Group>\\n        </OptionBlock>\\n      )\\n    })'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => COLUMN_DEFAULTS.sizes.filter(size => typeof size === \"string\").map((size, i) => {\n        const remainder = size === \"full\" ? undefined : <Column key={i} mdxType=\"Column\">\n            <Notification textAlign=\"centered\" mdxType=\"Notification\">\n              Auto\n            </Notification>\n          </Column>;\n        return <OptionBlock props={{\n          size\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n        <Column.Group>\n          <Column size={size} mdxType=\"Column\">\n            <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n              <code>{size}</code>\n            </Notification>\n          </Column>\n          {remainder}\n        </Column.Group>\n      </OptionBlock>;\n      })}\n    </Playground>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{` with a number to build a 12-column system.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const buildRemainder = size => {\\n    const nodes = []\\n    for (let i = size; i < 12; i++) {\\n      nodes.push(\\n        <Column size={1}>\\n          <Notification textAlign=\\\"centered\\\">1</Notification>\\n        </Column>,\\n      )\\n    }\\n    return nodes.length !== 0 ? nodes : undefined\\n  }\\n  return COLUMN_DEFAULTS.sizes\\n    .filter(size => typeof size === \\'number\\')\\n    .map((size, i) => (\\n      <OptionBlock props={{ size }} index={i} key={i}>\\n        <Column.Group>\\n          <Column size={size}>\\n            <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n              <code>{size}</code>\\n            </Notification>\\n          </Column>\\n          {size < 12 && (\\n            <Column size={12 - size}>\\n              <Notification textAlign=\\\"centered\\\">\\n                <code>{12 - size}</code>\\n              </Notification>\\n            </Column>\\n          )}\\n        </Column.Group>\\n      </OptionBlock>\\n    ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const buildRemainder = size => {\n          const nodes = [];\n\n          for (let i = size; i < 12; i++) {\n            nodes.push(<Column size={1} mdxType=\"Column\">\n            <Notification textAlign=\"centered\" mdxType=\"Notification\">1</Notification>\n          </Column>);\n          }\n\n          return nodes.length !== 0 ? nodes : undefined;\n        };\n\n        return COLUMN_DEFAULTS.sizes.filter(size => typeof size === \"number\").map((size, i) => <OptionBlock props={{\n          size\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n      <Column.Group>\n        <Column size={size} mdxType=\"Column\">\n          <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n            <code>{size}</code>\n          </Notification>\n        </Column>\n        {size < 12 && <Column size={12 - size} mdxType=\"Column\">\n            <Notification textAlign=\"centered\" mdxType=\"Notification\">\n              <code>{12 - size}</code>\n            </Notification>\n          </Column>}\n      </Column.Group>\n    </OptionBlock>);\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"offset\"\n    }}>{`Offset`}</h3>\n    <p>{`You can use empty `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{`s to create horizontal space around `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{`s that contain content, or you can use the `}<inlineCode parentName=\"p\">{`offset`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{`.`}</p>\n    <p>{`It takes the same prop values as `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{`'s `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop.`}</p>\n    <Playground __position={4} __code={'() => {\\n  const permutations = [\\n    { size: \\'half\\', offset: \\'one-quarter\\' },\\n    { size: \\'three-fifths\\', offset: \\'one-fifth\\' },\\n    { size: 4, offset: 8 },\\n    { size: 11, offset: 1 },\\n  ]\\n  return permutations.map(({ size, offset }, i) => (\\n    <OptionBlock props={{ size, offset }} index={i} key={i}>\\n      <Column.Group>\\n        <Column size={size} offset={offset}>\\n          <Notification color=\\\"primary\\\">\\n            <code className=\\\"html\\\">size: {size}</code>\\n            <br />\\n            <code className=\\\"html\\\">offset: {offset}</code>\\n          </Notification>\\n        </Column>\\n      </Column.Group>\\n    </OptionBlock>\\n  ))\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => {\n        const permutations = [{\n          size: \"half\",\n          offset: \"one-quarter\"\n        }, {\n          size: \"three-fifths\",\n          offset: \"one-fifth\"\n        }, {\n          size: 4,\n          offset: 8\n        }, {\n          size: 11,\n          offset: 1\n        }];\n        return permutations.map(({\n          size,\n          offset\n        }, i) => <OptionBlock props={{\n          size,\n          offset\n        }} index={i} key={i} mdxType=\"OptionBlock\">\n    <Column.Group>\n      <Column size={size} offset={offset} mdxType=\"Column\">\n        <Notification color=\"primary\" mdxType=\"Notification\">\n          <code className=\"html\">size: {size}</code>\n          <br />\n          <code className=\"html\">offset: {offset}</code>\n        </Notification>\n      </Column>\n    </Column.Group>\n  </OptionBlock>);\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"narrow\"\n    }}>{`Narrow`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`narrow`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{` to only occupy the space needed.`}</p>\n    <Playground __position={5} __code={'<Column.Group>\\n  <Column narrow>\\n    <Box style={{ width: \\'200px\\' }}>\\n      <Title as=\\\"p\\\" size={5}>\\n        Narrow column\\n      </Title>\\n      <Title as=\\\"p\\\" subtitle>\\n        This column is only 200px wide.\\n      </Title>\\n    </Box>\\n  </Column>\\n  <Column>\\n    <Box>\\n      <Title as=\\\"p\\\" size={5}>\\n        Flexible column\\n      </Title>\\n      <Title as=\\\"p\\\" subtitle>\\n        This column will taakae up the remaining space available.\\n      </Title>\\n    </Box>\\n  </Column>\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group>\n    <Column narrow mdxType=\"Column\">\n      <Box style={{\n            width: \"200px\"\n          }} mdxType=\"Box\">\n        <Title as=\"p\" size={5} mdxType=\"Title\">\n          Narrow column\n        </Title>\n        <Title as=\"p\" subtitle mdxType=\"Title\">\n          This column is only 200px wide.\n        </Title>\n      </Box>\n    </Column>\n    <Column mdxType=\"Column\">\n      <Box mdxType=\"Box\">\n        <Title as=\"p\" size={5} mdxType=\"Title\">\n          Flexible column\n        </Title>\n        <Title as=\"p\" subtitle mdxType=\"Title\">\n          This column will taakae up the remaining space available.\n        </Title>\n      </Box>\n    </Column>\n  </Column.Group>\n    </Playground>\n    <h3 {...{\n      \"id\": \"responsiveness\"\n    }}>{`Responsiveness`}</h3>\n    <p>{`By default, columns are only activated from the `}<strong parentName=\"p\">{`tablet`}</strong>{` breakpoint onwards.\nIf you want columns to work on `}<strong parentName=\"p\">{`mobile`}</strong>{` too, set the `}<inlineCode parentName=\"p\">{`breakpoint`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column.Group>`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`\"mobile\"`}</inlineCode>{`.`}</p>\n    <Playground __position={6} __code={'<Column.Group breakpoint=\\\"mobile\\\">\\n  {[1, 2, 3, 4].map(i => (\\n    <Column key={i}>\\n      <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n        {i}\\n      </Notification>\\n    </Column>\\n  ))}\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group breakpoint=\"mobile\">\n    {[1, 2, 3, 4].map(i => <Column key={i} mdxType=\"Column\">\n        <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n          {i}\n        </Notification>\n      </Column>)}\n  </Column.Group>\n    </Playground>\n    <p>{`The breakpoint works with all responsive sizes.\nFor example, if you only want columns to work on `}<strong parentName=\"p\">{`desktop`}</strong>{` and up, set the `}<inlineCode parentName=\"p\">{`breakpoint`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`\"desktop\"`}</inlineCode>{`.`}</p>\n    <p>{`Use the breakpoint-specific prop to set a `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`offset`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`narrow`}</inlineCode>{` containment (as described further in the props documentation below).`}</p>\n    <Playground __position={7} __code={'<Column.Group>\\n  <Column\\n    mobile={{ size: \\'three-quarters\\' }}\\n    tablet={{ size: \\'two-thirds\\' }}\\n    desktop={{ size: \\'half\\' }}\\n    widescreen={{ size: \\'one-third\\' }}\\n    fullhd={{ size: \\'one-quarter\\' }}\\n  >\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      <code>three-quarters-mobile</code>\\n      <br />\\n      <code>two-thirds-tablet</code>\\n      <br />\\n      <code>half-desktop</code>\\n      <br />\\n      <code>one-third-widescreen</code>\\n      <br />\\n      <code>one-quarter-fullhd</code>\\n    </Notification>\\n  </Column>\\n  {[2, 3, 4, 5].map(name => (\\n    <Column key={name}>\\n      <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n        {name}\\n      </Notification>\\n    </Column>\\n  ))}\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group>\n    <Column mobile={{\n          size: \"three-quarters\"\n        }} tablet={{\n          size: \"two-thirds\"\n        }} desktop={{\n          size: \"half\"\n        }} widescreen={{\n          size: \"one-third\"\n        }} fullhd={{\n          size: \"one-quarter\"\n        }} mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n        <code>three-quarters-mobile</code>\n        <br />\n        <code>two-thirds-tablet</code>\n        <br />\n        <code>half-desktop</code>\n        <br />\n        <code>one-third-widescreen</code>\n        <br />\n        <code>one-quarter-fullhd</code>\n      </Notification>\n    </Column>\n    {[2, 3, 4, 5].map(name => <Column key={name} mdxType=\"Column\">\n        <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n          {name}\n        </Notification>\n      </Column>)}\n  </Column.Group>\n    </Playground>\n    <h3 {...{\n      \"id\": \"nesting\"\n    }}>{`Nesting`}</h3>\n    <Content mdxType=\"Content\">\n  <p>\n    You can <strong>nest</strong> <code>{\"<Column>\"}</code>s to have more\n    flexibility in your design. You only need to follow this structure:\n  </p>\n  <ul>\n    <li>\n      <code>{\"<Column.Group>\"}</code>: top-level columns container\n      <ul>\n        <li>\n          <code>{\"<Column>\"}</code>\n          <ul>\n            <li>\n              <code>{\"<Column.Group>\"}</code>: nested columns\n              <ul>\n                <li>\n                  <code>{\"<Column>\"}</code> and so on…\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ul>\n  <p>\n    The difference with{\" \"}\n    <a href=\"https://bulma.io/documentation/columns/options/#multiline\">\n      multiline columns\n    </a>{\" \"}\n    is the <strong>order</strong> in the HTML code: all the{\" \"}\n    <Generic as=\"strong\" textColor=\"info\" mdxType=\"Generic\">\n      blue\n    </Generic>{\" \"}\n    columns appear <em>before</em> the{\" \"}\n    <Generic as=\"strong\" textColor=\"danger\" mdxType=\"Generic\">\n      red\n    </Generic>{\" \"}\n    ones. Resize to a narrower viewport to see the result.\n  </p>\n    </Content>\n    <Playground __position={9} __code={'<Column.Group>\\n  <Column>\\n    <Notification color=\\\"info\\\" textAlign=\\\"centered\\\">\\n      First Column\\n    </Notification>\\n    <Column.Group breakpoint=\\\"mobile\\\">\\n      <Column>\\n        <Notification color=\\\"info\\\" textAlign=\\\"centered\\\">\\n          Nested 1\\n        </Notification>\\n      </Column>\\n      <Column>\\n        <Notification color=\\\"info\\\" textAlign=\\\"centered\\\">\\n          Nested 2\\n        </Notification>\\n      </Column>\\n    </Column.Group>\\n  </Column>\\n  <Column>\\n    <Notification color=\\\"danger\\\" textAlign=\\\"centered\\\">\\n      Second Column\\n    </Notification>\\n    <Column.Group breakpoint=\\\"mobile\\\">\\n      <Column size=\\\"one-quarter\\\">\\n        <Notification color=\\\"danger\\\" textAlign=\\\"centered\\\">\\n          25%\\n        </Notification>\\n      </Column>\\n      <Column>\\n        <Notification color=\\\"danger\\\" textAlign=\\\"centered\\\">\\n          Auto\\n        </Notification>\\n      </Column>\\n      <Column>\\n        <Notification color=\\\"danger\\\" textAlign=\\\"centered\\\">\\n          Auto\\n        </Notification>\\n      </Column>\\n    </Column.Group>\\n  </Column>\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group>\n    <Column mdxType=\"Column\">\n      <Notification color=\"info\" textAlign=\"centered\" mdxType=\"Notification\">\n        First Column\n      </Notification>\n      <Column.Group breakpoint=\"mobile\">\n        <Column mdxType=\"Column\">\n          <Notification color=\"info\" textAlign=\"centered\" mdxType=\"Notification\">Nested 1</Notification>\n        </Column>\n        <Column mdxType=\"Column\">\n          <Notification color=\"info\" textAlign=\"centered\" mdxType=\"Notification\">Nested 2</Notification>\n        </Column>\n      </Column.Group>\n    </Column>\n        <Column mdxType=\"Column\">\n  <Notification color=\"danger\" textAlign=\"centered\" mdxType=\"Notification\">\n    Second Column\n  </Notification>\n  <Column.Group breakpoint=\"mobile\">\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"danger\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n    <Column mdxType=\"Column\">\n      <Notification color=\"danger\" textAlign=\"centered\" mdxType=\"Notification\">Auto</Notification>\n    </Column>\n    <Column mdxType=\"Column\">\n      <Notification color=\"danger\" textAlign=\"centered\" mdxType=\"Notification\">Auto</Notification>\n    </Column>\n  </Column.Group>\n        </Column>\n  </Column.Group>\n    </Playground>\n    <h3 {...{\n      \"id\": \"gapless\"\n    }}>{`Gapless`}</h3>\n    <p>{`By default, each gap is `}<inlineCode parentName=\"p\">{`0.75rem`}</inlineCode>{` as defined by `}<strong parentName=\"p\">{`Bulma`}</strong>{`.`}</p>\n    <p>{`The gap is placed on `}<em parentName=\"p\">{`each side`}</em>{` of the column, so the gap between two adjacent columns is double that – or `}<inlineCode parentName=\"p\">{`1.5rem`}</inlineCode>{`.`}</p>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`gapless`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column.Group>`}</inlineCode>{` to remove the space between columns.`}</p>\n    <Playground __position={10} __code={'<Column.Group gapless>\\n  {[\\'First\\', \\'Second\\', \\'Third\\', \\'Fourth\\'].map(name => (\\n    <Column key={name}>\\n      <Notification color=\\\"primary\\\">{name} Col</Notification>\\n    </Column>\\n  ))}\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group gapless>\n    {[\"First\", \"Second\", \"Third\", \"Fourth\"].map(name => <Column key={name} mdxType=\"Column\">\n        <Notification color=\"primary\" mdxType=\"Notification\">{name} Col</Notification>\n      </Column>)}\n  </Column.Group>\n    </Playground>\n    <p>{`Use it with the `}<inlineCode parentName=\"p\">{`multiline`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column.Group>`}</inlineCode>{` to continue to the next row.`}</p>\n    <Playground __position={11} __code={'<Column.Group multiline gapless>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"half\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      50%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column>\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      Auto\\n    </Notification>\\n  </Column>\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group multiline gapless>\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n        <Column size=\"half\" mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">50%</Notification>\n        </Column>\n        <Column size=\"one-quarter\" mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n        </Column>\n        <Column size=\"one-quarter\" mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n        </Column>\n\n        <Column size=\"one-quarter\" mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n        </Column>\n        <Column mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">Auto</Notification>\n        </Column>\n  </Column.Group>\n    </Playground>\n    <h3 {...{\n      \"id\": \"variable-gap\"\n    }}>{`Variable gap`}</h3>\n    <Content mdxType=\"Content\">\n  <p>\n    Use the `gapSize` prop of <code>{\"<Column.Group>\"}</code> to specify the\n    gap-size around the container.\n  </p>\n  <ul>\n    <li>\n      <code>{\"gapSize={0}\"}</code> will remove any gap (similar to the{\" \"}\n      <code>gapless</code> prop)\n    </li>\n    <li>\n      <code>{\"gapSize={3}\"}</code> is the default size specified by Bulma, and\n      is equivalent to the <code>0.75rem</code> value\n    </li>\n    <li>\n      <code>{\"gapSize={8}\"}</code> is the maximum gap of <code>2rem</code>\n    </li>\n  </ul>\n    </Content>\n    <Playground __position={13} __code={'() =>\\n  COLUMN_GROUP_DEFAULTS.gapSizes.map((gapSize, i) => (\\n    <OptionBlock props={{ gapSize }} index={i} key={i}>\\n      <Column.Group gapSize={gapSize}>\\n        <Column size={4}>\\n          <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n            gapSize\\n          </Notification>\\n        </Column>\\n        <Column size={8}>\\n          <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n            {gapSize}\\n          </Notification>\\n        </Column>\\n      </Column.Group>\\n    </OptionBlock>\\n  ))'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  {() => COLUMN_GROUP_DEFAULTS.gapSizes.map((gapSize, i) => <OptionBlock props={{\n        gapSize\n      }} index={i} key={i} mdxType=\"OptionBlock\">\n        <Column.Group gapSize={gapSize}>\n          <Column size={4} mdxType=\"Column\">\n            <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n              gapSize\n            </Notification>\n          </Column>\n          <Column size={8} mdxType=\"Column\">\n            <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n              {gapSize}\n            </Notification>\n          </Column>\n        </Column.Group>\n      </OptionBlock>)}\n    </Playground>\n    <p>{`You can also define a `}<inlineCode parentName=\"p\">{`gapSize`}</inlineCode>{` for each breakpoint using the `}<inlineCode parentName=\"p\">{`ColumnGroupBreakpointOptions`}</inlineCode>{` described below.`}</p>\n    <Playground __position={14} __code={'<Column.Group\\n  mobile={{ gapSize: 1 }}\\n  mobile={{ tablet: 0 }}\\n  mobile={{ desktop: 3 }}\\n  mobile={{ widescreen: 8 }}\\n  mobile={{ fullhd: 2 }}\\n>\\n  {[1, 2, 3, 4, 5, 6].map(i => (\\n    <Column key={i}>\\n      <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n        Col\\n      </Notification>\\n    </Column>\\n  ))}\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group mobile={{\n        gapSize: 1\n      }} mobile={{\n        tablet: 0\n      }} mobile={{\n        desktop: 3\n      }} mobile={{\n        widescreen: 8\n      }} mobile={{\n        fullhd: 2\n      }}>\n    {[1, 2, 3, 4, 5, 6].map(i => <Column key={i} mdxType=\"Column\">\n        <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n          Col\n        </Notification>\n      </Column>)}\n  </Column.Group>\n    </Playground>\n    <h3 {...{\n      \"id\": \"vertical-alignment\"\n    }}>{`Vertical alignment`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`vcentered`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column.Group>`}</inlineCode>{` to align your `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{`s vertically.`}</p>\n    <Playground __position={15} __code={'<Column.Group vcentered>\\n  <Column>\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      First col\\n    </Notification>\\n  </Column>\\n  <Column>\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      Second column with more content. This is so you can see the vertical\\n      alignment.\\n    </Notification>\\n  </Column>\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group vcentered>\n    <Column mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n        First col\n      </Notification>\n    </Column>\n        <Column mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n    Second column with more content. This is so you can see the vertical alignment.\n  </Notification>\n        </Column>\n  </Column.Group>\n    </Playground>\n    <h3 {...{\n      \"id\": \"multiline\"\n    }}>{`Multiline`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`multiline`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column.Group>`}</inlineCode>{` to wrap more columns than would normally fit on a single row.`}</p>\n    <Playground __position={16} __code={'<Column.Group vcentered multiline>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"half\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      50%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n\\n  <Column size=\\\"one-quarter\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      25%\\n    </Notification>\\n  </Column>\\n  <Column>\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      Auto\\n    </Notification>\\n  </Column>\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group vcentered multiline>\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n    <Column size=\"one-quarter\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n    </Column>\n        <Column size=\"half\" mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">50%</Notification>\n        </Column>\n        <Column size=\"one-quarter\" mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n        </Column>\n        <Column size=\"one-quarter\" mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n        </Column>\n\n        <Column size=\"one-quarter\" mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">25%</Notification>\n        </Column>\n        <Column mdxType=\"Column\">\n  <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">Auto</Notification>\n        </Column>\n  </Column.Group>\n    </Playground>\n    <h3 {...{\n      \"id\": \"centered\"\n    }}>{`Centered`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`centered`}</inlineCode>{` prop on `}<inlineCode parentName=\"p\">{`<Column.Group>`}</inlineCode>{` to center its `}<inlineCode parentName=\"p\">{`<Column>`}</inlineCode>{` contents.`}</p>\n    <Playground __position={17} __code={'<Column.Group centered>\\n  <Column size=\\\"half\\\">\\n    <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n      50%\\n    </Notification>\\n  </Column>\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group centered>\n    <Column size=\"half\" mdxType=\"Column\">\n      <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n        50%\n      </Notification>\n    </Column>\n  </Column.Group>\n    </Playground>\n    <p>{`Use with the `}<inlineCode parentName=\"p\">{`multiline`}</inlineCode>{` prop of `}<inlineCode parentName=\"p\">{`<Column.Group>`}</inlineCode>{` to create a flexible, centered list.`}</p>\n    <p>{`Resize the playground below to see it in action.`}</p>\n    <Playground __position={18} __code={'<Column.Group multiline centered>\\n  {[\\'first\\', \\'second\\', \\'third\\', \\'fourth\\', \\'fifth\\'].map(i => (\\n    <Column narrow key={i}>\\n      <Notification color=\\\"primary\\\" textAlign=\\\"centered\\\">\\n        {i}\\n      </Notification>\\n    </Column>\\n  ))}\\n</Column.Group>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      OptionBlock,\n      DEFAULTS,\n      Generic,\n      Box,\n      Content,\n      Notification,\n      Title,\n      Column,\n      COLUMN_DEFAULTS,\n      COLUMN_GROUP_DEFAULTS\n    }} mdxType=\"Playground\">\n  <Column.Group multiline centered>\n    {[\"first\", \"second\", \"third\", \"fourth\", \"fifth\"].map(i => <Column narrow key={i} mdxType=\"Column\">\n        <Notification color=\"primary\" textAlign=\"centered\" mdxType=\"Notification\">\n          {i}\n        </Notification>\n      </Column>)}\n  </Column.Group>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Column} customize docPath=\"/columns\" props={{\n      desktop: {\n        description: \"options when the screen size is between 1024px and 1215px\",\n        typeName: \"ColumnBreakpointOptions\"\n      },\n      fullhd: {\n        description: \"options when the screen size is above 1408px\",\n        typeName: \"ColumnBreakpointOptions\"\n      },\n      mobile: {\n        description: \"options when the screen size is up to 768px wide\",\n        typeName: \"ColumnBreakpointOptions\"\n      },\n      narrow: {\n        description: \"only take up the needed space\",\n        typeName: \"boolean\"\n      },\n      offset: {\n        description: \"creates horizontal space before column\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(COLUMN_DEFAULTS.sizes)\n      },\n      size: {\n        description: \"determines the relative size of the column\",\n        typeName: \"string | number (literal)\",\n        typeTip: mapEnumerable(COLUMN_DEFAULTS.sizes)\n      },\n      tablet: {\n        description: \"options when the screen size is between 769px and 1023px\",\n        typeName: \"ColumnBreakpointOptions\"\n      },\n      widescreen: {\n        description: \"options when the screen size is between 1216px and 1407px\",\n        typeName: \"ColumnBreakpointOptions\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <Notification mdxType=\"Notification\">\n  <Title as=\"h5\" size={5} mdxType=\"Title\">ColumnBreakpointOptions Object</Title>\n  <div>\n    <p>\n      The <strong>ColumnBreakpointOptions Object</strong> has the following\n      structure:\n    </p>\n    <pre children={JSON.stringify({\n          narrow: \"boolean\",\n          offset: mapEnumerable(COLUMN_DEFAULTS.sizes).replace(/[\"]/g, \"'\"),\n          size: mapEnumerable(COLUMN_DEFAULTS.sizes).replace(/[\"]/g, \"'\")\n        }, null, 2).replace(/[\"]/g, \"\")} />\n    <br />\n  </div>\n      <p>\n  <code>narrow</code> specifies – for a specific breakpoint – whether the column\n  should only take up as much space as it needs.\n      </p>\n  <br />\n  <p>\n    <code>offset</code> specifies – for a specific breakpoint – how much the\n    column should be offset from the left.\n  </p>\n  <br />\n  <p>\n    <code>size</code> specifies – for a specific breakpoint – the relative size\n    of the column.\n  </p>\n    </Notification>\n    <ForwardRefAsExoticComponentDoc component={Column.Group} customize docPath=\"/columns\" props={{\n      breakpoint: {\n        description: \"the screen size at which the columns become stacked\",\n        typeName: \"string (literal)\",\n        typeTip: mapEnumerable(DEFAULTS.breakpoints)\n      },\n      centered: {\n        description: \"the columns will be horizontally centered\",\n        typeName: \"boolean\"\n      },\n      desktop: {\n        description: \"options when the screen size is between 1024px and 1215px\",\n        typeName: \"ColumnGroupBreakpointOptions\"\n      },\n      fullhd: {\n        description: \"options when the screen size is above 1408px\",\n        typeName: \"ColumnGroupBreakpointOptions\"\n      },\n      gapless: {\n        description: \"remove spacing between columns\",\n        typeName: \"boolean\"\n      },\n      gapSize: {\n        description: \"the gap-size between columns\",\n        typeName: \"number (literal)\",\n        typeTip: mapEnumerable(COLUMN_GROUP_DEFAULTS.gapSizes)\n      },\n      mobile: {\n        description: \"options when the screen size is up to 768px wide\",\n        typeName: \"ColumnGroupBreakpointOptions\"\n      },\n      multiline: {\n        description: \"columns may flow onto more than one line\",\n        typeName: \"boolean\"\n      },\n      tablet: {\n        description: \"options when the screen size is between 769px and 1023px\",\n        typeName: \"ColumnGroupBreakpointOptions\"\n      },\n      widescreen: {\n        description: \"sizing when the screen size is between 1216px and 1407px\",\n        typeName: \"ColumnGroupBreakpointOptions\"\n      },\n      touch: {\n        description: \"sizing when the screen is mobile or tablet\",\n        typeName: \"ColumnGroupBreakpointOptions\"\n      },\n      vcentered: {\n        description: \"the columns will be vertically centered\",\n        typeName: \"boolean\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <Notification mdxType=\"Notification\">\n  <Title as=\"h5\" size={5} mdxType=\"Title\">ColumnGroupBreakpointOptions Object</Title>\n  <div>\n    <p>\n      The <strong>ColumnGroupBreakpointOptions Object</strong> has the following\n      structure:\n    </p>\n    <pre children={JSON.stringify({\n          gapSize: mapEnumerable(COLUMN_GROUP_DEFAULTS.gapSizes).replace(/[\"]/g, \"'\")\n        }, null, 2).replace(/[\"]/g, \"\")} />\n    <br />\n  </div>\n  <p>\n    <code>gapSize</code> specifies – for a specific breakpoint – the gap-size\n    between columns.\n  </p>\n    </Notification>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { DEFAULTS, Variables } from \"../../base/helpers/variables\";\nimport { Prefer } from \"../../types\";\n\nexport const COLUMN_GROUP_DEFAULTS = {\n  gapSizes: [0, 1, 2, 3, 4, 5, 6, 7, 8] as const,\n};\n\nexport interface ColumnGroupVariablesOverrides {}\n\nexport interface ColumnGroupVariablesDefaults {\n  gapSizes: (typeof COLUMN_GROUP_DEFAULTS[\"gapSizes\"])[number];\n}\n\nexport type ColumnGroupVariables = Prefer<\n  ColumnGroupVariablesOverrides,\n  ColumnGroupVariablesDefaults\n>;\n\nexport type ColumnGroupBreakpointOptions = {\n  /**\n   * The column gap size for a breakapoint\n   */\n  gapSize?: ColumnGroupVariables[\"gapSizes\"];\n};\n\ntype ColumnGroupModifierProps = {\n  [B in Variables[\"breakpoints\"]]?: ColumnGroupBreakpointOptions;\n} & {\n  /**\n   * Breakpoint where columns become stacked.\n   */\n  breakpoint?: Variables[\"breakpoints\"];\n  /**\n   * `true` you want the columns inside to be horizontaly centered\n   */\n  centered?: boolean;\n  /**\n   * `true` to remove space between columns\n   */\n  gapless?: boolean;\n  /**\n   * `true` if you want to use more than one line if you add more column\n   * elements that would fit in a single row.\n   */\n  multiline?: boolean;\n  /**\n   * `true` if you want the columns to be vertically centered.\n   */\n  vcentered?: boolean;\n} & ColumnGroupBreakpointOptions;\n\nexport type ColumnGroupProps = HelpersProps & ColumnGroupModifierProps;\n\nexport const ColumnGroup = forwardRefAs<ColumnGroupProps>(\n  (\n    {\n      className,\n      breakpoint,\n      centered,\n      desktop,\n      fullhd,\n      gapless,\n      gapSize,\n      mobile,\n      multiline,\n      tablet,\n      widescreen,\n      touch,\n      vcentered,\n      ...rest\n    },\n    ref,\n  ) => {\n    const breakpoints = {\n      desktop,\n      fullhd,\n      mobile,\n      tablet,\n      touch,\n      widescreen,\n    };\n\n    const gapSizeClassNames = classNames(\n      { [`is-${gapSize}`]: typeof gapSize === \"number\" },\n      Object.keys(breakpoints)\n        .map(key => {\n          const value = breakpoints[key as Variables[\"breakpoints\"]];\n\n          return value === undefined\n            ? {}\n            : { [`is-${value.gapSize}-${key}`]: value.gapSize !== undefined };\n        })\n        .reduce((acc, cv) => ({ ...acc, ...cv }), {}),\n    );\n\n    return (\n      <Generic\n        className={classNames(\n          \"columns\",\n          {\n            [`is-${breakpoint}`]: breakpoint,\n            \"is-centered\": centered,\n            \"is-gapless\": gapless,\n            \"is-multiline\": multiline,\n            \"is-variable \": gapSizeClassNames !== \"\",\n            \"is-vcentered\": vcentered,\n          },\n          gapSizeClassNames,\n          className,\n        )}\n        ref={ref}\n        {...rest}\n      />\n    );\n  },\n  { as: \"div\" },\n);\n\nColumnGroup.displayName = \"Column.Group\";\n\nconst ColumnGroupBreakpointPropTypes = {\n  gapSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\n/**\n * Note: the default Breakpoints are typechecked (as it'll cover 99%+ of users)\n * We can't validate custom Breakpoints with PropTypes (though they are checked\n * by TypeScript).\n * ∴ Custom breakpoint's won't be checked against ColumnGroupBreakpointPropTypes\n */\nColumnGroup.propTypes = {\n  ...DEFAULTS.breakpoints\n    .map(breakpoint => ({\n      [breakpoint]: PropTypes.shape(ColumnGroupBreakpointPropTypes),\n    }))\n    .reduce((acc, cv) => ({ ...acc, ...cv }), {}),\n  ...ColumnGroupBreakpointPropTypes,\n  breakpoint: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  centered: PropTypes.bool,\n  gapless: PropTypes.bool,\n  multiline: PropTypes.bool,\n  vcentered: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { DEFAULTS, Variables } from \"../../base/helpers/variables\";\nimport { Prefer } from \"../../types\";\nimport { ColumnGroup } from \"./column-group\";\n\nexport const COLUMN_DEFAULTS = {\n  sizes: [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    \"one-third\",\n    \"two-thirds\",\n    \"one-quarter\",\n    \"half\",\n    \"three-quarters\",\n    \"one-fifth\",\n    \"two-fifths\",\n    \"three-fifths\",\n    \"four-fifths\",\n    \"full\",\n  ] as const,\n};\n\nexport interface ColumnVariablesOverrides {}\n\nexport interface ColumnVariablesDefaults {\n  sizes: (typeof COLUMN_DEFAULTS[\"sizes\"])[number];\n}\n\nexport type ColumnVariables = Prefer<\n  ColumnVariablesOverrides,\n  ColumnVariablesDefaults\n>;\n\nexport type ColumnBreakpointOptions = {\n  /**\n   * If you want a column to only take the space it needs, use the narrow\n   * modifier. The other column(s) will fill up the remaining space.\n   */\n  narrow?: boolean;\n  /**\n   * Create horizontal space around Column elements\n   */\n  offset?: ColumnVariables[\"sizes\"];\n  /**\n   * The size of the column. the maximun size of a row is 12\n   */\n  size?: ColumnVariables[\"sizes\"];\n};\n\nexport type ColumnModifierProps = {\n  [B in Variables[\"breakpoints\"]]?: ColumnBreakpointOptions\n} &\n  ColumnBreakpointOptions;\n\nexport type ColumnProps = HelpersProps & ColumnModifierProps;\n\nexport const Column = Object.assign(\n  forwardRefAs<ColumnProps>(\n    (\n      {\n        className,\n        mobile,\n        tablet,\n        desktop,\n        widescreen,\n        fullhd,\n        touch,\n        narrow,\n        offset,\n        size,\n        ...rest\n      },\n      ref,\n    ) => {\n      const breakpoints = {\n        desktop,\n        fullhd,\n        mobile,\n        tablet,\n        touch,\n        widescreen,\n      };\n\n      return (\n        <Generic\n          className={classNames(\n            \"column\",\n            {\n              [`is-${size}`]: size !== undefined,\n              [`is-offset-${offset}`]: offset !== undefined,\n              \"is-narrow\": narrow,\n            },\n            Object.keys(breakpoints)\n              .map(breakpoint => {\n                const value =\n                  breakpoints[breakpoint as Variables[\"breakpoints\"]];\n\n                return value === undefined\n                  ? {}\n                  : {\n                      [`is-${value.size}-${breakpoint}`]:\n                        value.size !== undefined,\n                      [`is-narrow-${breakpoint}`]: value.narrow,\n                      [`is-offset-${value.offset}-${breakpoint}`]:\n                        value.offset !== undefined,\n                    };\n              })\n              .reduce((acc, cv) => ({ ...acc, ...cv }), {}),\n            className,\n          )}\n          ref={ref}\n          {...rest}\n        />\n      );\n    },\n    { as: \"div\" },\n  ),\n  { Group: ColumnGroup },\n);\n\nColumn.displayName = \"Column\";\n\nconst ColumnSizeModifierPropTypes = {\n  narrow: PropTypes.bool,\n  offset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\n/**\n * Note: the default Breakpoints are typechecked (as it'll cover 99%+ of users)\n * We can't validate custom Breakpoints with PropTypes (though they are checked\n * by TypeScript).\n * ∴ Custom breakpoint's won't be checked against ColumnSizeModifierPropTypes\n */\nColumn.propTypes = {\n  ...DEFAULTS.breakpoints\n    .map(breakpoint => ({\n      [breakpoint]: PropTypes.shape(ColumnSizeModifierPropTypes),\n    }))\n    .reduce((acc, cv) => ({ ...acc, ...cv }), {}),\n  ...ColumnSizeModifierPropTypes,\n};\n"],"sourceRoot":""}