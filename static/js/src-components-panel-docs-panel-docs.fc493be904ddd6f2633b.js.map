{"version":3,"sources":["/Users/dfee/code/rbx/src/components/panel/__docs__/panel.docs.mdx","/Users/dfee/code/rbx/src/components/panel/panel-block.tsx","/Users/dfee/code/rbx/src/components/panel/panel-heading.tsx","/Users/dfee/code/rbx/src/components/panel/panel-icon.tsx","/Users/dfee/code/rbx/src/components/panel/panel-tab-group.tsx","/Users/dfee/code/rbx/src/components/panel/panel-tab.tsx","/Users/dfee/code/rbx/src/components/panel/panel.tsx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dfee_code_rbx_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","src_elements__WEBPACK_IMPORTED_MODULE_7__","docz__WEBPACK_IMPORTED_MODULE_5__","__position","__code","__scope","this","faBook","faCodeBranch","faSearch","FontAwesomeIcon","Playground","ForwardRefAsExoticComponentDoc","mapEnumerable","Button","Checkbox","Content","Control","Icon","Input","DEFAULTS","Panel","_panel__WEBPACK_IMPORTED_MODULE_9__","Heading","Block","iconLeft","size","type","placeholder","align","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_4__","icon","Tab","Group","active","as","fullwidth","color","outlined","src_docs_components__WEBPACK_IMPORTED_MODULE_6__","component","docPath","description","typeName","isMDXComponent","PanelBlock","forwardRefAs","ref","className","rest","objectWithoutProperties","react_default","a","createElement","base","classNames","is-active","displayName","propTypes","PropTypes","bool","PanelHeading","PanelIcon","PanelTabGroup","PanelTab"],"mappings":"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","file":"static/js/src-components-panel-docs-panel-docs.8c99c59a.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport {\n  faBook,\n  faCodeBranch,\n  faSearch\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Playground } from \"docz\";\nimport {\n  ForwardRefAsExoticComponentDoc,\n  mapEnumerable\n} from \"src/__docs__/components\";\nimport { Button, Checkbox, Content, Control, Icon, Input } from \"src/elements\";\nimport { DEFAULTS } from \"src/base/helpers/variables\";\nimport { Panel } from \"../panel\";\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"panel\"\n    }}>{`Panel`}</h1>\n    <p>{`A composable `}<strong parentName=\"p\">{`panel`}</strong>{`, for compact controls`}</p>\n    <Content mdxType=\"Content\">\n  <p>\n    The <code>{\"<Panel>\"}</code> is container for several types:\n  </p>\n  <ul>\n    <li>\n      <code>{\"<Panel.Heading>\"}</code> as the first child\n    </li>\n    <li>\n      <code>{\"<Panel.Tab.Group>\"}</code> for navigation\n    </li>\n    <li>\n      <code>{\"<Panel.Block>\"}</code> which can contain other elements, like:\n      <ul>\n        <li>\n          <code>{\"<Control>\"}</code>\n        </li>\n        <li>\n          <code>{\"<Input>\"}</code>\n        </li>\n        <li>\n          <code>{\"<Button>\"}</code>\n        </li>\n        <li>\n          <code>{\"<Panel.Icon>\"}</code>\n        </li>\n      </ul>\n    </li>\n  </ul>\n  <p>\n    The <code>{\"<Panel.Block>\"}</code> can be an anchor tag <code>{\"<a>\"}</code>{\" \"}\n    or a label <code>{\"<label>\"}</code> with a checkbox inside.\n  </p>\n    </Content>\n    <Playground __position={1} __code={'<Panel>\\n  <Panel.Heading>repositories</Panel.Heading>\\n  <Panel.Block>\\n    <Control iconLeft>\\n      <Input size=\\\"small\\\" type=\\\"text\\\" placeholder=\\\"search\\\" />\\n      <Icon size=\\\"small\\\" align=\\\"left\\\">\\n        <FontAwesomeIcon icon={faSearch} />\\n      </Icon>\\n    </Control>\\n  </Panel.Block>\\n  <Panel.Tab.Group>\\n    <Panel.Tab active>all</Panel.Tab>\\n    <Panel.Tab>public</Panel.Tab>\\n    <Panel.Tab>private</Panel.Tab>\\n    <Panel.Tab>sources</Panel.Tab>\\n    <Panel.Tab>forks</Panel.Tab>\\n  </Panel.Tab.Group>\\n  <Panel.Block as=\\\"a\\\" active>\\n    <Panel.Icon>\\n      <FontAwesomeIcon icon={faBook} />\\n    </Panel.Icon>\\n    bulma\\n  </Panel.Block>\\n  <Panel.Block>\\n    <Panel.Icon>\\n      <FontAwesomeIcon icon={faBook} />\\n    </Panel.Icon>\\n    marksheet\\n  </Panel.Block>\\n  <Panel.Block>\\n    <Panel.Icon>\\n      <FontAwesomeIcon icon={faBook} />\\n    </Panel.Icon>\\n    minireset.css\\n  </Panel.Block>\\n  <Panel.Block>\\n    <Panel.Icon>\\n      <FontAwesomeIcon icon={faBook} />\\n    </Panel.Icon>\\n    jgthms.github.io\\n  </Panel.Block>\\n  <Panel.Block>\\n    <Panel.Icon>\\n      <FontAwesomeIcon icon={faCodeBranch} />\\n    </Panel.Icon>\\n    daniellowtw/infboard\\n  </Panel.Block>\\n  <Panel.Block>\\n    <Panel.Icon>\\n      <FontAwesomeIcon icon={faCodeBranch} />\\n    </Panel.Icon>\\n    mojs\\n  </Panel.Block>\\n  <Panel.Block as=\\\"label\\\">\\n    <Checkbox />\\n    remember me\\n  </Panel.Block>\\n  <Panel.Block>\\n    <Button fullwidth color=\\\"link\\\" outlined>\\n      reset all filters\\n    </Button>\\n  </Panel.Block>\\n</Panel>'} __scope={{\n      props: this ? this.props : props,\n      faBook,\n      faCodeBranch,\n      faSearch,\n      FontAwesomeIcon,\n      Playground,\n      ForwardRefAsExoticComponentDoc,\n      mapEnumerable,\n      Button,\n      Checkbox,\n      Content,\n      Control,\n      Icon,\n      Input,\n      DEFAULTS,\n      Panel\n    }} mdxType=\"Playground\">\n  <Panel mdxType=\"Panel\">\n    <Panel.Heading>repositories</Panel.Heading>\n    <Panel.Block>\n      <Control iconLeft mdxType=\"Control\">\n        <Input size=\"small\" type=\"text\" placeholder=\"search\" mdxType=\"Input\" />\n        <Icon size=\"small\" align=\"left\" mdxType=\"Icon\">\n          <FontAwesomeIcon icon={faSearch} mdxType=\"FontAwesomeIcon\" />\n        </Icon>\n      </Control>\n    </Panel.Block>\n    <Panel.Tab.Group>\n      <Panel.Tab active>all</Panel.Tab>\n      <Panel.Tab>public</Panel.Tab>\n      <Panel.Tab>private</Panel.Tab>\n      <Panel.Tab>sources</Panel.Tab>\n      <Panel.Tab>forks</Panel.Tab>\n    </Panel.Tab.Group>\n    <Panel.Block as=\"a\" active>\n      <Panel.Icon>\n        <FontAwesomeIcon icon={faBook} mdxType=\"FontAwesomeIcon\" />\n      </Panel.Icon>\n      bulma\n    </Panel.Block>\n    <Panel.Block>\n      <Panel.Icon>\n        <FontAwesomeIcon icon={faBook} mdxType=\"FontAwesomeIcon\" />\n      </Panel.Icon>\n      marksheet\n    </Panel.Block>\n    <Panel.Block>\n      <Panel.Icon>\n        <FontAwesomeIcon icon={faBook} mdxType=\"FontAwesomeIcon\" />\n      </Panel.Icon>\n      minireset.css\n    </Panel.Block>\n    <Panel.Block>\n      <Panel.Icon>\n        <FontAwesomeIcon icon={faBook} mdxType=\"FontAwesomeIcon\" />\n      </Panel.Icon>\n      jgthms.github.io\n    </Panel.Block>\n    <Panel.Block>\n      <Panel.Icon>\n        <FontAwesomeIcon icon={faCodeBranch} mdxType=\"FontAwesomeIcon\" />\n      </Panel.Icon>\n      daniellowtw/infboard\n    </Panel.Block>\n    <Panel.Block>\n      <Panel.Icon>\n        <FontAwesomeIcon icon={faCodeBranch} mdxType=\"FontAwesomeIcon\" />\n      </Panel.Icon>\n      mojs\n    </Panel.Block>\n    <Panel.Block as=\"label\">\n      <Checkbox mdxType=\"Checkbox\" />\n      remember me\n    </Panel.Block>\n    <Panel.Block>\n      <Button fullwidth color=\"link\" outlined mdxType=\"Button\">\n        reset all filters\n      </Button>\n    </Panel.Block>\n  </Panel>\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ForwardRefAsExoticComponentDoc component={Panel} docPath=\"/components/panel\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Panel.Block} docPath=\"/components/panel\" props={{\n      active: {\n        description: \"mark the block as currently active\",\n        typeName: \"boolean\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Panel.Heading} docPath=\"/components/panel\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Panel.Icon} docPath=\"/components/panel\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Panel.Tab} docPath=\"/components/panel\" props={{\n      active: {\n        description: \"mark the tab as currently active\",\n        typeName: \"boolean\"\n      }\n    }} mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    <ForwardRefAsExoticComponentDoc component={Panel.Tab.Group} docPath=\"/components/panel\" mdxType=\"ForwardRefAsExoticComponentDoc\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelBlockModifierProps = {\n  active?: boolean;\n};\n\nexport type PanelBlockProps = HelpersProps & PanelBlockModifierProps;\n\nexport const PanelBlock = forwardRefAs<PanelBlockProps>(\n  ({ active, className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-block\", { \"is-active\": active }, className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelBlock.displayName = \"Panel.Block\";\nPanelBlock.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelHeadingProps = HelpersProps;\n\nexport const PanelHeading = forwardRefAs<PanelHeadingProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-heading\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelHeading.displayName = \"Panel.Heading\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelIconProps = HelpersProps;\n\nexport const PanelIcon = forwardRefAs<PanelIconProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-icon\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"span\" },\n);\n\nPanelIcon.displayName = \"Panel.Icon\";\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\n\nexport type PanelTabGroupProps = HelpersProps;\n\nexport const PanelTabGroup = forwardRefAs<PanelTabGroupProps>(\n  ({ className, ...rest }, ref) => (\n    <Generic\n      className={classNames(\"panel-tabs\", className)}\n      ref={ref}\n      {...rest}\n    />\n  ),\n  { as: \"div\" },\n);\n\nPanelTabGroup.displayName = \"Panel.Tab.Group\";\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { PanelTabGroup } from \"./panel-tab-group\";\n\nexport type PanelTabModifierProps = {\n  active?: boolean;\n};\n\nexport type PanelTabProps = HelpersProps & PanelTabModifierProps;\n\nexport const PanelTab = Object.assign(\n  forwardRefAs<PanelTabProps>(\n    ({ active, className, ...rest }, ref) => (\n      <Generic\n        className={classNames({ \"is-active\": active }, className)}\n        ref={ref}\n        {...rest}\n      />\n    ),\n    { as: \"a\" },\n  ),\n  { Group: PanelTabGroup },\n);\n\nPanelTab.displayName = \"Panel.Tab\";\nPanelTab.propTypes = {\n  active: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { HelpersProps } from \"../../base/helpers\";\nimport { PanelBlock } from \"./panel-block\";\nimport { PanelHeading } from \"./panel-heading\";\nimport { PanelIcon } from \"./panel-icon\";\nimport { PanelTab } from \"./panel-tab\";\n\nexport type PanelProps = HelpersProps;\n\nexport const Panel = Object.assign(\n  forwardRefAs<PanelProps>(\n    ({ className, ...rest }, ref) => (\n      <Generic className={classNames(\"panel\", className)} ref={ref} {...rest} />\n    ),\n    { as: \"nav\" },\n  ),\n  {\n    Block: PanelBlock,\n    Heading: PanelHeading,\n    Icon: PanelIcon,\n    Tab: PanelTab,\n  },\n);\n\nPanel.displayName = \"Panel\";\n"],"sourceRoot":""}